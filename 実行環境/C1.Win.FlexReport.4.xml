<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>C1.Win.FlexReport.4</name>
  </assembly>
  <members>
    <member name="T:C1.Win.FlexReport.CheckBoxField">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内のチェックボックスを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CheckBoxField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.CheckBoxField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.Value">
      <summary>CheckBoxField の値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.Text">
      <summary>フィールドのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.ThreeState">
      <summary>CheckBoxField で、2 種類ではなく 3 種類のチェック状態を可能にするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.CheckMark">
      <summary>
        チェックマークの外観を定義する
        <see cref="P:C1.Win.FlexReport.CheckBoxField.CheckMark" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.CheckAlign">
      <summary>CheckBoxField オブジェクト内のチェックマークの水平または垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.CheckMarkStyle">
      <summary>チェックマークのスタイルを取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.Standard">
      <summary>CheckBoxField のチェックマークは、標準の CheckBox コントロールと同様の外観になり、同じ画像が使用されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CheckBox">
      <summary>チェックマークは、Wingdings フォントの特殊文字を使用して描画されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CrossBox">
      <summary>チェックマークは、Wingdings フォントの特殊文字を使用して描画されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.RadioButton">
      <summary>チェックマークは、Wingdings フォントの特殊文字を使用して描画されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CustomSymbol">
      <summary>カスタムシンボルを使用してチェックマークをレンダリングします。シンボルは、CheckSymbol、UncheckedSymbol、および IndeterminateSymbol プロパティで指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.CheckMark">
      <summary>CheckBoxField のチェックマークのビジュアルプロパティを定義します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.Style">
      <summary>
        チェックマークのスタイルを取得または設定します。詳細は、
        <see cref="T:C1.Win.FlexReport.CheckMarkStyle" />列挙を参照してください。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.CheckedSymbol">
      <summary>
        <see cref="P:C1.Win.FlexReport.CheckMark.Style" />が CustomSymbol である場合のオン状態のマークの外観を定義するシンボルを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.UncheckedSymbol">
      <summary>
        <see cref="P:C1.Win.FlexReport.CheckMark.Style" />が CustomSymbol である場合のオフ状態のマークの外観を定義するシンボルを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.IndeterminateSymbol">
      <summary>
        <see cref="P:C1.Win.FlexReport.CheckMark.Style" />が CustomSymbol である場合の不確定状態のチェックマークの外観を定義するシンボルを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.CheckedImage">
      <summary>
        <see cref="P:C1.Win.FlexReport.CheckMark.Style" />が CustomImage である場合のオン状態のマークの外観を定義する画像を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.UncheckedImage">
      <summary>
        <see cref="P:C1.Win.FlexReport.CheckMark.Style" />が CustomImage である場合のオフ状態のマークの外観を定義する画像を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.IndeterminateImage">
      <summary>
        <see cref="P:C1.Win.FlexReport.CheckMark.Style" />が CustomImage である場合の不確定状態のマークの外観を定義する画像を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.Font">
      <summary>チェックマークシンボルの描画に使用されるフォントを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.CheckMark.OnPropertyChanged(System.String)">
      <summary>
        <see cref="!:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されるプロパティの名前。</param>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphItem">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphField" />内のテキストフラグメントを表す基本クラス。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItem.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphItem" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItem.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">オブジェクトの名前をコピーするかどうかを示します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.Owner">
      <summary>
        このオブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.ParagraphField" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.Background">
      <summary>
        オブジェクトの背景を定義する
        <see cref="!:C1BackgroundBase" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.BackColor">
      <summary>
        フィールドの背景色を取得または設定します。このプロパティは、
        <see cref="T:C1.Win.C1Document.C1SolidBrush" />を使用して、
        <see cref="P:C1.Win.FlexReport.ParagraphItem.Background" />プロパティを介して機能します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.Hyperlink">
      <summary>現在の項目に関連付けられているハイパーリンクを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphText">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphField" />内のテキストランを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphText.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphText" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.ForeColor">
      <summary>フィールドの前景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.Font">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphText" />のフォントを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.Text">
      <summary>テキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.Format">
      <summary>フィールド値の書式設定に使用される文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.ParagraphText.Format" />プロパティを使用して、数値、日付、時刻、およびテキストを 表示および印刷する方法をカスタマイズできます。
        </para>
        <para>
          たとえば、
          <b>Price</b>フィールドを作成した場合に、その
          <see cref="P:C1.Win.FlexReport.ParagraphText.Format" />プロパティを「Currency」に設定できます。これで、フィールド値が「4321.678」の場合は、「$4,321.68」とレンダリングされます。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.ParagraphText.Format" />プロパティを使用して、数値（通貨およびパーセント値を含む）、日付、boolean 値、および文字列を書式設定できます。
        </para>
        <para>
          この書式文字列の構文は、.NET の
          <see cref="M:System.String.Format(System.String,System.Object)" />メソッドで使用される構文と同じです。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphItemCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphItem" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Add(System.String)">
      <summary>
        コレクションに
        <see cref="T:C1.Win.FlexReport.ParagraphText" />オブジェクトを追加します。
      </summary>
      <returns>
        追加された
        <see cref="T:C1.Win.FlexReport.ParagraphText" />オブジェクトを返します。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Add(C1.Win.FlexReport.ParagraphItem)">
      <summary>
        コレクションに
        <see cref="T:C1.Win.FlexReport.ParagraphItem" />オブジェクトを追加します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスの項目をコレクションから削除します。</summary>
      <param name="index">削除する項目のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Remove(C1.Win.FlexReport.ParagraphItem)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.FlexReport.ParagraphItem" />オブジェクトを削除します。
      </summary>
      <param name="item">
        削除する
        <see cref="T:C1.Win.FlexReport.ParagraphItem" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Clear">
      <summary>コレクションをクリアします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphField">
      <summary>書式設定されたテキストの段落を表示するフィールドを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ParagraphField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphField.Content">
      <summary>
        段落オブジェクトの内容を定義する
        <see cref="T:C1.Win.FlexReport.ParagraphItemCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.RtfField">
      <summary></summary>
    </member>
    <member name="M:C1.Win.FlexReport.RtfField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.RtfField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.Text">
      <summary>RTF テキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.DetectUrls">
      <summary>
        テキスト内で URL（Uniform Resource Locator）が見つかった場合に、現在の
        <see cref="T:C1.Win.FlexReport.RtfField" />が その URL を自動的に書式設定するかどうかを示す値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.Align">
      <summary>フィールド内にテキストを配置する方法を取得または設定します。このプロパティは、RTF テキストが RTF の開始/終了タグ「{\rtf1」および「}」で囲まれていない場合にのみ、フィールドの動作に影響します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.ForeColor">
      <summary>フィールドの前景色を取得または設定します。このプロパティは、RTF テキストが RTF の開始/終了タグ「{\rtf1」および「}」で囲まれていない場合にのみ、フィールドの動作に影響します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.Font">
      <summary>フィールドのフォントを取得または設定します。このプロパティは、RTF テキストが RTF の開始/終了タグ「{\rtf1」および「}」で囲まれていない場合にのみ、フィールドの動作に影響します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ShapeField">
      <summary></summary>
    </member>
    <member name="M:C1.Win.FlexReport.ShapeField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ShapeField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.ShapeType">
      <summary>
        現在のフィールドによって描画される幾何学図形のタイプを取得または設定します。このプロパティには、
        <b>None</b>を指定でき、その場合はフィールドに図形が描画されません。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.Shape">
      <summary>
        このフィールドによって描画される幾何学図形のプロパティを指定する
        <see cref="T:C1.Win.C1Document.ShapeBase" />派生クラスのインスタンスを 取得または設定します。
      </summary>
      <seealso cref="P:C1.Win.FlexReport.ShapeField.ShapeType" />
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.Line">
      <summary>
        図形の描画に使用される線のスタイルを定義する
        <see cref="P:C1.Win.FlexReport.ShapeField.Line" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.ShapeBackColor">
      <summary>図形の内部領域の塗りつぶしに使用する色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.ShapeBackground">
      <summary>
        図形の内部領域の塗りつぶしに使用する
        <see cref="!:C1Shape" />派生オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SubreportField">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />でサブレポートを表示するために使用されるフィールド。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubreportField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.SubreportField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.Subreport">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.SubreportField" />内にレンダリングされる別の
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトへの参照を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.SubreportFilter">
      <summary>
        サブレポートのメインデータソースに使用されるフィルタ式を定義する
        <see cref="T:C1.Win.FlexReport.ScriptStringValue" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.ParameterValues">
      <summary>
        サブレポートのパラメータに割り当てられる値の名前付きリストを表す
        <see cref="T:C1.Win.FlexReport.SubreportParameterValues" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.OutlinesVisible">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.SubreportField" />に関連付けられたレポートのレンダリング時に 生成されるアウトラインを表示するかどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.TextField">
      <summary>レポート内にテキストを表示する単純なフィールドを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.TextField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextField.Text">
      <summary>テキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextField.Format">
      <summary>フィールド値の書式設定に使用される文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.TextField.Format" />プロパティを使用して、数値、日付、時刻、およびテキストを 表示および印刷する方法をカスタマイズできます。
        </para>
        <para>
          たとえば、
          <b>Price</b>フィールドを作成した場合に、その
          <see cref="P:C1.Win.FlexReport.TextField.Format" />プロパティを「Currency」に設定できます。これで、フィールド値が「4321.678」の場合は、「$4,321.68」とレンダリングされます。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.TextField.Format" />プロパティを使用して、数値（通貨およびパーセント値を含む）、日付、boolean 値、および文字列を書式設定できます。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.TextFieldBase">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />
        <see cref="T:C1.Win.FlexReport.TextField" />および
        <see cref="T:C1.Win.FlexReport.ParagraphField" />内のテキストフィールドの基本クラス。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.TextFieldBase.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.TextFieldBase" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.WritingMode">
      <summary>水平方向（デフォルト）、垂直方向に左から右へなど、テキストの書字モードを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.Align">
      <summary>フィールド内にテキストを配置する方法を取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.FieldAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.ForeColor">
      <summary>フィールドの前景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.WordWrap">
      <summary>フィールドのコンテンツがフィールド四角形内で折り返されるかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.Font">
      <summary>フィールドのフォントを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportHyperlink">
      <summary>レポート内のハイパーリンクを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportHyperlink.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportHyperlink" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportHyperlink.AssignFrom(C1.Win.FlexReport.ReportHyperlink)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportHyperlink.StatusText">
      <summary>
        マウスポインタをリンクの上に置いたときに、ステータス行に表示されるテキスト（ドキュメントが
        <b>C1FlexViewer</b>に表示される場合）。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportHyperlink.LinkTarget">
      <summary>現在のハイパーリンクのリンク先を決定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetBase">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportHyperlink" />のリンク先を表します。これは、次の派生クラスの抽象基本クラスです。
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetBookmark" />,
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetUrl" />.
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetBase.AssignFrom(C1.Win.FlexReport.ReportLinkTargetBase)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetBookmark">
      <summary>
        レポート内のある位置を指す
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetBase" />を 記述します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetBookmark.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetBookmark" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetBookmark.Bookmark">
      <summary>ドキュメント内のブックマークを取得または設定します。ブックマークは、Bookmark プロパティを使用してレポートのオブジェクトに関連付けることができます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetUrl">
      <summary>
        外部ドキュメント（ファイルまたは URL）を指す
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetBase" />を記述します。ハイパーリンクジャンプは、
        <b>ShellExecute</b>（OS shell API）を使用して実行されるため、結果は オペレーティングシステムとインストールされているプログラムによって異なります。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetUrl.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetUrl" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetUrl.#ctor(System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetUrl" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="target">
        <see cref="P:C1.Win.FlexReport.ReportLinkTargetUrl.Url" />プロパティの値。
      </param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetUrl.Url">
      <summary>
        <b>ShellExecute</b>を使用して開かれるファイルまたは URL を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.VisualReportObject">
      <summary>
        すべてのビジュアルレポートオブジェクト（
        <see cref="T:C1.Win.FlexReport.FieldBase" />、
        <see cref="T:C1.Win.FlexReport.Section" />、
        <see cref="T:C1.Win.FlexReport.SubSection" />など）の基本クラス。Border、Background などの共通のビジュアルプロパティを定義します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.VisualReportObject.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.VisualReportObject" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.Border">
      <summary>
        オブジェクトの周囲の境界線を定義する
        <see cref="P:C1.Win.FlexReport.VisualReportObject.Border" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.BordersSplitVertMode">
      <summary>オブジェクト の高さが大きすぎて、複数のページに分割される場合に、境界線を描画する方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.BordersSplitHorzMode">
      <summary>オブジェクト の幅が広すぎて、水平方向に複数のページに分割される場合に、境界線を描画する方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.Background">
      <summary>
        オブジェクトの背景を定義する
        <see cref="!:C1BackgroundBase" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.BackColor">
      <summary>
        フィールドの背景色を取得または設定します。このプロパティは、
        <see cref="!:C1SolidBrush" />を使用して、
        <see cref="P:C1.Win.FlexReport.VisualReportObject.Background" />プロパティを介して機能します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.OutlineLabel">
      <summary>
        アウトラインツリー内のオブジェクトのラベルを表す
        <see cref="T:C1.Win.FlexReport.ScriptStringValue" />を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.OutlineParent">
      <summary>アウトラインツリー内でこのオブジェクトの親として使用されるオブジェクトの名前を 取得または設定します。デフォルトでは、このプロパティは null です。これは、デフォルトのレポート階層を使用して親が決定されることを意味します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.Bookmark">
      <summary>現在のオブジェクトに関連付けられているブックマークを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.IReportScriptContext">
      <summary>スクリプトの評価と実行のローカルコンテキストを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IReportScriptContext.GetObjectByName(System.String)">
      <summary>名前に基づいてオブジェクトを取得します。</summary>
      <param name="name">取得するオブジェクトの名前。</param>
      <returns>名前で指定されたオブジェクト。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IReportScriptContext.IsNameDefined(System.String)">
      <summary>指定された名前が現在のコンテキストに存在するかどうかをテストします。ある名前がコンテキストによって定義されている（つまり、このメソッドが true を返す）場合は、同様の名前のオブジェクトがすでに存在していても、その名前のオブジェクトが コンテキストから取得されます。</summary>
      <param name="name">テストする名前。</param>
      <returns>名前がコンテキストに存在する場合は true、そうでない場合は false。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.GrowShrinkModeEnum">
      <summary>CanGrow/CanShrink フィールドを処理するためのロジックを指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report" />クラスの
        <see cref="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report">
      <summary>標準の C1FlexReport モードを使用します。このモードでは、フィールドが拡大または縮小すると、その真下にあるフィールドにだけ影響します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.GrowShrinkModeEnum.Access">
      <summary>MS Access と同じモードを使用します。このモードでは、フィールドが拡大または縮小すると、それより下にあるすべてのフィールドが、拡大または縮小したフィールドに水平方向に重なっていなくても影響を受けます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportEventHandler">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" />、
        <see cref="E:C1.Win.FlexReport.C1FlexReport.EndPage" />、
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartSection" />、
        <see cref="E:C1.Win.FlexReport.C1FlexReport.PrintSection" />、および
        <see cref="!:C1FlexReport.EndSection" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportEventArgs">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" />、
        <see cref="E:C1.Win.FlexReport.C1FlexReport.EndPage" />、
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartSection" />、
        <see cref="E:C1.Win.FlexReport.C1FlexReport.PrintSection" />、および
        <see cref="!:C1FlexReport.EndSection" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportEventArgs.Page">
      <summary>現在のページ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportEventArgs.Section">
      <summary>現在のセクション。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportErrorEventHandler">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">
        イベントデータを定義する
        <see cref="T:C1.Win.FlexReport.ReportErrorEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportErrorEventArgs">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントにイベントデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportErrorEventArgs.Page">
      <summary>現在のページ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportErrorEventArgs.Exception">
      <summary>
        エラーの原因となった
        <see cref="F:C1.Win.FlexReport.ReportErrorEventArgs.Exception" />。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportErrorEventArgs.Handled">
      <summary>
        コンポーネントが、検出された
        <see cref="F:C1.Win.FlexReport.ReportErrorEventArgs.Exception" />を生成するか、それともエラーを無視してレポートのレンダリングを続行するかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportGetScriptObjectEventHandler">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportGetScriptObjectEventArgs">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject" />イベントにイベントデータを提供します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.#ctor(System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportGetScriptObjectEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="name">オブジェクトの名前。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.Name">
      <summary>スクリプトで使用されるオブジェクトの名前を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.Object">
      <summary>
        <see cref="P:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.Name" />プロパティで指定した名前に関連付けられたオブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.C1FlexReport">
      <summary>水平区切りデータベースレポートを生成します。生成されたレポートは、プリンタにレンダリングしたり、プレビューしたり、さまざまな移植可能な形式（XPS、HTML、PDF など）にエクスポートすることができます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Write(C1.Win.C1Document.Serialization.C1WriterBase)">
      <summary>
        高度な永続性機構を提供するために派生クラスでオーバーライドされます。追加のオブジェクトプロパティを記述するには、
        <see cref="T:C1.Win.C1Document.Serialization.C1WriterBase" />メソッドを使用します。
      </summary>
      <param name="writer">
        <see cref="T:C1.Win.C1Document.Serialization.C1WriterBase" />オブジェクトは、追加情報を記述するためのメソッドを提供します。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.ReadProp(C1.Win.C1Document.Serialization.C1ReaderBase)">
      <summary>
        高度な永続性機構を提供するために派生クラスでオーバーライドされます。現在のプロパティの名前を特定するには、
        <see cref="P:C1.Win.C1Document.Serialization.C1ReaderBase.PropName" />を使用します。プロパティ値を読み取るには、C1ReaderBase.ReadXXX(...) を使用します。
      </summary>
      <param name="reader">
        <see cref="T:C1.Win.C1Document.Serialization.C1ReaderBase" />オブジェクトは、プロパティ値を読み取るためのメソッドとプロパティを提供します。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnStartReport">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartReport" />イベントを発生させます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnEndReport">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.EndReport" />イベントを発生させます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnGetScriptObject(System.String)">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject" />イベントを発生させます。
      </summary>
      <param name="name">オブジェクトの名前。</param>
      <returns>指定された名前に関連付けられているオブジェクトを返します。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnReportError(System.Int32,System.Exception,System.Boolean)">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントを発生させます。
      </summary>
      <param name="pageNo">エラーが発生したページの番号（0 から始まる）。</param>
      <param name="exception">発生した例外。</param>
      <param name="fatal">
        コンポーネントが、検出された
        <paramref name="exception" />を生成するか、それともエラーを無視してレポートのレンダリングを続行するかを示します。
      </param>
      <returns>
        レポートのレンダリングを停止する場合は
        <b>true</b>、そうでない場合は
        <b>false</b>を返します。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnNoReportData">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.NoData" />イベントを発生させます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnPrintSection(C1.Win.FlexReport.Section)">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.PrintSection" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.FlexReport.ReportEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnStartSection(C1.Win.FlexReport.Section)">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartSection" />イベントを発生させます。
      </summary>
      <param name="section">
        <see cref="T:C1.Win.FlexReport.Section" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnStartPage(System.Int32)">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" />イベントを発生させます。
      </summary>
      <param name="pageNo">開始したページの番号。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnEndPage(System.Int32)">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.EndPage" />イベントを発生させます。
      </summary>
      <param name="pageNo">終了したページの番号。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnReportDefinitionChanged">
      <summary>
        <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportDefinitionChanged" />イベントを発生させます。レポートまたはすべてのネストしたオブジェクトのプロパティが変更されるたびに呼び出されます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.CurrentDataScope">
      <summary>内部使用。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.PageSettings">
      <summary>
        オーバーライドされます。これは、
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" />プロパティから返される
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" />オブジェクトの プロパティへのショートカットです。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ActualCulture">
      <summary>
        レポートで実際に使用されるカルチャを取得します。
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Culture" />が null の場合は、
        <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />を返します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Culture">
      <summary>
        レポートのカルチャを指定する
        <see cref="T:System.Globalization.CultureInfo" />を取得または設定します。このカルチャは、文字列と値の間の変換に影響します。デフォルトは
        <b>null</b>です。これは、
        <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />が使用されることを意味します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.SupportedExportProviders">
      <summary>オーバーライドされます。現在のドキュメントソースオブジェクトがサポートするエクスポータの配列を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Features">
      <summary>
        オーバーライドされます。
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />の機能を定義する
        <see cref="T:C1.Win.C1Document.C1DocumentSourceFeatures" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Credential">
      <summary>レポートのレンダリング時に使用されるデフォルトの資格情報を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Document">
      <summary>
        レポートのレンダリング時に現在の
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />によって作成された
        <see cref="N:C1.Win.C1Document" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DocumentName">
      <summary>
        オーバーライドされます。この
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトのユーザーフレンドリな名前を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ReportName">
      <summary>レポートの名前（Load メソッドで使用）を取得または設定します。</summary>
      <remarks>
        <para>レポートをレポート定義ファイルに保存するときに、このプロパティでレポートを識別します。</para>
        <para>
          レポートをレポート定義ファイルから取得するには、
          <see cref="M:C1.Win.FlexReport.C1FlexReport.Load(System.String,System.String)" />メソッドを使用し、この名前をパラメータとして渡します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Fields">
      <summary>
        レポート定義内の
        <see cref="T:C1.Win.FlexReport.Field" />オブジェクトのコレクションを取得します。
      </summary>
      <remarks>
        <see cref="T:C1.Win.FlexReport.Section" />オブジェクトには、そのセクション内のフィールドのコレクションも含まれます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DataSources">
      <summary>
        レポートで使用される
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" />オブジェクトのコレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Sections">
      <summary>
        レポート定義内の
        <see cref="T:C1.Win.FlexReport.Section" />オブジェクトのコレクションを取得します。
      </summary>
      <remarks>このコレクションには、常に少なくとも 5 つの項目が含まれます。これらの項目は、常に表示される標準のレポートセクション、Detail、Header、Footer、PageHeader、PageFooter に対応します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Parameters">
      <summary>レポートの生成に使用されるパラメータのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Groups">
      <summary>レポート内のすべてのグループを含むコレクションを取得します。</summary>
      <remarks>
        <para>
          <b>Groups</b>コレクションには、現在のレポートで定義されているすべての
          <see cref="T:C1.Win.FlexReport.Group" />オブジェクトが含まれます。
        </para>
        <para>
          コレクションから
          <b>Group</b>を削除すると、関連付けられているヘッダーセクションとフッターセクション、およびこれらのセクション内の すべてのフィールドも削除されます。
        </para>
        <para>
          コレクションに
          <b>Group</b>を追加すると、対応するグループヘッダーセクションとグループフッターセクションがレポートに追加されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.FileName">
      <summary>レポートのロード元のファイル、またはレポートが保存されているファイルの名前を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Font">
      <summary>新しいフィールドのデフォルトフォントを取得または設定します。</summary>
      <remarks>このプロパティは、レポートのレンダリング時には直接使用されません。新しいフィールドのデフォルトフォントとして使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Tag">
      <summary>呼び出し側のプログラムで必要な追加のデータを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ReportInfo">
      <summary>
        レポートのメタデータを含む
        <see cref="P:C1.Win.FlexReport.C1FlexReport.ReportInfo" />オブジェクトを取得または設定します。
      </summary>
      <remarks>
        <para>レポートには、タイトル、作成者、キーワードなどの一般情報を含めることができます。</para>
        <para>（コンテンツや構造とは異なり）このようなドキュメント自体に関するグローバル情報は メタデータと呼ばれ、外部データベースでレポートやレポート定義を カタログ化したり検索するために利用することを目的としています。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DataSource">
      <summary>
        レポートのメイン
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" />オブジェクトへの参照、またはレポートが連結されない場合は null を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DataSourceName">
      <summary>
        <b>メイン</b>レポートデータソースとして使用される
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSources" />コレクションから データソースの名前を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Layout">
      <summary>
        レポートの
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" />オブジェクトへの参照を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.MaxPages">
      <summary>1 つのレポートに許可される最大ページ数を取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、レポート内のページの最大数を制限する場合に役立ちます。</para>
        <para>たとえば、プレビューウィンドウにレポートの最初の 5 ページだけを表示するような レポートデザイナを記述できます。</para>
        <para>このプロパティを 0 に設定すると、任意の長さのレポートが許可されます。</para>
        <para>
          <see cref="!:C1.C1FlexReport.DataSource.MaxRecords" />プロパティを設定してレポートの大きさを 制限することもできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DoEvents">
      <summary>レポートを同期モードでレンダリング中に、コントロールが Windows のメッセージを処理するかどうかを指定します。</summary>
      <remarks>
        <para>このプロパティを true に設定すると、レポートを同期モードで生成中に、ユーザーがフォームをサイズ変更したり、ボタンをクリックすることができます。これにより、アプリケーションの応答性がよくなります。また、［レポートのキャンセル］ボタンを提供する場合は、true に設定する必要があります。そうしないと、レポートの生成が終わるまでユーザーがボタンをクリックできなくなります。</para>
        <para>このプロパティを false に設定すると、レポートが多少速くレンダリングされます。</para>
      </remarks>
      <example>
        <para>
          次のコードは、
          <see cref="T:C1.Win.FlexReport.C1FlexReport" />コンポーネントに関連付けられた［Render］ボタンと［Cancel］ボタンを実装します。
        </para>
        <para>
          ［Render］ボタンは、レポートのレンダリングを開始する前に
          <see cref="T:C1.Win.FlexReport.C1FlexReport" />コンポーネントがビジー状態かどうかをチェックします。コンポーネントがレポートのレンダリングを終了する前に、ユーザーが連続して［Render］ボタンをクリックする可能性があるため、この処理は必要です。コンポーネントがビジー状態のときに
          <see cref="M:C1.Win.FlexReport.C1FlexReport.Render" />メソッドを呼び出すと、
          <see cref="T:System.Exception" />が生成されます。
        </para>
        <para>
          ［Cancel］ボタンは、コンポーネントがレポートをレンダリングしているかどうかをチェックし、
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Cancel" />プロパティを true に設定します。
        </para>
        <code>
          <![CDATA[
          _c1r.DoEvents = true;
          
          private void Render_Click(object sender, EventArgs e)
          {
            if (_c1r.IsBusy)
            {
              Console.WriteLine("現在レンダリングできません。コンポーネントはビジーです。");
            }
            else
            {
              ppv.Document = c1r;
            }
          }
          
          private void Cancel_Click(object sender, EventArgs e)
          {
            if (_c1r.IsBusy)
            {
              _c1r.Cancel = true;
            }
            else
            {
              Console.WriteLine("キャンセルするレポートはありません。");
            }
          }
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Cancel">
      <summary>現在のレポートの生成をキャンセルするかどうかを指定します。</summary>
      <remarks>レポートの生成中にこのプロパティを true に設定すると、レポート生成処理が中止されます。すでに作成されたページはドキュメントに保持され、関連付けられた印刷プレビューコントロールで プレビューまたは印刷できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnOpen">
      <summary>
        レポートがレンダリングを開始するときに実行される
        <b>VBScript</b>を取得または設定します。
      </summary>
      <remarks>
        <para>
          このとき、コントロールは、
          <see cref="E:C1.Win.FlexReport.C1FlexReport.StartReport" />イベントも発生させます。
        </para>
        <para>通常のイベントと VBScript プロパティの違いは、通常のイベントのハンドラはアプリケーションに属しており、したがって、レポートからは独立した作業をサポートするために使用されることです。たとえば、レンダリングの開始時にメインウィンドウにメッセージを表示できます。</para>
        <para>このプロパティの VBScript ハンドラはレポートに属し、アプリケーションに関係なく実行されます。たとえば、レポートがレンダリングを開始するときに、VBScript コンテキスト内のグローバル変数をリセットする VBScript ハンドラを レポートに入れることができます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnClose">
      <summary>
        レポートがレンダリングを終了するときに実行される
        <b>VBScript</b>を取得または設定します。
      </summary>
      <remarks>
        <para>
          このとき、コントロールは、
          <see cref="E:C1.Win.FlexReport.C1FlexReport.EndReport" />イベントも発生させます。
        </para>
        <para>通常のイベントと VBScript プロパティの違いは、通常のイベントのハンドラはアプリケーションに属しており、したがって、レポートからは独立した作業をサポートするために使用されることです。たとえば、レンダリングの終了時にメインウィンドウにメッセージを表示できます。</para>
        <para>このプロパティの VBScript ハンドラはレポートに属し、アプリケーションに関係なく実行されます。たとえば、レポートがレンダリングを開始するときに、VBScript コンテキスト内のグローバル変数をリセットする VBScript ハンドラを レポートに入れることができます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnNoData">
      <summary>
        レポートがレンダリングを開始し、そのソースレコードセットが空の場合に実行される
        <b>VBScript</b>を取得または設定します。
      </summary>
      <remarks>
        <para>
          このとき、コントロールは、
          <see cref="E:C1.Win.FlexReport.C1FlexReport.NoData" />イベントも発生させます。
        </para>
        <para>通常のイベントと VBScript プロパティの違いは、通常のイベントのハンドラはアプリケーションに属しており、したがって、レポートからは独立した作業をサポートするために使用されることです。たとえば、データがないレポートのレンダリングをキャンセルできます。</para>
        <para>このプロパティの VBScript ハンドラはレポートに属し、アプリケーションに関係なく実行されます。たとえば、レポートには、ソースレコードセットが空の場合にフィールドの値を変更する VBScript ハンドラを 入れることができます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnPage">
      <summary>
        新しいページが作成されるときに実行される
        <b>VBScript</b>を取得または設定します。
      </summary>
      <remarks>
        <para>
          このとき、コントロールは、
          <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" />イベントも発生させます。
        </para>
        <para>通常のイベントと VBScript プロパティの違いは、通常のイベントのハンドラはアプリケーションに属しており、したがって、レポートからは独立した作業をサポートするために使用されることです。たとえば、これまでにレンダリングされたページ数を示すラベルを更新します。</para>
        <para>このプロパティの VBScript ハンドラはレポートに属し、アプリケーションに関係なく実行されます。たとえば、ページ区切りごとに変数を更新する VBScript ハンドラをレポートに入れることができます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnError">
      <summary>
        エラーが発生したときに実行される
        <b>VBScript</b>を取得または設定します。
      </summary>
      <remarks>
        <para>
          このとき、コントロールは、
          <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントも発生させます。
        </para>
        <para>通常のイベントと VBScript プロパティの違いは、通常のイベントのハンドラはアプリケーションに属しており、したがって、レポートからは独立した作業をサポートするために使用されることです。たとえば、エラーの発生時にアプリケーションのダイアログボックスを表示できます。</para>
        <para>このプロパティの VBScript ハンドラはレポートに属し、アプリケーションに関係なく実行されます。たとえば、レポートには、エラーが発生した場合にフィールドの値を変更する VBScript ハンドラを入れることができます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.GlobalScripts">
      <summary>
        グローバル
        <b>VBScript</b>モジュールを取得または設定します。ここで（標準の VBScript 構文を使用して）定義される関数とサブルーチンは、標準の VBScript 関数と同様に、現在のレポートの他のスクリプトで使用できます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.LabelOffset">
      <summary>一部が使用済みのシートの最初のラベルの位置を取得または設定します。</summary>
      <remarks>
        このプロパティを使用して、一部が使用済みのラベルシートにラベルを印刷できます。たとえば、1 枚のシートに 12 枚のラベルがあり、5 枚のラベルがすでに使用済みの場合は、
        <b>LabelOffset</b>プロパティを 6 に設定すると、すでに使用済みのラベルをスキップできます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode">
      <summary>CanGrow/CanShrink フィールドの処理に使用される方法を取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティが
          <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report" />に設定されている場合は、
          <see cref="P:C1.Win.FlexReport.Field.CanGrow" />または
          <see cref="P:C1.Win.FlexReport.Field.CanShrink" />プロパティが true に設定されているフィールドが 拡大または縮小すると、その真下にあるフィールドも移動します。下にあっても水平方向に重なっていないフィールドは移動しません。
        </para>
        <para>
          このプロパティが
          <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.Access" />に設定されている場合は、フィールドが 拡大または縮小すると、それより下にあるすべてのフィールドが、
          <b>CanGrow</b>/
          <b>CanShrink</b>の結果として 変更されたフィールドの真下にないフィールドであっても影響を受けます。これは、Microsoft Access の動作と同じです。
        </para>
        <para>
          たとえば、いくつかのフィールドがグリッドレイアウトで配置され、
          <see cref="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode" />が
          <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.Access" />に設定されている場合、上のフィールドが拡大または縮小しても、下のフィールドは各行内で垂直方向に揃ったままになります。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode" />が
          <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report" />に設定されている場合は、各列内のフィールドが他の列内のフィールドと独立して移動し、各行内のフィールドが垂直方向に揃わなくなります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.IgnoreScriptErrors">
      <summary>コンポーネントがデフォルトでスクリプトエラーを無視するかどうかを指定します。</summary>
      <remarks>
        <para>
          スクリプトインタープリタがスクリプトまたは式でエラーを見つけると、コンポーネントが
          <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントを生成します。このプロパティは、そのイベントの
          <b>Handled</b>パラメータのデフォルト値を指定します。
        </para>
        <para>
          <b>IgnoreScriptErrors</b>が true に設定されている場合、スクリプトエラーはデフォルトで 無視されます（
          <b>Handled</b>パラメータが true に初期化されます）。
        </para>
        <para>
          <b>IgnoreScriptErrors</b>が false に設定されている場合、スクリプトエラーはデフォルトで 例外を生成します（
          <b>Handled</b>パラメータが false に初期化されます）。
        </para>
        <para>
          どちらの場合も、
          <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントハンドラは、
          <b>Handled</b>パラメータの値を変更することで、デフォルトをオーバーライドできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ExposeScriptObjects">
      <summary>レポートのスクリプトオブジェクトがサブレポートに公開されるかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.RecordsPerPage">
      <summary>ページまたはグループごとにレンダリングする詳細レコードの数を取得または設定します。</summary>
      <remarks>
        <para>これは、出力するフォームに決まった数の行を表示する場合に便利です。</para>
        <para>レコード数が指定した値より大きい場合は、グループ区切りまたはページ区切りが 追加されて、各詳細セクショングループにレンダリングされるレコード数が制限されます。</para>
        <para>詳細レコード数が指定した値より小さい場合は、指定した数のレコードが詳細 セクショングループに含まれるように、空のレコードが追加されます。</para>
        <para>このプロパティを 0（デフォルト値）に設定した場合、プロパティは無効になります。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Page">
      <summary>現在のページ番号を取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティは、
          <b>VBScript</b>式で使用できるグローバル変数の 1 つです。
        </para>
        <para>このプロパティは、レポートのレンダリングが開始されるときにコントロールによって自動的に値 1 に初期化され、ページ区切りごとに値が自動的に 1 ずつ増えます。</para>
        <para>このプロパティは読み書き可能なので、スクリプトを使用してリセットできます。たとえば、新しいグループのレンダリングが 開始されるたびに現在のページを 1 にリセットできます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ParentReport">
      <summary>このサブレポートを含むメインレポートを取得します（これがメインレポートの場合は null）。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ReportDefinition">
      <summary>完全なレポート定義を含む XML 文字列を取得または設定します。</summary>
      <remarks>
        このプロパティを使用して、レポート定義をデータベースに保存したり、クリップボードに格納したり、レポートを
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />コンポーネント間でコピーすることができます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Watermark">
      <summary>
        レポートのウォーターマークのプロパティを定義する
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Watermark" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Overlay">
      <summary>
        レポートのオーバーレイのプロパティを定義する
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Watermark" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Clear">
      <summary>現在のレポートをクリアします。</summary>
      <remarks>
        <para>このメソッドは、現在のレポートからすべてのグループ、グループセクション、およびフィールドを削除します。</para>
        <para>
          また、
          <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" />オブジェクトと
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" />オブジェクトをリセットし、すべてのレポートに存在する固定セクション（
          <b>Detail</b>、
          <b>Header</b>、
          <b>Footer</b>、
          <b>PageHeader</b>、
          <b>PageFooter</b>）をクリアします（ただし、削除はしません）。
        </para>
        <para>このメソッドは、レポートをクリアし、最初から新しいレポートを作成する場合に使用します。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.IO.Stream,System.String,System.Boolean@)">
      <summary>ストリームに格納された XML レポート定義からレポートをロードします。</summary>
      <param name="stream">XML レポート定義を格納するストリーム。</param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <param name="converted">出力：レポート定義が古い C1Report 形式からインポートされた場合は true を保持します。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.IO.Stream,System.String)">
      <summary>ストリームに格納された XML レポート定義からレポートをロードします。</summary>
      <param name="stream">XML レポート定義を格納するストリーム。</param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.String,System.String,System.Boolean@)">
      <summary>XML レポート定義ファイルからレポートをロードします。</summary>
      <param name="fileName">XML レポート定義ファイルの完全名。</param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <param name="converted">出力：レポート定義が古い C1Report 形式からインポートされた場合は true を保持します。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.String,System.String)">
      <summary>XML レポート定義ファイルからレポートをロードします。</summary>
      <param name="fileName">XML レポート定義ファイルの完全名。</param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.Xml.XmlDocument,System.String,System.Boolean@)">
      <summary>
        <see cref="T:System.Xml.XmlDocument" />からレポートをロードします。
      </summary>
      <param name="doc">
        レポートが含まれる
        <see cref="T:System.Xml.XmlDocument" />への参照。
      </param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <param name="converted">出力：レポート定義が古い C1Report 形式からインポートされた場合は true を保持します。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.Xml.XmlDocument,System.String)">
      <summary>
        <see cref="T:System.Xml.XmlDocument" />からレポートをロードします。
      </summary>
      <param name="doc">
        レポートが含まれる
        <see cref="T:System.Xml.XmlDocument" />への参照。
      </param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.String)">
      <summary>現在のレポート定義をファイルに保存します。</summary>
      <param name="fileName">作成されるファイルの完全名。そのファイルがすでに存在する場合は上書きされます。</param>
      <remarks>このメソッドは、出力ファイルに画像やサブレポートを埋め込みません。サブレポートの名前だけを保存し、画像は外部ファイルに保存します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.String,System.Boolean)">
      <summary>現在のレポート定義をファイルに保存します。</summary>
      <param name="fileName">作成されるファイルの完全名。そのファイルがすでに存在する場合は上書きされます。</param>
      <param name="embedAll">画像とサブレポートを出力ファイルに埋め込むかどうか。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.String,System.Boolean,System.Boolean)">
      <summary>現在のレポート定義をファイルに保存します。</summary>
      <param name="fileName">作成されるファイルの完全名。そのファイルがすでに存在する場合は上書きされます。</param>
      <param name="embedImages">画像を出力ファイルに埋め込むかどうか。</param>
      <param name="embedSubReports">サブレポートを出力ファイルに埋め込むかどうか。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>現在のレポート定義をストリームに保存します。</summary>
      <param name="stream">保存先のストリーム。</param>
      <param name="embedImages">画像を出力ファイルに埋め込むかどうかを示します。</param>
      <param name="embedSubReports">サブレポートを出力ファイルに埋め込むかどうかを示します。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.Xml.XmlWriter)">
      <summary>
        現在のレポート定義を
        <see cref="T:System.Xml.XmlWriter" />オブジェクトに保存します。
      </summary>
      <param name="writer">
        レポート定義が保存される
        <see cref="T:System.Xml.XmlWriter" />オブジェクト。
      </param>
      <remarks>このメソッドは、出力ファイルに画像やサブレポートを埋め込みません。サブレポートの名前だけを保存し、画像は外部ファイルに保存します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.Xml.XmlWriter,System.Boolean)">
      <summary>現在のレポート定義を XmlWriter オブジェクトに保存します。</summary>
      <param name="writer">
        レポート定義が保存される
        <see cref="T:System.Xml.XmlWriter" />オブジェクト。
      </param>
      <param name="embed">画像とサブレポートを出力ストリームに埋め込むかどうか。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.Xml.XmlWriter,System.Boolean,System.Boolean)">
      <summary>現在のレポート定義を XmlWriter オブジェクトに保存します。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />オブジェクト。ここには、レポート定義が保存されます。
      </param>
      <param name="embedImages">画像を出力ストリームに埋め込むかどうか。</param>
      <param name="embedSubReports">サブレポートを出力ストリームに埋め込むかどうか。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.CopyDefinitionFrom(C1.Win.FlexReport.C1FlexReport)">
      <summary>
        別の
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />コンポーネントからレポート定義をコピーします。
      </summary>
      <param name="source">
        コピーするレポートが含まれる
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />。
      </param>
      <remarks>このメソッドはレポートのフィールドのクローンを作成しますが、フィールドのプロパティのシャローコピーを作成するだけです（そのため、サブレポートなどのクローンは作成されません）。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Evaluate(System.String)">
      <summary>
        現在のレポートコンテキストで
        <b>VBScript</b>式を評価します。
      </summary>
      <param name="expression">
        評価する
        <b>VBScript</b>式を含む文字列。
      </param>
      <returns>式の値。</returns>
      <remarks>
        <para>このメソッドを使用すると、レポートの生成時に評価されるとおりに式を評価できます。このメソッドは、デザイナのようなアプリケーションで、ユーザーがただちに式をテストできるウィンドウを提供する場合に 便利です。</para>
        <para>
          <b>expression</b>文字列の構文が有効でないか、評価エラーが発生すると、コントロールは
          <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントを発生させます。この場合、イベントの
          <i>Handled</i>パラメータは true に設定され、例外はデフォルトで無視されます。
        </para>
      </remarks>
      <example>
        <para>
          式には、次のような単純な
          <b>VBScript</b>式を指定することもできます。
        </para>
        <code>
          <![CDATA[
          Console.WriteLine(_c1r.Evaluate("2+2"));
          <i>4</i>
          
          Console.WriteLine(_c1r.Evaluate(" \"A\" &amp; \"B\" ");
          <i>AB</i>
          ]]>
        </code>
        <para>
          また、
          <b>Report</b>オブジェクトやそのサブオブジェクトへの参照を入れることもできます。次に例を示します。
        </para>
        <code>
          <![CDATA[
          Console.WriteLine(_c1r.Evaluate("Report.DataSource.RecordSource"));
          <i>SELECT * FROM Employees</i>
          
          Console.WriteLine(_c1r.Evaluate("Report.DataSource.Recordset.Fields.Count"));
          <i>7</i>
          
          Console.WriteLine(_c1r.Evaluate("Report.Fields(0).Name"));
          <i>FirstNameField</i>
          ]]>
        </code>
        <para>
          さらに、データフィールド、
          <see cref="T:C1.Win.FlexReport.Field" />オブジェクト、および
          <see cref="T:C1.Win.FlexReport.Section" />オブジェクトは、名前で直接参照できます。
        </para>
        <code>
          <![CDATA[
          Console.WriteLine(_c1r.Evaluate("FirstNameField.Value"));
          <i>Andrew</i>
          
          Console.WriteLine(_c1r.Evaluate("CategoryName"));
          <i>Beverages</i>
          ]]>
        </code>
      </example>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Evaluate(System.String,C1.Win.FlexReport.IReportScriptContext)">
      <summary>
        <b>VBScript</b>式を評価します。
      </summary>
      <param name="expression">
        評価する
        <b>VBScript</b>式を含む文字列。
      </param>
      <param name="context">
        式で使用できるオブジェクトを取得するために使用される
        <see cref="T:C1.Win.FlexReport.IReportScriptContext" />インタフェース。
      </param>
      <returns>式の値。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Execute(System.String)">
      <summary>
        現在のレポートコンテキストで
        <b>VBScript</b>文を実行します。
      </summary>
      <param name="statement">
        実行する
        <b>VBScript</b>命令を含む文字列。
      </param>
      <remarks>
        <para>
          このメソッドは、値を返さないこと以外は、
          <see cref="M:C1.Win.FlexReport.C1FlexReport.Evaluate(System.String)" />メソッドと同じです。
        </para>
        <para>
          <b>expression</b>文字列の構文が有効でないか、評価エラーが発生すると、コントロールは
          <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" />イベントを発生させます。この場合、イベントの
          <i>Handled</i>パラメータは true に設定され、例外はデフォルトで無視されます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Execute(System.String,C1.Win.FlexReport.IReportScriptContext)">
      <summary>
        <b>VBScript</b>文を実行します。
      </summary>
      <param name="statement">
        実行する
        <b>VBScript</b>命令を含む文字列。
      </param>
      <param name="context">
        式で使用できるオブジェクトを取得するために使用される
        <see cref="T:C1.Win.FlexReport.IReportScriptContext" />インタフェース。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.ParseExpression(System.String)">
      <summary>
        現在のレポートコンテキストで
        <b>VBScript</b>式を解析します。
      </summary>
      <param name="expression">
        解析する
        <b>VBScript</b>式を含む文字列。
      </param>
      <returns>
        式が無効な場合は
        <see cref="T:System.Exception" />、エラーが検出されなかった場合は null。
      </returns>
      <remarks>
        このメソッドは、デザイナアプリケーションで
        <b>VBScript</b>の構文チェックを提供する場合に便利です。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.ParseStatement(System.String)">
      <summary>
        現在のレポートコンテキストで
        <b>VBScript</b>文を解析します。
      </summary>
      <param name="statement">
        解析する
        <b>VBScript</b>文を含む文字列。
      </param>
      <returns>
        文が無効な場合は
        <see cref="T:System.Exception" />、エラーが検出されなかった場合は null。
      </returns>
      <remarks>
        このメソッドは、デザイナアプリケーションで
        <b>VBScript</b>の構文チェックを提供する場合に便利です。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Render">
      <summary>レポートをレンダリングします。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderAsync">
      <summary>
        <see cref="M:C1.Win.FlexReport.C1FlexReport.Render" />メソッドの非ブロック（非同期）バージョン。
      </summary>
      <seealso cref="M:C1.Win.FlexReport.C1FlexReport.Render" />
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.FormatVersion">
      <summary>
        XML 定義ファイルの形式を定義する
        <see cref="T:C1.Win.C1Document.Serialization.C1FormatVersion" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.IO.Stream)">
      <summary>XML レポート定義ファイルに含まれるレポートのリストを取得します。</summary>
      <param name="stream">XML レポート定義を格納するストリームを保持します。</param>
      <returns>XML 定義内のすべてのレポートの名前を含む文字列配列。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)">
      <summary>XML レポート定義ファイルに含まれるレポートのリストを取得します。</summary>
      <param name="fileName">XML レポート定義ファイルの完全名を含みます。</param>
      <returns>XML ファイル内のすべてのレポートの名前を含む文字列配列。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.XmlDocument)">
      <summary>
        <see cref="T:System.Xml.XmlDocument" />に含まれるレポートのリストを取得します。
      </summary>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" />オブジェクトへの参照。
      </param>
      <returns>
        <b>XmlDocument</b>内のすべてのレポートの名前を含む文字列配列。
      </returns>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.RenderCompleted">
      <summary>
        <see cref="M:C1.Win.FlexReport.C1FlexReport.RenderAsync" />メソッドが完了したときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.ReportDefinitionChanged">
      <summary>レポート定義が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.StartReport">
      <summary>コントロールがレポートのレンダリングを開始し、データソースを開いてパラメータをチェックする前に発生します。</summary>
      <remarks>
        <para>このイベントを使用して、ユーザーにフィードバックを提供したり、データソースのプロパティを 変更することができます。</para>
        <para>
          たとえば、ユーザーに情報の入力を求め、それに応じて
          <see cref="!:C1.C1Report.DataSource.RecordSource" />プロパティを変更することで、独自の方法によるパラメータクエリーを 実装できます。
        </para>
        <para>
          このイベントを使用して、
          <see cref="T:System.Data.DataTable" />オブジェクトを レポートの
          <see cref="P:C1.Win.FlexReport.DataSource.Recordset" />プロパティに直接割り当てることもできます。すでにレポートデータを所有しているアプリケーションは、この方法で、
          <see cref="T:C1.Win.FlexReport.C1FlexReport" />が データのコピーを独自にロードしないようにして、時間を節約する 必要があります。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.EndReport">
      <summary>コントロールがレポートのレンダリングを終了すると発生します。</summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.ReportError">
      <summary>レポートのレンダリング中にエラーがあると発生します。</summary>
      <remarks>
        <para>レポートのレンダリング時に最もよく検出されるエラーは次のとおりです。</para>
        <para>
          1) 無効な接続文字列か無効な SQL クエリーです。これは通常、システムが指定のデータベースを開くことができなかったか（サーバーがオフラインである、またはデータベースファイルが指定の場所にない）、
          <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" />で使用される SQL 構文にエラーがあることを示します。
        </para>
        <para>2）スクリプトの実行エラーまたは式の評価エラー。これは通常、使用される VBScript 式に構文エラーが あることを示します。このような場合は、例外メッセージを確認してください。通常は、エラーの発生原因に関する 適切な説明が記述されています。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject">
      <summary>レポートスクリプトまたは式中で不明なオブジェクトが検出されると発生します。</summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.NoData">
      <summary>コントロールがレポートのレンダリングを開始し、メインレポートのデータソースが空の場合に発生します。</summary>
      <remarks>
        <para>このイベントを使用して、ソースレコードセットが空の場合にレポートのレンダリングをキャンセルできます。</para>
        <para>レポートをキャンセルしない場合、そのレポートは非連結レポート（基底のデータがない自己完結型レポート）として レンダリングされます。</para>
      </remarks>
      <example>
        次のコードは、レポートにデータがない場合に、そのレポートをキャンセルします。
        <code>
          <![CDATA[
          private void c1r_NoData(object sender, EventArgs e)
          {
            _c1r.Cancel = true;
          }
          ]]>
        </code>
      </example>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.StartSection">
      <summary>
        各
        <see cref="T:C1.Win.FlexReport.Section" />が書式設定される前に発生します。
      </summary>
      <remarks>
        <para>このイベントが発生した時点では、レポートフィールドは現在の値またはサイズで更新されていません。</para>
        <para>このイベントは、現在のデータ値に基づいてフィールドの書式設定パラメータや表示状態を設定する場所として適しています。</para>
        <para>
          このイベントは、
          <see cref="P:C1.Win.FlexReport.Section.OnFormat" />スクリプトプロパティと同じ機能です。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.PrintSection">
      <summary>
        各
        <see cref="T:C1.Win.FlexReport.Section" />が印刷される前に発生します（セクションを書式設定した後）。
      </summary>
      <remarks>
        <para>このイベントが発生した時点では、フィールドの値とサイズがコントロールによって設定されています。</para>
        <para>
          この値は変更できますが、フィールドのレイアウトには影響しません。たとえば、ここで、フィールドの
          <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティを変更しても、フィールドは拡大または縮小されません。
        </para>
        <para>
          このイベントは、
          <see cref="P:C1.Win.FlexReport.Section.OnPrint" />スクリプトプロパティと同じ機能です。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.StartPage">
      <summary>コントロールが各ページのレンダリングを開始すると発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーインタフェースを更新して、これまでに印刷されたページ数を表示する場合に使用できます。</para>
        <para>
          このイベントの処理中に
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Cancel" />プロパティを使用して、レポートのレンダリングをキャンセルできます。印刷できるページ数を制限するには、
          <see cref="P:C1.Win.FlexReport.C1FlexReport.MaxPages" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.EndPage">
      <summary>コントロールが各ページのレンダリングを終了すると発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーインタフェースを更新して、これまでに印刷されたページ数を表示する場合に使用できます。</para>
        <para>
          このイベントの処理中に
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Cancel" />プロパティを使用して、レポートのレンダリングをキャンセルできます。印刷できるページ数を制限するには、
          <see cref="P:C1.Win.FlexReport.C1FlexReport.MaxPages" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.CalculatedField">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />の計算されたデータフィールドを表します。通常は、このフィールド の値は、データソース内の別のフィールドに基づいて計算されます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CalculatedField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.CalculatedField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CalculatedField.#ctor(System.String,System.Type,System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.CalculatedField" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="name">計算フィールドの名前は一意である必要があります。</param>
      <param name="type">計算フィールドの値の型。</param>
      <param name="expression">フィールドの値を計算するために使用される VBScript 式。</param>
    </member>
    <member name="M:C1.Win.FlexReport.CalculatedField.AssignFrom(System.Object)">
      <summary>
        別の
        <see cref="T:C1.Win.FlexReport.CalculatedField" />オブジェクトからプロパティをコピーします。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.ParentReport">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.Owner">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.CalculatedFieldCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.DataSource">
      <summary>
        このオブジェクトを含む
        <see cref="P:C1.Win.FlexReport.CalculatedField.DataSource" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.Type">
      <summary>フィールドの型を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.Expression">
      <summary>フィールドの値を計算するために使用される式を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.CalculatedFieldCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.CalculatedField" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedFieldCollection.Owner">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.DataSource" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedFieldCollection.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataAccessException">
      <summary>
        データアクセスエラーが発生した場合に生成される
        <see cref="T:System.Exception" />。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataAccessException.#ctor">
      <summary>DataAccessException クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataAccessException.#ctor(System.String)">
      <summary>指定されたエラーメッセージを使用して、DataAccessException クラスの新しいインスタンスを初期化します。</summary>
      <param name="msg">エラーについて説明するメッセージ。</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataAccessException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラーメッセージとこの例外の原因となった内部例外への参照を使用して、DataAccessException クラスの 新しいインスタンスを初期化します。</summary>
      <param name="msg">この例外の理由について説明するエラーメッセージ。</param>
      <param name="x">現在の例外の原因になった例外。</param>
    </member>
    <member name="T:C1.Win.FlexReport.DataField">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataSource" />内のフィールドを表します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Name">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataField" />の名前を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Calculated">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataField" />が
        <see cref="P:C1.Win.FlexReport.DataSource.CalculatedFields" />コレクションで定義されている計算フィールドであるかどうかを示す値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Type">
      <summary>フィールドの型を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Value">
      <summary>フィールドの値を取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataFieldCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataSource" />内のフィールドのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataFieldCollection.IndexByName(System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataField" />の名前に基づいてそのインデックスを返します。
      </summary>
      <param name="name">
        <see cref="T:C1.Win.FlexReport.DataField" />の名前。
      </param>
      <returns>
        指定された名前を持つ
        <see cref="T:C1.Win.FlexReport.DataField" />のインデックス。存在しない場合は -1。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.DataFieldCollection.Item(System.String)">
      <summary>
        指定された名前を持つ
        <see cref="T:C1.Win.FlexReport.DataField" />を取得します。存在しない場合は、例外を生成します。
      </summary>
      <param name="name">
        <see cref="T:C1.Win.FlexReport.DataField" />の名前。
      </param>
      <returns>
        指定された名前を持つ
        <see cref="T:C1.Win.FlexReport.DataField" />オブジェクトを返します。存在しない場合は、例外を生成します。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.DataHandler">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内のデータ列挙子を表します。レポートで使用されるデータへのアクセスを提供します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.Dispose">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.DataHandler" />オブジェクトを破棄します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.BOF">
      <summary>カーソルがデータソースの最初のレコードの位置にある場合は true を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.EOF">
      <summary>カーソルがデータソースの最後のレコードを過ぎた位置にある場合は true を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MoveFirst">
      <summary>カーソルをデータソースの最初のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MoveLast">
      <summary>カーソルをデータソースの最後のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MovePrevious">
      <summary>カーソルをデータソースの前のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MoveNext">
      <summary>カーソルをデータソースの次のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.GetBookmark">
      <summary>現在のカーソル位置を返します。</summary>
      <returns>現在のレコードのインデックス。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.SetBookmark(System.Int32)">
      <summary>現在のカーソル位置を指定された値に設定します。</summary>
      <param name="bkmk">レコードのインデックス。</param>
    </member>
    <member name="P:C1.Win.FlexReport.DataHandler.Count">
      <summary>データソース内のレコードの数を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataHandler.Fields">
      <summary>
        データソースフィールドのリストを格納する
        <see cref="T:C1.Win.FlexReport.DataFieldCollection" />を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataLinkParams">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataLinkBase">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.DbLink">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.OledbLink">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SqlServerCe3_5Link">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SqlServerCe4_0Link">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.OdbcLink">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.XmlLink">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ExternalObjectLink">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataScope">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内のデータスコープを表します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.Source">
      <summary>現在のデータスコープを識別するオブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.Name">
      <summary>データスコープの名前を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.Parent">
      <summary>
        親
        <see cref="T:C1.Win.FlexReport.DataScope" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.DataHandler">
      <summary>
        データスコープデータにアクセスするために使用できる
        <see cref="P:C1.Win.FlexReport.DataScope.DataHandler" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataProvider">
      <summary>データソースのタイプを指定します。データソースは、それぞれ異なる構文の接続文字列やクエリーコマンドを使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.Auto">
      <summary>データソースタイプは、接続文字列に基づいて自動的に決定されます。この値の使用は推奨しません。使用すると、データソースの接続が非常に遅くなる場合があります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.OLEDB">
      <summary>OLE DB データソースを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.ODBC">
      <summary>ODBC データソースを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.SqlServerCe3_5">
      <summary>SQL Server Compact 3.5 データソースを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.SqlServerCe4_0">
      <summary>SQL Server Compact 4.0 データソースを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.XmlFile">
      <summary>接続文字列が、DataSet オブジェクトを格納する XML ファイルの名前であることを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.ExternalObject">
      <summary>
        接続文字列が、
        <see cref="T:C1.Win.FlexReport.IC1FlexReportExternalRecordset" />インタフェースを実装するオブジェクトを 格納するアセンブリの名前であることを指定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.RecordSourceType">
      <summary>レコードソースのタイプ（テーブル、ストアドプロシージャ、SQL クエリー）を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.Auto">
      <summary>
        データソースタイプは、
        <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />の構文に基づいて自動的に決定されます。この値の使用は推奨しません。この値を使用して、レコードソースにテーブル、SQL クエリー、またはストアドプロシージャが含まれていると、データソースへの接続が非常に遅くなる場合があります。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.TableDirect">
      <summary>レコードソースに、接続文字列で指定されたデータソースのテーブルまたはビューの名前が含まれることを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.StoredProcedure">
      <summary>レコードソースに、接続文字列で指定されたデータソースのストアドプロシージャの名前が含まれることを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.Text">
      <summary>レコードソースに SQL クエリーが含まれることを指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FilterExpressionSyntax">
      <summary>
        <see cref="P:C1.Win.FlexReport.DataSource.Filter" />式の構文を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FilterExpressionSyntax.DataView">
      <summary>
        フィルタ式の構文が
        <see cref="!:DataView.Filter" />内の構文と同じであることを指定します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FilterExpressionSyntax.VBScript">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内の他のすべての式と同様に、フィルタ式が VBScript 構文を使用することを指定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataSource">
      <summary>レポートのデータを提供します。</summary>
      <remarks>
        <para>
          ほとんどのレポートは、
          <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" />プロパティと
          <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />プロパティを設定してデータソースを指定します。
          <b>DataSource</b>オブジェクトは、これらの値を使用して データベースに接続し、レポートデータを取得します。
        </para>
        <para>
          または、
          <see cref="P:C1.Win.FlexReport.DataSource.Recordset" />プロパティにデータオブジェクトを直接割り当てることもできます。この方法は、すでに他の目的でアプリケーションにデータがロードされており、コピーをロードしなくてもレポートで直接データを使用できる場合に効率的です。
        </para>
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.DataSource.c_DefIsolationLevel">
      <summary>レポートデータの取得に使用されるトランザクションのデフォルトの IsolationLevel を定義します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataSource" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.AssignFrom(C1.Win.FlexReport.DataSource)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.DataSource" />から現在のオブジェクトに割り当てます（コピーします）。ソースオブジェクトの名前はコピーされません。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.DataSource" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">名前が割り当てられるかどうかを示します。</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.ToString">
      <summary>
        現在のデータソースの
        <see cref="!:Name" />を返します。
      </summary>
      <returns>現在のデータソースの名前。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.ParentReport">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.DataSource" />を含むレポートを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.EncloseParameterValues">
      <summary>
        生成される SQL クエリー内のパラメータの値が、日付の場合は "#"、文字列の場合は "'"、複数値パラメータの場合は "()" の区切り文字でそれぞれ囲まれるかどうかを示す値を取得または設定します。このパラメータが false の場合は、
        <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />内のすべてのパラメータがすでに区切り文字で囲まれている必要があります。たとえば、EncloseParameterValues == true、RecordSource = "select * from customers where name = CustomerName" の場合、実際の SQL クエリーは次のようになります。select * from customers where name = 'Some customer' EncloseParameterValues == false、RecordSource = "select * from customers where name = 'CustomerName'" の場合、実際の SQL クエリーは次のようになります。select * from customers where name = 'Some customer'
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.DataProvider">
      <summary>データソースのタイプを取得または設定します。データソースのタイプで接続文字列とクエリー（レコードソース）の構文が決まります。デフォルトは Auto ですが、データソースのタイプを特定のタイプに変更することを推奨します。データソースのタイプを自動的に決定すると、非常に時間がかかる場合があります。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.ConnectionString">
      <summary>データベースを開くために使用される文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" />は、レポートデータをロードするために
          <see cref="T:C1.Win.FlexReport.DataSource" />クラスで使用されます。
        </para>
        <para>
          <see cref="T:C1.Win.FlexReport.DataSource" />クラスは、
          <see cref="T:System.Data.OleDb.OleDbConnection" />オブジェクトを使用してデータを取得します。そのため、
          <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" />の構文は、OleDb 接続文字列を使用した構文です。構文の詳細については、
          <see cref="T:System.Data.OleDb.OleDbConnection" />クラスのドキュメントを参照してください。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" />は、レポートデータを含むデータベースを指定します。
          <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />プロパティは、データの取得に使用するテーブル、ストアドプロシージャ、または SQL コマンドを 指定します。
        </para>
        <para>
          別のタイプの接続（
          <see cref="T:System.Data.SqlClient.SqlConnection" />など）を使用する場合、またはアプリケーションに
          <see cref="T:System.Data.DataTable" />オブジェクトとしてすでにデータがある場合は、そのデータを直接
          <see cref="P:C1.Win.FlexReport.DataSource.Recordset" />プロパティに割り当てることができます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.RecordSource">
      <summary>レポートデータの取得に使用するテーブル、ストアドプロシージャ、または SQL コマンドを 指定する文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" />は、レポートデータを含むデータベースを指定します。
          <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />プロパティは、データの取得に使用するテーブル、ストアドプロシージャ、または SQL コマンドを 指定します。
        </para>
        <para>
          別のタイプの接続（
          <see cref="T:System.Data.SqlClient.SqlConnection" />など）を使用する場合、またはアプリケーションに
          <see cref="T:System.Data.DataTable" />オブジェクトとしてすでにデータがある場合は、そのデータを直接
          <see cref="P:C1.Win.FlexReport.DataSource.Recordset" />プロパティに割り当てることができます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.RecordSourceType">
      <summary>
        ストアドプロシージャ、テーブル、SQL クエリーなどの
        <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />のタイプを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.FilterSyntax">
      <summary>
        <see cref="P:C1.Win.FlexReport.DataSource.Filter" />で使用される構文のタイプを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.Filter">
      <summary>レポートに含めるデータ行をフィルタするために使用される式を取得または設定します。</summary>
      <remarks>
        <para>
          <b>Filter</b>プロパティを使用して、
          <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />プロパティを変更せずに、データソースに含めるレコードを制限します。
        </para>
        <para>
          フィルタの使用は、
          <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />プロパティに 割り当てられた SQL 文で WHERE 句を指定することに似ています。どちらの方法も、指定された条件に基づいてデータを フィルタします。違いは、
          <b>Filter</b>プロパティはすでにメモリにロードされている テーブルに適用されますが、WHERE 文ではフィルタされたレコードだけが データベースからメモリにロードされることです。
        </para>
        <para>
          大きなテーブルのごく一部だけを含むレポートを作成する場合は、テーブル全体をメモリにロードする必要がないため、WHERE 文の方が適しています。一方、テーブルがすでにメモリにロードされている場合は、さらにデータをロードする必要がないため、
          <b>Filter</b>プロパティの方が適しています。
        </para>
        <para>
          フィルタ式の構文は
          <see cref="P:C1.Win.FlexReport.DataSource.FilterSyntax" />プロパティによって決定されます。
        </para>
      </remarks>
      <example>
        次のコードは、
        <c>Filter</c>プロパティを使用してデータソースにフィルタを適用する方法と、SQL 文で WHERE 句を使用してデータソースにフィルタを適用する方法を示します。
        <code>
          <![CDATA[
          if (useFilterProperty)
          {
            // すべてのレコードをロードし、メモリ内でフィルタします
            _c1r.DataSource.RecordSource = "SELECT * from Employees";
            _c1r.DataSource.Filter = "HireDate &gt;= '1/1/1993' AND Country = 'UK'";
          }
          else
          {
            // 選択したレコードだけをロードします
            _c1r.DataSource.RecordSource = "SELECT * from Employees " + 
              "WHERE HireDate &gt;= #1/1/1993# AND Country = 'UK'";
          }
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.MaxRecords">
      <summary>レポートに入れるデータ行の最大数を取得または設定します（すべての行を入れる場合は 0）。</summary>
      <remarks>
        <para>このプロパティは、レポートのサイズを制限する場合に役立ちます。たとえば、プレビューウィンドウに データベースの最初の 500 レコードだけを表示するようなレポートデザイナを記述できます。</para>
        <para>このプロパティを 0 に設定すると、コントロールはすべてのレコードを取得します。</para>
        <para>
          <see cref="P:C1.Win.FlexReport.C1FlexReport.MaxPages" />プロパティを設定してレポートの大きさを制限することもできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.CommandTimeOut">
      <summary>データ接続のタイムアウトまでの待機秒数を取得または設定します。-1 に設定すると、デフォルト値（通常は 30 秒）が使用されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.Recordset">
      <summary>レポートにデータを提供するデータソースオブジェクトを設定または取得します。</summary>
      <remarks>
        <para>
          通常、このコントロールは、
          <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" />プロパティと
          <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />プロパティの値に基づいて
          <see cref="T:System.Data.DataTable" />オブジェクトを作成し、そのオブジェクトを レポートデータソースとして使用します。
        </para>
        <para>
          または、データソースオブジェクトを独自に作成し、それをコントロールに割り当てることも できます。それには、データソースオブジェクトを
          <b>Recordset</b>プロパティに割り当てます。
        </para>
        <value>
          <see cref="P:C1.Win.FlexReport.DataSource.Recordset" />プロパティには、次の型のオブジェクトを割り当てることができます。(1)
          <see cref="T:System.Data.DataTable" />オブジェクト (2)
          <see cref="T:System.Data.DataView" />オブジェクト (3)
          <see cref="!:IC1ReportRecordset" />インタフェースを実装する任意のオブジェクト
        </value>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.IsolationLevel">
      <summary>
        レポートデータを取得するために使用される
        <b>OleDBTransaction</b>の分離レベルを 取得または設定します。
        <para>
          デフォルトは
          <b>IsolationLevel.ReadCommitted</b>です。
        </para>
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.CalculatedFields">
      <summary>
        データソースの計算フィールドのリストを定義する
        <see cref="T:C1.Win.FlexReport.CalculatedFieldCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataSourceCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.DataSource" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataSourceCollection.Add(C1.Win.FlexReport.DataSource)">
      <summary>
        コレクションに
        <see cref="T:C1.Win.FlexReport.DataSource" />を追加します。
      </summary>
      <param name="dataSource">
        追加する
        <see cref="T:C1.Win.FlexReport.DataSource" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.DataSourceCollection.RemoveAt(System.Int32)">
      <summary>コレクションから項目を削除します。</summary>
      <param name="index">削除する項目を指定します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.DataSourceCollection.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataSourceInfo">
      <summary>内部使用専用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FieldInfo">
      <summary>内部使用専用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.IC1FlexReportExternalRecordset">
      <summary>
        別のアセンブリに置かれている外部レコードセットを表します。
        <para>
          アセンブリにこのインタフェースをサポートする型が含まれる場合は、そのアセンブリと型をレポートのデータソースとして レポートデザイナで選択できます。その型の参照と レコードセットの初期化パラメータ（
          <see cref="P:C1.Win.FlexReport.IC1FlexReportExternalRecordset.Params" />を参照）が XML レポート定義ファイルに保存されます。レポートがロードされると、保存された情報に基づいて レコードセットオブジェクトが作成され、レポートのデータソースとして使用されます。
        </para>
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportExternalRecordset.EditParams">
      <summary>このメソッドは、現在のレコードセットのパラメータを設定するために使用されます。たとえば、このメソッドを実装して、ユーザーがパラメータを 編集するためのダイアログを表示できます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportExternalRecordset.GetRecordset">
      <summary>
        データにアクセスするために使用される
        <see cref="T:C1.Win.FlexReport.IC1FlexReportRecordset" />インタフェースを返します。
      </summary>
      <returns>
        データにアクセスするために使用される
        <see cref="T:C1.Win.FlexReport.IC1FlexReportRecordset" />インタフェース。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.IC1FlexReportExternalRecordset.Caption">
      <summary>現在のレコードセットのユーザーフレンドリな名前を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.IC1FlexReportExternalRecordset.Params">
      <summary>現在のレコードセットのパラメータを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.IC1FlexReportRecordset">
      <summary>カスタムデータにアクセスするために使用されるインタフェース。</summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.FlexReport.C1FlexReport" />は、
          <see cref="!:DataTable" />、
          <see cref="!:DataView" />、
          <see cref="!:IList" />の各データオブジェクトを 組み込みでサポートしています。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetFieldNames">
      <summary>データソース内の各フィールドの名前を表す文字列ベクターを取得します。</summary>
      <returns>データソース内の各フィールドの名前を表す文字列ベクター。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetFieldTypes">
      <summary>データソース内の各フィールドの型を表すベクターを取得します。</summary>
      <returns>データソース内の各フィールドの型を表すベクター。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetFieldValue(System.Int32)">
      <summary>現在のカーソル位置にある特定のフィールドの値を取得します。</summary>
      <param name="fieldIndex">フィールドのインデックス。</param>
      <returns>フィールドの値。</returns>
      <remarks>カーソルがデータの終端を過ぎた場合（EOF 状態）、このメソッドは null を返します。例外は生成しません。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.BOF">
      <summary>カーソルがデータソースの最初のレコードの位置にある場合は true を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.EOF">
      <summary>カーソルがデータソースの最後のレコードを過ぎた位置にある場合は true を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MoveFirst">
      <summary>カーソルをデータソースの最初のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MoveLast">
      <summary>カーソルをデータソースの最後のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MovePrevious">
      <summary>カーソルをデータソースの前のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MoveNext">
      <summary>カーソルをデータソースの次のレコードに移動します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetBookmark">
      <summary>現在のカーソル位置を返します。</summary>
      <returns>現在のレコードのインデックス。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.SetBookmark(System.Int32)">
      <summary>現在のカーソル位置を指定された値に設定します。</summary>
      <param name="bkmk">レコードのインデックス。</param>
    </member>
    <member name="P:C1.Win.FlexReport.IC1FlexReportRecordset.Count">
      <summary>レコードセット内のレコードの数を取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SortDirection">
      <summary>ソートの種類を定義します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortDirection.Ascending">
      <summary>昇順にソートします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortDirection.Descending">
      <summary>降順にソートします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.BarCodeField">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内のバーコードを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BarCodeField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.BarCodeField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.BarCode">
      <summary>バーコードの種類を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.BarcodeOptions">
      <summary>
        バーコードの追加オプションを定義する
        <see cref="P:C1.Win.FlexReport.BarCodeField.BarcodeOptions" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.Text">
      <summary>バーコードフィールドによってエンコードされたテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.Align">
      <summary>フィールド領域内にバーコードの画像を配置する方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.Font">
      <summary>フィールドのフォントを取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.FontHolder" />
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.ForeColor">
      <summary>フィールドの前景色を取得または設定します。</summary>
      <remarks>
        <b>ForeColor</b>プロパティを使用して、フィールド内のテキストの色を指定します。このプロパティを使用して、フィールドを読みやすくしたり、特別な意味を伝えることができます。
      </remarks>
      <example>
        次のコードは、
        <i>UnitsInStock</i>フィールドの値が追加注文レベルを下回った場合に、そのフィールドのテキストの色を 変更するスクリプトです。
        <code>
          <![CDATA[
          // スクリプトを作成します
          string script = "UnitsInStock.ForeColor = " + 
            "IIF(UnitsInStock &lt; ReorderLevel, vbRed, vbBlack)";
          
          // スクリプトを詳細セクションに割り当てます
          _c1r.Sections.Detail.OnPrint = script;
          ]]>
        </code>
      </example>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DArea">
      <summary>チャートのチャート領域を表します。</summary>
      <remarks>この領域は、すべての軸およびチャートデータを含みます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.Style">
      <summary>チャート領域のスタイルを取得します。</summary>
      <remarks>

        <see cref="P:C1.Win.FlexReport.ChartField.DefaultStyle" />を継承します。Chart2DArea 領域内に含まれる Axes や PlotArea などのチャート要素は、Chart2DArea スタイルからスタイルを継承します。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.Inverted">
      <summary>チャート領域を反転するかどうかを取得または設定します。</summary>
      <remarks>
        このプロパティは、横向きの棒グラフに必要です。Inverted を true に設定すると軸が反転し、ChartAxis の Minimum 値と Maximum 値が入れ替わって、
        <see cref="P:C1.Win.FlexReport.Chart.Chart2DAxis.Reversed" />プロパティが使用されます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.AxisX">
      <summary>X 主軸を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.AxisY">
      <summary>Y 主軸を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.AxisY2">
      <summary>Y2 主軸を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.PlotArea">
      <summary>データがチャート化される範囲を示す Chart2DPlotArea オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginBottom">
      <summary>チャート領域の下マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>-1 はマージンを自動的に決定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginLeft">
      <summary>チャート領域の左マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>-1 はマージンを自動的に決定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginRight">
      <summary>チャート領域の右マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>-1 はマージンを自動的に決定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginTop">
      <summary>チャート領域の上マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>-1 はマージンを自動的に決定します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DPlotArea">
      <summary>チャートのプロット領域を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.AlarmZones">
      <summary>ChartAlarmZone のコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.Boxed">
      <summary>プロット領域がボックス（実線の境界線）で囲まれているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.UseAntiAlias">
      <summary>チャートデータのレンダリング中にアンチエイリアスを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.View3D">
      <summary>プロット領域の Chart2DView3D オブジェクトを取得します。</summary>
      <remarks>返される Chart2DView3D オブジェクトには、3D 効果を持つチャートのプロット領域で 3D の要素を設定するために使用されるプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.BackColor">
      <summary>プロット領域の背景色を取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeBackColor">
      <summary>BackColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから BackColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetBackColor">
      <summary>BackColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.BackColor2">
      <summary>グラデーションスタイルまたはハッチスタイルで使用する 2 番目の背景色を取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeBackColor2">
      <summary>BackColor2 プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから BackColor2 を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetBackColor2">
      <summary>BackColor2 プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.ForeColor">
      <summary>プロット領域の前景色を取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeForeColor">
      <summary>ForeColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから ForeColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetForeColor">
      <summary>ForeColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.GradientStyle">
      <summary>グラデーション背景の塗りつぶしのタイプを取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeGradientStyle">
      <summary>GradientStyle プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから GradientStyle を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetGradientStyle">
      <summary>GradientStyle プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.HatchStyle">
      <summary>ハッチ背景の塗りつぶしのタイプを取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeHatchStyle">
      <summary>HatchStyle プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから HatchStyle を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetHatchStyle">
      <summary>HatchStyle プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.Opaque">
      <summary>プロット領域の背景を不透過にするかどうかを取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeOpaque">
      <summary>Opqaue プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから Opaque を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetOpaque">
      <summary>Opaque プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DView3D">
      <summary>チャートの 3D 機能を表します。</summary>
      <remarks>
        <see cref="P:C1.Win.FlexReport.Chart.Chart2DGroup.Use3D" />プロパティと組み合わせて使用すると、これらのプロパティを使用して、面グラフ、横棒グラフ、円グラフ、および XYPlot グラフに 3D 効果を加えることができます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Depth">
      <summary>視覚的なチャートの奥行きをチャートの幅に対するパーセント値として取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Elevation">
      <summary>X 軸から上方向への視点の見かけ傾斜角度を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Rotation">
      <summary>Y 軸から右方向への視点の見かけ回転角度を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Shading">
      <summary>チャートの 3D 領域に適用される陰影のタイプを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxis">
      <summary>2D および 3D チャートの軸の基本クラス。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AxisID">
      <summary>軸の種類（X、Y、Y2、または Z）を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Name">
      <summary>軸の名前（X、Y、Y2、または Z）を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AnnoFormat">
      <summary>軸の注釈の書式を取得または設定します。</summary>
      <remarks>
        <para>AnnoFormat プロパティでは、列挙値を使用して数値と日付/時刻の書式を指定できます。</para>
        <para>
          数値の場合、各列挙は、Currency、General、Exponential、Percentage、Roundtrip、Hexadecimal など、.Net の
          <see cref="T:System.Globalization.NumberFormatInfo" />によって指定される書式と同様の書式を指定します。NumericManual を AnnoFormatString プロパティと組み合わせて使用して、カスタム書式文字列を指定できます。
        </para>
        <para>
          日付/時刻値の場合、各列挙は、長い日付/時刻書式、短い日付/時刻書式、グリニッジ標準時表示など、.Net の
          <see cref="T:System.Globalization.DateTimeFormatInfo" />クラスによって 指定される書式と同様の書式を指定します。DateManual を AnnoFormatString プロパティと組み合わせて使用して、カスタム書式文字列を指定できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AnnoFormatString">
      <summary>手動の書式設定で使用される注釈の書式文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.Chart.ChartAxis.AnnoFormat" />プロパティが NumericManual または DateManual の場合にのみ使用されます。AnnoFormatString プロパティは、軸に沿った注釈の書式を設定するためのカスタム文字列を指定します。
        </para>
        <para>AnnoFormat プロパティが NumericManual の場合、AnnoFormatString プロパティには、.Net の double.ToString(AnnoFormatString) メソッド呼び出しによって記述されるような書式文字列を設定できます。カスタム数値書式文字列については、.Net ドキュメントの「カスタム数値書式指定文字列」で詳細に説明されています。AnnoFormatString プロパティが空の場合は、「g」または General が使用されます。</para>
        <para>AnnoFormat プロパティが DateManual の場合、AnnoFormatString プロパティには、.Net の DateTime.ToString(AnnoFormatSTring) メソッド呼び出しによって記述されるような書式文字列を設定できます。カスタム DateTime 書式文字列については、.Net ドキュメントの「日付と時刻の書式指定文字列」で詳細に説明されています。AnnoFormatString プロパティが空の場合、ChartField は、軸の最大値と最小値によって定義される時間間隔に適した書式文字列を選択します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMajor">
      <summary>大目盛りマークの値を自動的に計算するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMinor">
      <summary>小目盛りマークの値を自動的に計算するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMax">
      <summary>軸の最大値を自動的に計算するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMin">
      <summary>軸の最小値を自動的に計算するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Max">
      <summary>軸の最大値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Min">
      <summary>軸の最小値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMajor">
      <summary>大目盛りマーク間のきざみを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMinor">
      <summary>小目盛りマーク間のきざみを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Visible">
      <summary>軸の表示/非表示を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Title">
      <summary>軸のテキストキャプションを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DAxis">
      <summary>2D チャートの軸を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Compass">
      <summary>軸の一般的な配置を取得または設定します。</summary>
      <remarks>X 軸は North/South（上下）に、Y 軸と Y2 軸は East/West（左右）に設定できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.AutoOrigin">
      <summary>軸の原点を自動的に計算するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Origin">
      <summary>軸の原点を取得または設定します。これは、この軸上で直交軸がレンダリングされる位置を示す値です。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.AnnoMethod">
      <summary>注釈を付ける方法を取得または設定します。</summary>
      <remarks>Chart2DAnnotationMethodEnum の有効な値は、Auto、ValueLabels、Values の 3 つです。Values 注釈は、あらゆる場合にあらゆるチャートタイプで使用できます。ValueLablels 注釈は、円グラフの X 軸と Y 軸で使用できません。Auto 注釈は、チャートタイプに応じて、Values 注釈（数値チャート）または ValueLabels 注釈（カテゴリーチャート）を自動的に使用します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.AnnoRotation">
      <summary>軸注釈の回転の時計回りの角度を取得または設定します。</summary>
      <remarks>回転の角度は、必ず度で指定します。大量のラベルが必要な場合、X 軸の注釈の 回転角度は +/- 30 ～ +/- 60 度が理想的です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.IsLogarithmic">
      <summary>軸に対数目盛りを使用するかどうかを取得または設定します。</summary>
      <remarks>値が 0 以下の場合、対数スケーリングは数学的に意味を持ちません。したがって、IsLogarithmic プロパティを true に設定した軸に対しては、負の値または 0 はプロットされません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.GridMajor">
      <summary>主グリッド線オブジェクトを取得します。</summary>
      <remarks>
        主グリッドは、
        <see cref="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMajor" />の間隔で、大目盛りマークと同じ位置に配置されます。GridMajor プロパティを使用して、グリッド線の外観を設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.GridMinor">
      <summary>副グリッド線オブジェクトを取得します。</summary>
      <remarks>
        副グリッドは、
        <see cref="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMinor" />の間隔で、小目盛りマークと同じ位置に配置されます。GridMinor プロパティを使用して、グリッド線の外観を設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.LogarithmicBase">
      <summary>使用する対数スケールの底を取得または設定します。</summary>
      <remarks>1 以下の値は、自然対数を指定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.NoAnnoOverlap">
      <summary>軸注釈の重なりを許可するかどうかを取得または設定します。</summary>
      <remarks>NoAnnoOverlap を設定すると、重なりの理由に関係なく、既に描画済みの注釈と重なる 軸注釈は表示されなくなります。このプロパティによって大目盛りマークおよび小目盛りマークのスケーリングや生成が変更されることはありません。AutoMajor が true に設定されたアプリケーションには、通常、このプロパティを使用する必要はありません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.OnTop">
      <summary>軸とグリッド線をチャート画像の上に重ねて表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Reversed">
      <summary>軸を標準にするか、反転させるか（昇順または降順）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Thickness">
      <summary>軸の線の太さを取得または設定します（ツイップ単位）。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickFactorMajor">
      <summary>大目盛りマークの長さの整数係数を取得または設定します。</summary>
      <remarks>目盛りマークのサイズは、この目盛り係数と軸線の太さに基づいて設定されます。目盛り係数を 2 倍にすると、軸の目盛りマークの長さが 2 倍になります。値は 1 ～ 20 の整数に制限されています。この範囲に含まれない値は 無視されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickFactorMinor">
      <summary>小目盛りマークの長さの整数係数を取得または設定します。</summary>
      <remarks>目盛りマークのサイズは、この目盛り係数と軸線の太さに基づいて設定されます。目盛り係数を 2 倍にすると、軸の目盛りマークの長さが 2 倍になります。値は 1 ～ 20 の整数に制限されています。この範囲に含まれない値は 無視されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickGauge">
      <summary>大目盛りマーク間に、ゲージマークで区切られる区間がおおよそ何個あるかを取得または設定します。</summary>
      <remarks>ゲージマークは大きめの小目盛りマークで、小目盛りを読みやすく区画化するために使用されます。使用しない場合は 0（デフォルト）、自動設定の場合は 1 を設定します。また、各大目盛りマーク間で、ゲージマークで区切られる小目盛りマークの区画がおおよそ何個あるかを指定する場合は、1 より大きい数を設定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickLabels">
      <summary>軸に対する注釈ラベルの位置を取得または設定します。</summary>
      <remarks>軸注釈は、チャート上の複数の位置に配置できます。また、まったく配置しないこともできます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickMajor">
      <summary>大目盛りマークのタイプを取得または設定します。</summary>
      <remarks>
        目盛りマークは、軸線のいずれかの側または両側に配置できます。TickMajor プロパティが
        <see cref="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.None" />に設定されている場合、大目盛りマークは描画されないことに注意してください。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickMinor">
      <summary>小目盛りマークのタイプを取得または設定します。</summary>
      <remarks>
        目盛りマークは、軸線のいずれかの側または両側に配置できます。TickMinor プロパティが
        <see cref="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.None" />に設定されている場合、小目盛りマークは描画されないことに注意してください。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.ValueLabels">
      <summary>この軸の Chart2DValueLabels コレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.VerticalText">
      <summary>ラベルテキストを縦書き表示にするかどうかを取得または設定します。</summary>
      <remarks>チャート領域から継承されます。VerticalText を使用すると、2 バイト文字を左から右ではなく上から下にレンダリングできます。1 バイト文字の場合、VerticalText は、時計回り方向に 90 度回転したテキストとして表示されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeVerticalText">
      <summary>VerticalText プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから VerticalText を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetVerticalText">
      <summary>VerticalText プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Rotation">
      <summary>軸のテキストキャプションの回転方向を取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeRotation">
      <summary>Rotation プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから Rotation を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetRotation">
      <summary>Rotation プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.ForeColor">
      <summary>前景色を取得または設定します。</summary>
      <remarks>チャート領域から継承されます。ForeColor は、軸線と注釈の色の設定に使用されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeForeColor">
      <summary>ForeColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから ForeColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetForeColor">
      <summary>ForeColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Font">
      <summary>FontHolder オブジェクトを取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeFont">
      <summary>Font プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DArea オブジェクトから Font を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetFont">
      <summary>Font プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Alignment">
      <summary>軸表示内でのテキストの配置を取得または設定します。</summary>
      <remarks>チャート領域から継承されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DGridStyle">
      <summary>チャート内のグリッド線の外観を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGridStyle.AutoSpacing">
      <summary>グリッド線の間隔の自動計算を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGridStyle.Spacing">
      <summary>グリッド線の間隔をデータ座標単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGridStyle.Visible">
      <summary>グリッド線の表示/非表示を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection">
      <summary>チャート領域の X、Y、および Y2 軸の値ラベルの外観を定義するために使用する Chart2DValueLabel オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.Add(C1.Win.FlexReport.Chart.Chart2DValueLabel)">
      <summary>既存の値ラベルをコレクションに追加します。</summary>
      <param name="label">追加する値ラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.AddNewLabel">
      <summary>新しい値ラベルをコレクションに追加します。</summary>
      <returns>新しく追加された値ラベル。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある値ラベルを削除します。</summary>
      <param name="index">削除する値ラベルのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.Remove(C1.Win.FlexReport.Chart.Chart2DValueLabel)">
      <summary>既存の値ラベルをコレクションから削除します。</summary>
      <param name="label">削除する値ラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartValueLabel">
      <summary>特定の軸座標に定義されたテキストを表示するために使用するチャートの軸注釈を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartValueLabel.Value">
      <summary>暗黙的に double 値に変換できる値を指定することで、ChartValueLabel によって置き換えられる軸値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartValueLabel.Text">
      <summary>ChartValueLabel に対して表示されるテキスト値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DValueLabel">
      <summary>特定の軸座標に定義されたテキストを表示するために使用する 2D チャートの軸注釈を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.Appearance">
      <summary>Chart2DValueLabel の外観を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.BackColor">
      <summary>Chart2DValueLabel の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.Color">
      <summary>Chart2DValueLabel の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.GridLine">
      <summary></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.MarkerSize">
      <summary>Chart2DValueLabel のマーカーサイズを取得または設定します（ツイップ単位）。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection">
      <summary>プロットするテーブル領域または図形を格納するコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.Add(C1.Win.FlexReport.Chart.ChartAlarmZone)">
      <summary>既存のアラームゾーンをコレクションに追加します。</summary>
      <param name="alarmZone">追加するデータ値。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.AddNewAlarmZone">
      <summary>新しいアラームゾーンをコレクションに追加します。</summary>
      <returns>新しく追加されたデータ値。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるアラームゾーンを削除します。</summary>
      <param name="index">削除するアラームゾーンのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.Remove(C1.Win.FlexReport.Chart.ChartAlarmZone)">
      <summary>既存のアラームゾーンをコレクションから削除します。</summary>
      <param name="alarmZone">削除するアラームゾーン。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlarmZone">
      <summary>プロット領域の背後でチャート背景の前面に配置できる一連のテーブル領域または図形を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.BackColor">
      <summary>ChartAlarmZone の背景色を取得または設定します。</summary>
      <remarks>プロット領域から継承されます。ChartAlarmZone は、ゾーンを表示する際、常に BackColor（背景色）を表示します。パターンが使用されている場合は、ForeColor（前景色）も使用してパターン線が描画されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ShouldSerializeBackColor">
      <summary>BackColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DPlotArea オブジェクトから BackColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ResetBackColor">
      <summary>BackColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.ForeColor">
      <summary>ChartAlarmZone の前景色を取得または設定します。</summary>
      <remarks>プロット領域から継承されます。ChartAlarmZone は、ゾーンを表示する際、常に BackColor（背景色）を表示します。パターンが使用されている場合は、ForeColor（前景色）も使用してパターン線が描画されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ShouldSerializeForeColor">
      <summary>ForeColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart2DPlotArea オブジェクトから ForeColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ResetForeColor">
      <summary>ForeColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.FarExtent">
      <summary>ChartAlarmZone の右端を X 軸データ座標値で取得または設定します。</summary>
      <remarks>通常、FarExtent は、ChartAlarmZone の範囲を示すデータ座標の最大 X 値です。FarExtent と NearExtent がどちらも 0 に設定されている場合は、それぞれ X 軸の Max および Min 値と見なされます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.NearExtent">
      <summary>ChartAlarmZone の左端を X 軸データ座標値で取得または設定します。</summary>
      <remarks>通常、NearExtent は、ChartAlarmZone の範囲を示すデータ座標の最小 X 値です。FarExtent と NearExtent がどちらも 0 に設定されている場合は、それぞれ X 軸の Max および Min 値と見なされます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.UpperExtent">
      <summary>ChartAlarmZone の上端を Y 軸データ座標値で取得または設定します。</summary>
      <remarks>通常、UpperExtent は、ChartAlarmZone の範囲を示すデータ座標の最大 Y 値です。UpperExtent と LowerExtent がどちらも 0 に設定されている場合は、それぞれ Y 軸の Max および Min 値と見なされます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.LowerExtent">
      <summary>ChartAlarmZone の下端を Y 軸データ座標値で取得または設定します。</summary>
      <remarks>通常、LowerExtent は、ChartAlarmZone の範囲を示すデータ座標の最小 Y 値です。UpperExtent と LowerExtent がどちらも 0 に設定されている場合は、それぞれ Y 軸の Max および Min 値と見なされます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.GroupIndex">
      <summary>ChartAlarmZone のデータグループのインデックスを取得または設定します。</summary>
      <remarks>このグループインデックスは、ChartAlarmZone の範囲によって指定される ChartAlarmZone の データ座標に対応する Chart2DGroup を示します。グループインデックスによって 指定された Chart2DGroup が存在しない場合、ChartAlarmZone は描画されません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.MinHeight">
      <summary>ChartAlarmZone の最小の高さを取得または設定します（ツイップ単位）。</summary>
      <remarks>ChartAlarmZone の高さが指定されたツイップ単位の値より小さい場合、ChartAlarmZone は、このプロパティで指定した高さで描画されます。デカルト座標グラフで、アラームゾーンが四角形または楕円形の場合にのみ 適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.MinWidth">
      <summary>ChartAlarmZone の最小の幅を取得または設定します（ツイップ単位）。</summary>
      <remarks>ChartAlarmZone の幅が指定されたツイップ単位の値より小さい場合、ChartAlarmZone は、このプロパティで指定した幅で描画されます。デカルト座標グラフで、アラームゾーンが四角形または楕円形の場合にのみ 適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.Name">
      <summary>ChartAlarmZone の名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.PatternStyle">
      <summary>PatternVisible が true の場合に使用するパターンのスタイルを取得または設定します。</summary>
      <remarks>PatternStyle は、ChartAlarmZone の ForeColor の色で描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.PatternVisible">
      <summary>指定された PatternStyle を使用して、ChartAlarmZone の背景を描画するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.Shape">
      <summary>ChartAlarmZone の形状を取得または設定します。</summary>
      <remarks>四角形の ChartAlarmZone は、ChartAlarmZone の範囲を示すデータ座標で 囲まれた四角形で指定されます。楕円形の ChartAlarmZone は、ChartAlarmZone の範囲を示すデータ座標で 囲まれた四角形で指定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.Visible">
      <summary>ChartAlarmZone の表示/非表示を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DGroups">
      <summary>Chart2DGroups オブジェクトを表します。各 Chart2DGroup には、データ値および外観に関する情報が含まれます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroups.ReversedDraw">
      <summary>Chart2DGroups の通常の描画順序を逆にするかどうかを取得または設定します。</summary>
      <remarks>Chart2DGroups は、通常、Group1、Group0 の順序で描画されます。ReversedDraw を true にすると、Chart2DGroups は Group0、Group1 の順序で描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroups.Group0">
      <summary>前景の Chart2DGroup を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroups.Group1">
      <summary>背景の Chart2DGroup を取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DGroup">
      <summary>チャートデータおよびチャートの外観を制御するクラスを含む 2D チャートグループを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.ChartType">
      <summary>表示するチャートのタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.AxisXType">
      <summary>AxisX のデータ型を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Is100Percent">
      <summary>積層グラフが 100% 積層グラフかどうかを取得または設定します。折れ線グラフ、横棒グラフ、および面グラフにのみ適用されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.LegendReversed">
      <summary>各 Chart2DGroup の系列エントリが凡例に表示される順序を取得または設定します。</summary>
      <remarks>各 Chart2DGroup の系列は、通常、インデックスの順序で凡例に表示されます。LegendReversed プロパティを true にすると、Chart2DGroup の系列エントリは逆順で表示されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Stacked">
      <summary>チャートのデータを積み上げるかどうかを取得または設定します（該当するチャートタイプのみ）。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Use3D">
      <summary>Chart2DGroup 内のデータのチャート化に 3D 効果を使用するかどうかを取得または設定します。</summary>
      <remarks>Chart2DView3D データの Depth、Rotation、および Elevation に 0 以外の値が含まれる場合は、面グラフ、横棒グラフ、円グラフ、XYPlot グラフなどのさまざまなグラフに 3D 効果が加えられます。さらに、Chart2DGroup の Use3D プロパティで 3D 効果の使用をオーバーライドできるため、グループごとに 3D 効果を適用するかどうかを指定することができます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Visible">
      <summary>Chart2DGroup が表示されるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.ShowOutline">
      <summary>描画される図形の輪郭を Chart2DPlotArea の ForeColor の色で描画するかどうかを取得または設定します。</summary>
      <remarks>この設定が適用される図形には、棒、円、面などがあります。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.OutlineColor">
      <summary>図形の輪郭を描画するときにオーバーライドする色を取得または設定します。</summary>
      <remarks>デフォルトでは、輪郭は PlotArea の ForeColor の色で描画されます。この設定が適用される図形には、棒、円、面などがあります。このプロパティを透過色に設定すると、デフォルトの Chart2DPlotArea の ForeColor が使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.ChartData">
      <summary>Chart2DData オブジェクトを取得します。</summary>
      <remarks>Chart2DData オブジェクトには、チャート化される数値系列と、各系列の表示情報が含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Pie">
      <summary>ChartPie オブジェクトを取得します。</summary>
      <remarks>ChartPie オブジェクトには、円グラフに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Bar">
      <summary>ChartBar オブジェクトを取得します。</summary>
      <remarks>ChartBar オブジェクトには、横棒グラフに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Polar">
      <summary>ChartPolar オブジェクトを取得します。</summary>
      <remarks>ChartPolar オブジェクトには、ポーラチャートに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Radar">
      <summary>ChartRadar オブジェクトを取得します。</summary>
      <remarks>ChartRadar オブジェクトには、レーダーチャートに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Bubble">
      <summary>ChartBubble オブジェクトを取得します。</summary>
      <remarks>ChartBubble オブジェクトには、バブルチャートに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Hilo">
      <summary>ChartHiLo オブジェクトを取得します。</summary>
      <remarks>ChartHiLo オブジェクトには、HiLo チャート、Hi-Lo-Open-Close チャート、ローソク足チャートなどの Hi-Lo チャートタイプに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Gantt">
      <summary>ChartGantt オブジェクトを取得します。</summary>
      <remarks>ChartGantt オブジェクトには、ガントチャートに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Histogram">
      <summary>ChartHistogram オブジェクトを取得します。</summary>
      <remarks>ChartHistogram オブジェクトには、ヒストグラムに固有のプロパティが含まれます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPie">
      <summary>円グラフに固有のプロパティを含むクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.Clockwise">
      <summary>各系列を時計回りと反時計回りのどちらで描画するかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.InnerRadius">
      <summary>ドーナツグラフに使用される内側半径を取得または設定します。</summary>
      <remarks>0 より大きい値は、ドーナツの穴の半径を円グラフ全体の半径に対するパーセンテージで指定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.OtherOffset">
      <summary>チャート作成領域内で円の直径を変化させるために使用するオフセット値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.Start">
      <summary>最初の円グラフセグメントの開始角度を取得または設定します。</summary>
      <remarks>この角度は、最初のセグメントの時計回り方向で最初の半径と、円グラフの水平方向の右側半径との間の円弧を、反時計回りに度単位で表します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.LegendLayout">
      <summary>各凡例項目の付加コンテンツを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.SliceDetachment">
      <summary>1 つの円グラフからどのセグメントを切り離すかを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBar">
      <summary>横棒グラフに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.Appearance">
      <summary>横棒グラフの外観を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.BarLineColor">
      <summary>BarLines プロパティによって示される BarLine をレンダリングするために使用される Color を取得または設定します。</summary>
      <remarks>積層横棒グラフと縦棒グラフにのみ適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.BarLines">
      <summary>2D の積層横棒グラフと縦棒グラフで、同じ系列四角形のデータポイントから次のデータポイントまでを結ぶ線をレンダリングするかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.BarLineThickness">
      <summary>BarLines プロパティによって示される BarLine をレンダリングするための太さをツイップ単位で取得または設定します。</summary>
      <remarks>積層横棒グラフと縦棒グラフにのみ適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.ClusterOverlap">
      <summary>同じ棒集合内の棒要素が重なるパーセンテージを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.ClusterWidth">
      <summary>それぞれの棒集合が占めるパーセンテージを取得または設定します。</summary>
      <remarks>このパーセンテージは、最も近い棒集合間に適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.MixedStacking">
      <summary>正の値と負の値が混在する棒グラフで、各ポイントに正負の両方を積み上げて表示するかどうかを取得または設定します。3D 棒グラフでは常に True です。</summary>
      <remarks>True の場合は、正の値は原点の上側に、負の値は原点の下側に積み重ねられます。False の場合は、値は系列の順序で単純に加算して積み重ねられます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.MultiRow">
      <summary>3D 横棒グラフが複数の行を使用してプロットされるかどうかを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPolar">
      <summary>ポーラチャートに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPolar.Degrees">
      <summary>ポーラチャートとレーダーチャートの Start 値の角度を度単位（true）で示すか、ラジアン単位（false）で示すかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPolar.Start">
      <summary>レーダーチャートとポーラチャートの開始角度を取得または設定します。</summary>
      <remarks>Degrees プロパティが true の場合、角度は度単位で測定され、そうでない場合はラジアン単位で測定されます。角度は 12 時の位置から反時計回りに測定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPolar.PiRatioAnnotation">
      <summary>ラジアン単位で測定されるポーラチャートの注釈をπ比で表現するかどうかを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRadar">
      <summary>レーダーチャートに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.Degrees">
      <summary>ポーラチャートとレーダーチャートの Start 値の角度を度単位（true）で示すか、ラジアン単位（false）で示すかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.Start">
      <summary>レーダーチャートとポーラチャートの開始角度を取得または設定します。</summary>
      <remarks>Degrees プロパティが true の場合、角度は度単位で測定され、そうでない場合はラジアン単位で測定されます。角度は 12 時の位置から反時計回りに測定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.Filled">
      <summary>レーダーチャートを塗りつぶすかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.FlatGridLines">
      <summary>レーダーチャートでフラットな Y 座標グリッド線を使用するかどうかを取得または設定します。</summary>
      <remarks>デフォルトでは、Y 座標グリッド線は円形です。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBubble">
      <summary>バブルチャートに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBubble.EncodingMethod">
      <summary>バブルチャート内のバブルサイズを計算する方法を取得または設定します。</summary>
      <remarks>
        <para>最大および最小のバブルサイズは、EncodingMethod プロパティの値に応じて、プロット領域の直径または面積に対するパーセンテージで表されます。</para>
        <para>現時点では、BubbleMethod は常に直径に基づいています。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBubble.MaximumSize">
      <summary>バブルチャート内の最大バブルサイズを取得または設定します。</summary>
      <remarks>最大バブルサイズは、プロット領域の直径（または面積）に対する割合を表します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBubble.MinimumSize">
      <summary>バブルチャート内の最小バブルサイズを取得または設定します。</summary>
      <remarks>最小バブルサイズは、プロット領域の直径（または面積）に対する割合を表します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHilo">
      <summary>HiLo チャート、HiLoOpenClose チャート、およびローソク足チャートに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.FillFalling">
      <summary>塗りつぶされたローソクが下落値（true）または上昇値（false）のどちらを表すかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.FillTransparent">
      <summary>始値のローソクが透過的であるか（true）、系列のシンボル色で塗りつぶされているか（false）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.FullWidth">
      <summary>Hi-Lo-Open-Close チャートの始値と終値を高値 - 安値バーの両側に水平線で表すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.ShowClose">
      <summary>Hi-Lo-Open-Close チャートに終値を表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.ShowOpen">
      <summary>Hi-Lo-Open-Close チャートに始値を表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartGantt">
      <summary>ガントチャートに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartGantt.AxisLabelsSource">
      <summary>ガントチャートの X 軸ラベルのソースを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartGantt.ShowSymbols">
      <summary>ガントチャートにシンボルを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartGantt.Width">
      <summary>それぞれの棒が占めるパーセンテージを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHistogram">
      <summary>ヒストグラムに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHistogram.NormalDisplay">
      <summary>ガウス正規曲線表示を記述するオブジェクトを取得します。</summary>
      <remarks>ヒストグラムや度数グラフは、データ値の分布を表示するために 使用されます。このデータ分布は、しばしば正規分布と比較されます。ChartNormalCurve オブジェクトのプロパティは、比較のために 組み込まれた正規（ガウス）曲線表示の外観を 制御します。この正規曲線はデータと無関係です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHistogram.NormalizationInterval">
      <summary>正規区間幅を取得または設定します。</summary>
      <remarks>不均等な区間を持つヒストグラムが生成されると、通常は、各区間の高さが単位幅あたり同じ度数を表すように 各区間が正規化されます。これにより、最も適切なヒストグラム形状が 維持されます。正規区間幅は、他のすべての区間が 正規化される幅です。正規幅と同じ幅の区間は、高さによってその値が直接示されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHistogram.Normalized">
      <summary>ヒストグラムの各系列区間を正規化するかどうかを取得または設定します。</summary>
      <remarks>不均等な区間を持つヒストグラムが生成されると、通常は、各区間の高さが単位幅あたり同じ度数を表すように 各区間が正規化されます。これにより、最も適切なヒストグラム形状が 維持されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartNormalCurve">
      <summary>ヒストグラムに使用される正規曲線の外観を定義するためのすべてのプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.ForegroundDisplay">
      <summary>正規（ガウス）曲線をチャートデータ表示の上に重ねて表示するかどうかを取得または設定します。</summary>
      <remarks>デフォルトでは、正規（ガウス）曲線はすべてのチャートデータの背後に表示されます。ForegroundDisplay プロパティを true に設定すると、正規曲線がチャートデータの上に重ねて描画されるように指定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.Visible">
      <summary>正規曲線を描画するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.UseAntiAlias">
      <summary>正規曲線をアンチエイリアスを使用して描画するかどうかを取得または設定します。</summary>
      <remarks>デフォルトでは、正規曲線はアンチエイリアスを使用して描画されます。UseAntiAlias プロパティを false に設定すると、この動作は無効になります。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.FillStyle">
      <summary>正規曲線の ChartFillStyle オブジェクトを取得します。</summary>
      <remarks>FillStyle プロパティは、正規曲線の下の領域の外観を制御します。LineStyle プロパティは、正規曲線を表す実際に描画される線の外観を制御します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.LineStyle">
      <summary>正規曲線の ChartLineStyle オブジェクトを取得します。</summary>
      <remarks>LineStyle プロパティは、正規曲線を表す実際に描画される線の外観を制御します。FillStyle プロパティは、正規曲線の下の領域の外観を制御します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DArea">
      <summary>チャートのチャート領域を表します。この領域は、プロットキューブ、すべての軸、およびチャートデータを含みます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.Style">
      <summary>チャート領域スタイルを取得します。</summary>
      <remarks>
        <see cref="P:C1.Win.FlexReport.ChartField.DefaultStyle" />を継承します。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.AxisX">
      <summary>X 軸オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.AxisY">
      <summary>Y 軸オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.AxisZ">
      <summary>Z 軸オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.View">
      <summary>3D-view オブジェクトを取得します。</summary>
      <remarks>Chart3DView オブジェクトは、3D 空間のプロットキューブの外観を制御します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DAxis">
      <summary>3D チャートの軸を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.AnnoMethod">
      <summary>軸の注釈形式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.AnnoPosition">
      <summary>軸の注釈とテキストの位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.AnnoRotated">
      <summary>注釈を回転するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.MajorGrid">
      <summary>主グリッド線オブジェクトを取得します。</summary>
      <remarks>主グリッドは大目盛りマークと同じ場所に UnitMajor 間隔で配置されます。MajorGrid プロパティを使用して、グリッド線の外観を設定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.ValueLabels">
      <summary>この軸の ChartValueLabels コレクションを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartValueLabelsCollection">
      <summary>軸の値ラベルのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.Add(C1.Win.FlexReport.Chart.ChartValueLabel)">
      <summary>既存の値ラベルをコレクションに追加します。</summary>
      <param name="label">追加する値ラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.AddNewLabel">
      <summary>新しい値ラベルをコレクションに追加します。</summary>
      <returns>新しく追加された値ラベル。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある値ラベルを削除します。</summary>
      <param name="index">削除する値ラベルのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.Remove(C1.Win.FlexReport.Chart.ChartValueLabel)">
      <summary>既存の値ラベルをコレクションから削除します。</summary>
      <param name="label">削除する値ラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DView">
      <summary>3D チャートの 3D 機能を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.AutoFit">
      <summary>2D 投影の x/y 比を自動的に計算するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.AxisFont">
      <summary>軸注釈フォントを取得または設定します。</summary>
      <remarks>軸フォントサイズは、単位キューブサイズの 100 分の 1 単位で測定されます。すべての軸が同じ軸フォントを持ちます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.AxisTitleFont">
      <summary>軸タイトルフォントを取得または設定します。</summary>
      <remarks>軸タイトルフォントサイズは、単位キューブサイズの 100 分の 1 単位で測定されます。すべての軸が同じ軸タイトルフォントを持ちます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.BackColor">
      <summary>プロットキューブの背景色を取得または設定します。</summary>
      <remarks>Chart3DArea.Style.BackColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ShouldSerializeBackColor">
      <summary>BackColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart3DArea オブジェクトから BackColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ResetBackColor">
      <summary>BackColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ForeColor">
      <summary>プロットキューブの前景色を取得または設定します。</summary>
      <remarks>Chart3DArea.Style.ForeColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ShouldSerializeForeColor">
      <summary>ForeColor プロパティがデフォルト状態の場合は、false を返します。</summary>
      <remarks>デフォルト状態では、Chart3DArea オブジェクトから ForeColor を継承します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ResetForeColor">
      <summary>ForeColor プロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Boxed">
      <summary>すべてのプロットキューブエッジをレンダリングするかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Ceiling">
      <summary>天井面に対応する Chart3DProject オブジェクトを取得します。</summary>
      <remarks>これは、等高線やゾーンを z = zmax 平面に投影したものです。このプロパティは面グラフのみに使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Floor">
      <summary>床面に対応する Chart3DProject オブジェクトを取得します。</summary>
      <remarks>これは、等高線やゾーンを z = zmin 平面に投影したものです。このプロパティは面グラフのみに使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Perspective">
      <summary>3D ビューのパースペクティブを取得または設定します。</summary>
      <remarks>1 より大きい値である必要があります。この値が大きくなるほど、パースペクティブ効果が低下し、平行投影に近づきます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.RotationX">
      <summary>X 軸を中心とする回転を取得または設定します。</summary>
      <remarks>X 軸を中心とするプロットキューブの回転角度を指定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.RotationY">
      <summary>Y 軸を中心とする回転を取得または設定します。</summary>
      <remarks>Y 軸を中心とするプロットキューブの回転角度を指定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.RotationZ">
      <summary>Z 軸を中心とする回転を取得または設定します。</summary>
      <remarks>Z 軸を中心とするプロットキューブの回転角度を指定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.TextRotation">
      <summary>軸タイトルと軸注釈のテキストの回転を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ViewportHorizontalShift">
      <summary>チャートビューポートの水平シフトを取得または設定します。</summary>
      <remarks>フルビュー（クリップされない最大のビュー）から水平方向にビューを平行移動する程度を指定します。移動は、左下隅を原点とする正規化ボックスを基準にします。ViewPortScale = 1 の場合は、フル単位より大きく（1.0 または -1.0 より大）移動すると、ビューが「表示範囲外」に移動します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ViewportScale">
      <summary>チャートビューポートのスケールを取得または設定します。</summary>
      <remarks>フル（クリップされない最大の）ビューからスケール（ズーム）アップまたはダウンする程度を指定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ViewportVerticalShift">
      <summary>チャートビューポートの垂直シフトを取得または設定します。</summary>
      <remarks>フルビューから垂直方向にビューを平行移動する程度を指定します。移動は、左下隅を原点とする 正規化ボックスを基準にします。ViewPortScale = 1 の場合は、フル単位より大きく（1.0 または -1.0 より大）移動すると、ビューが「表示範囲外」に移動します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.XScale">
      <summary>X 軸方向のプロットキューブのスケーリングを取得または設定します。</summary>
      <remarks>これは、キューブの高さ（Z 軸）を基準として測定される X 軸方向のスケーリング量です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.YScale">
      <summary>Y 軸方向のプロットキューブのスケーリングを取得または設定します。</summary>
      <remarks>これは、キューブの高さ（Z 軸）を基準として測定される Y 軸方向のスケーリング量です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.View3D">
      <summary>事前定義されたビューを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DProjection">
      <summary>等高線グラフやゾーンチャートの投影（床面または天井面）を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DProjection.IsContoured">
      <summary>投影された等高線を描画するかどうかを取得または設定します。</summary>
      <remarks>true の場合は、Chart3DContour オブジェクトの IsContoured プロパティの値に関係なく、投影された等高線が描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DProjection.IsZoned">
      <summary>投影されたゾーンを描画するかどうかを取得または設定します。</summary>
      <remarks>true の場合は、Chart3DContour オブジェクトの IsZoned プロパティの値に関係なく、投影された等高線が描画されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGridLines">
      <summary>グリッドの外観の制御に使用されるプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.IsOnXYPlane">
      <summary>グリッド線を XY 平面上に表示するかどうかを取得または設定します。</summary>
      <remarks>2D 投影では、グリッド線は軸に垂直に描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.IsOnXZPlane">
      <summary>グリッド線を XZ 平面上に表示するかどうかを取得または設定します。</summary>
      <remarks>2D 投影では、グリッド線は軸に垂直に描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.IsOnYZPlane">
      <summary>グリッド線を YZ 平面上に表示するかどうかを取得または設定します。</summary>
      <remarks>2D 投影では、グリッド線は軸に垂直に描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.Style">
      <summary>グリッドを描画するための線スタイルを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DData">
      <summary>3D チャートグループのチャートデータ定義を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.Layout">
      <summary>チャートデータのレイアウトタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.GridData">
      <summary>標準グリッドデータレイアウトの設定を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.IrGridData">
      <summary>非標準グリッドデータレイアウトの設定を取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGridData">
      <summary>標準グリッドデータレイアウトの設定を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.RowOrigin">
      <summary>グリッド原点の Y 座標を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.ColumnOrigin">
      <summary>グリッド原点の X 座標を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.RowDelta">
      <summary>グリッドのデータセット内のデータ値と隣接する行の間のスペース量を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.ColumnDelta">
      <summary>グリッドのデータセット内のデータ値と隣接する列の間のスペース量を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DIrGridData">
      <summary>非標準グリッドデータレイアウトの設定を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.RowOrigin">
      <summary>グリッド原点の Y 座標を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.ColumnOrigin">
      <summary>グリッド原点の X 座標を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.RowDeltaArray">
      <summary>グリッドのデータセット内のデータ値と隣接する行の間のスペース量を示す配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.ColumnDeltaArray">
      <summary>グリッドのデータセット内のデータ値と隣接する列の間のスペース量を示す配列を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGroups">
      <summary>Chart3DGroup、データラベル、チャート、および等高線スタイルを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.RowLabels">
      <summary>行ラベルのコレクションを取得します。</summary>
      <remarks>Y 軸の AnnoMethod プロパティが DataLabels に設定されている場合に使用されるチャート内の行（Y 軸）のラベル。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.ColumnLabels">
      <summary>列ラベルのコレクションを取得します。</summary>
      <remarks>X 軸の AnnoMethod プロパティが DataLabels に設定されている場合に使用されるチャート内の列（X 軸）のラベル。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.Group0">
      <summary>最初のチャートグループを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.ContourStyles">
      <summary>等高線スタイルコレクションを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGroup">
      <summary>チャートデータおよびチャートの外観を制御するクラスを含むクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.ChartType">
      <summary>表示されるチャートのタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.ChartData">
      <summary>チャートのデータを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Bar">
      <summary>横棒グラフの外観を制御するオブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Contour">
      <summary>使用する等高線のタイプを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Elevation">
      <summary>チャートの 3D 外観を制御するオブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Surface">
      <summary>面形式グラフの外観を制御するオブジェクトを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DContourStyles">
      <summary>等高線スタイルを生成するための設定を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContourStyles.ColorSet">
      <summary>等高線スタイルの事前定義された色のコレクションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContourStyles.Colors">
      <summary>色のコレクションを取得します。</summary>
      <remarks>
        このコレクションは、
        <see cref="P:C1.Win.FlexReport.Chart.Chart3DContourStyles.ColorSet" />プロパティが
        <see cref="F:C1.Win.FlexReport.Chart.ChartColorSet.Custom" />に設定されている場合に使用されます。
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DColorsCollection">
      <summary>色のコレクションを表します。</summary>
    </member>
    <member name="E:C1.Win.FlexReport.Chart.Chart3DColorsCollection.ColorsChanged">
      <summary>コレクションが変化すると発生します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Item(System.Int32)">
      <summary>指定された Color を数値インデックスに基づいて取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Add(System.Drawing.Color)">
      <summary>新しい Color をコレクションに追加します。</summary>
      <param name="color">追加する Color。</param>
      <returns>Color を追加するコレクション内のインデックスを示す整数。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Contains(System.Drawing.Color)">
      <summary>指定された Color がコレクション内にあるかどうかを確認します。</summary>
      <param name="color">検索する Color。</param>
      <returns>Color がコレクション内にあるかどうかを示す boolean。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.CopyTo(System.Drawing.Color[],System.Int32)">
      <summary>コレクション内の Color 要素を指定されたインデックスから Color の配列にコピーします。</summary>
      <param name="array">出力配列。</param>
      <param name="index">開始インデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.IndexOf(System.Drawing.Color)">
      <summary>コレクション内の指定された Color のインデックスを取得します。</summary>
      <param name="color">検索する Color。</param>
      <returns>色のインデックスは Integer によって表されます。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Remove(System.Drawing.Color)">
      <summary>指定された Color をコレクションから削除します。</summary>
      <param name="color">削除する Color。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Insert(System.Int32,System.Drawing.Color)">
      <summary>指定された Color をコレクション内の指定されたインデックスに挿入します。</summary>
      <param name="index">インデックス。</param>
      <param name="color">挿入する Color。</param>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection">
      <summary>Chart3DDataLabel オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.Add(C1.Win.FlexReport.Chart.Chart3DDataLabel)">
      <summary>既存のデータラベルをコレクションに追加します。</summary>
      <param name="label">追加するデータ値。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.AddNewLabel">
      <summary>新しいデータラベルをコレクションに追加します。</summary>
      <returns>新しく追加されたデータラベル。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるデータラベルを削除します。</summary>
      <param name="index">削除するデータラベルのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.Remove(C1.Win.FlexReport.Chart.Chart3DDataLabel)">
      <summary>既存のデータラベルをコレクションから削除します。</summary>
      <param name="label">削除するデータラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataLabel">
      <summary>チャートデータに添付できる個別のテキスト注釈を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataLabel.Index">
      <summary>ラベルのインデックスを取得または設定します。</summary>
      <remarks>行（RowLabels）または列（ColumnLabels）の番号を表します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataLabel.Text">
      <summary>ラベルのテキストを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBar">
      <summary>横棒グラフに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.Colors">
      <summary>Chart3DBarColor オブジェクトのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.ColumnFormat">
      <summary>列の書式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.ColumnWidth">
      <summary>列幅を取得または設定します。</summary>
      <remarks>幅は、利用可能なスペース全体に対するパーセンテージで測定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.Origin">
      <summary>横棒グラフの Z 軸の原点を取得または設定します。</summary>
      <remarks>棒の塗りつぶしを開始する Z 値を定義します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.RowFormat">
      <summary>行の書式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.RowWidth">
      <summary>行幅を取得または設定します。</summary>
      <remarks>幅は、利用可能なスペース全体に対するパーセンテージで測定されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DContour">
      <summary>等高線グラフとゾーンチャートに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.ContourMethod">
      <summary>等高線の計算方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.IsContoured">
      <summary>チャートを等高線で表すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.IsZoned">
      <summary>チャートをゾーン化するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.NumLevels">
      <summary>等高線レベルの数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.ZoneMethod">
      <summary>ゾーンの方法を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DElevation">
      <summary>さまざまなチャートタイプの外観の制御に使用されるプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.DepthCur">
      <summary>散布図のポイントサイズが視点からの距離に依存するかどうかを取得または設定します。</summary>
      <remarks>散布図専用。ポイントサイズが視点からの距離に依存する場合は、このプロパティを true に設定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.DropLines">
      <summary>散布図のポイントがドロップラインを持つかどうかを取得または設定します。</summary>
      <remarks>散布図専用。ポイントがドロップラインを持つ場合は、このプロパティを true に設定します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.IsMeshed">
      <summary>面グラフにメッシュを付けるかどうか、または横棒グラフの棒に輪郭を付けるかどうかを取得または設定します。</summary>
      <remarks>横棒グラフと面グラフ専用。このプロパティを true に設定すると、面にはメッシュが付いて、棒には輪郭が付いて表示されます。Chart3DSurface オブジェクトコントロールの IsColumnMeshShowing プロパティと IsRowMeshShowing プロパティを 使用して、X 方向または Y 方向のメッシュラインをオフにすることができます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.IsShaded">
      <summary>面グラフまたは横棒グラフで陰影を使用するかどうかを取得または設定します。</summary>
      <remarks>横棒グラフと面グラフ専用。このプロパティを true に設定すると、面や棒の色がフラットな陰影で表示されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.MeshBottomColor">
      <summary>メッシュの下部色を取得または設定します。</summary>
      <remarks>横棒グラフでは、この色は、Chart3DBar Origin プロパティで指定される値より小さい値の棒に使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.MeshTopColor">
      <summary>メッシュの上部色を取得または設定します。</summary>
      <remarks>横棒グラフでは、この色は、Chart3DBar Origin プロパティで指定される値より大きい値の棒に使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.ShadedBottomColor">
      <summary>影付き面の下部色を取得または設定します。</summary>
      <remarks>横棒グラフでは、この色は、Chart3DBar Origin プロパティで指定される値より小さい値の棒に使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.ShadedTopColor">
      <summary>影付き面の上部色を取得または設定します。</summary>
      <remarks>横棒グラフでは、この色は、Chart3DBar Origin プロパティで指定される値より大きい値の棒に使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.Transparency">
      <summary>チャートデータの描画の透過性を取得または設定します。</summary>
      <remarks>0 – 透過、255 – 不透過。非等高線チャートおよび非ゾーンチャートにのみ適用されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DSurface">
      <summary>面グラフに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.ColumnMeshFilter">
      <summary>列メッシュラインが描画される頻度を取得または設定します。</summary>
      <remarks>このプロパティの値が n の場合は、n 本ごとにメッシュラインが描画されます。このメッシュフィルタは、標準と非標準の両方のグリッドに適用されます。このプロパティを 0 に設定すると、メッシュフィルタが自動的に選択されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.IsColumnMeshShowing">
      <summary>列メッシュラインを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.IsRowMeshShowing">
      <summary>行メッシュラインを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.RowMeshFilter">
      <summary>行メッシュラインが描画される頻度を取得または設定します。</summary>
      <remarks>このプロパティの値が n の場合は、n 本ごとにメッシュラインが描画されます。このメッシュフィルタは、標準と非標準の両方のグリッドに適用されます。このプロパティを 0 に設定すると、メッシュフィルタが自動的に選択されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection">
      <summary>Chart3DBarColor オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.Add(C1.Win.FlexReport.Chart.Chart3DBarColor)">
      <summary>既存の棒の色をコレクションに追加します。</summary>
      <param name="color">追加する棒の色。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.AddNewColor">
      <summary>新しい棒の色をコレクションに追加します。</summary>
      <returns>新しく追加される棒の色。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある棒の色を削除します。</summary>
      <param name="index">削除する棒の色のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.Remove(C1.Win.FlexReport.Chart.Chart3DBarColor)">
      <summary>既存の棒の色をコレクションから削除します。</summary>
      <param name="color">削除する棒の色。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBarColor">
      <summary>個々の棒の色を設定するために使用されるプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBarColor.Color">
      <summary>棒の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBarColor.Row">
      <summary>棒の行を取得または設定します。</summary>
      <remarks>-1 の場合は、色がすべての行に適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBarColor.Column">
      <summary>棒の列を取得または設定します。</summary>
      <remarks>-1 の場合は、色がすべての列に適用されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartData">
      <summary>1 つのチャートグループのチャートデータ定義を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.Hole">
      <summary>データ欠損値を取得または設定します。</summary>
      <remarks>データ欠損は、通常はデータが存在する場所に例外的にデータが存在しないことを示すために、データポイントの プレースホルダとして使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.IsForEachRecord">
      <summary>このデータが各レコードによって選択されるかどうかを取得または設定します。</summary>
      <remarks>デフォルトでは、データは CategoryGroups によってグループ化されます。IsForEachRecord を true に設定すると、データはグループ化されず、最初のカテゴリグループから X 軸のラベルが提供されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.ColorMode">
      <summary>各カテゴリと系列の色を設定するために使用するモードを取得または設定します。</summary>
      <remarks>2D 棒グラフ、円グラフ、ローソク足チャート、ガントチャート、HiLo チャート、HiLoOpenClose チャート、折れ線グラフ、レーダーチャート、階段グラフ、3D 棒グラフの各タイプで有効です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.CategoryGroups">
      <summary>X 軸のラベルを提供するカテゴリグループのコレクションを取得します。</summary>
      <remarks>空のコレクションは、すべてのレコードが 1 つのグループにグループ化されていることを意味します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.SeriesGroups">
      <summary>追加のデータレベルとして使用されるオプションの系列グループのコレクションを取得します。</summary>
      <remarks>これは、追加のデータレベル用のオプションです（たとえば、国別の注文を年別でも細分できます）。系列のラベルは、凡例に表示されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.SeriesValues">
      <summary>各系列のテンプレートを定義する系列値のコレクションを取得します。</summary>
      <remarks>少なくとも 1 つの系列値。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DData">
      <summary>1 つの 2D チャートグループのチャートデータ定義を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DData.SeriesWidth">
      <summary>3D 効果グラフの各系列が表示される幅の幅全体に対するパーセンテージを取得します。</summary>
      <remarks>3D 面グラフ、3D 折れ線グラフ、またはリボングラフに適用されます。値は 10～100 に制限されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataGroupsCollection">
      <summary>チャートデータグループのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.Add(C1.Win.FlexReport.Chart.ChartDataGroup)">
      <summary>既存のデータグループをコレクションに追加します。</summary>
      <param name="group"></param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.AddNewGroup(System.String)">
      <summary>新しいデータグループをコレクションに追加します。</summary>
      <param name="groupExpression">新しいグループのグループ式。</param>
      <returns>新しく追加されたデータグループ。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.AddNewGroup">
      <summary>新しいデータグループをコレクションに追加します。</summary>
      <returns>新しく追加されたデータグループ。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.RemoveAt(System.Int32)">
      <summary>特定のインデックス位置のデータグループを削除します。</summary>
      <param name="index">削除するデータグループのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.Remove(C1.Win.FlexReport.Chart.ChartDataGroup)">
      <summary>コレクションから既存のデータグループを削除します。</summary>
      <param name="group">削除するデータグループ。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataGroup">
      <summary>チャートデータグループ定義を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.SortType">
      <summary>データグループのソートタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.Name">
      <summary>データグループの名前を取得または設定します。</summary>
      <remarks>これは、データグループコレクション内で一意でなければなりません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.GroupExpression">
      <summary>グループ化に使用される式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.LabelExpression">
      <summary>ラベルに使用される式を取得または設定します。</summary>
      <remarks>LabelExpression が空の場合、ラベルは GroupExpression によって指定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.FilterExpression">
      <summary>フィルタ処理に使用される式を取得または設定します。</summary>
      <remarks>GroupExpression を使用してグループ化した後で、FilterExpression を使用してそのグループをフィルタ処理します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.SortExpression">
      <summary>ソートに使用される式を取得または設定します。</summary>
      <remarks>フィルタ処理後、SortExpression の値を使用してグループをソートします。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.FilterOutName">
      <summary>フィルタ処理で除外されたすべてのグループを結合した新しいグループの名前を取得または設定します。</summary>
      <remarks>空の場合は、除外されたグループが破棄されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroup.ToString">
      <summary>このデータグループを表す文字列を取得します。</summary>
      <returns>これが空でない場合は、このデータグループの名前。そうでない場合はクラス名。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataSeriesCollection">
      <summary>チャートデータ系列定義のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.Add(C1.Win.FlexReport.Chart.ChartDataSeries)">
      <summary>既存のデータ系列をコレクションに追加します。</summary>
      <param name="series">追加するデータ系列。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.AddNewSeries">
      <summary>新しいデータ系列をコレクションに追加します。</summary>
      <returns>新しく追加されたデータ系列。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるデータ系列を削除します。</summary>
      <param name="index">削除するデータ系列のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.Remove(C1.Win.FlexReport.Chart.ChartDataSeries)">
      <summary>コレクションから既存のデータ系列を削除します。</summary>
      <param name="series">削除するデータ系列。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataSeries">
      <summary>チャートデータ系列定義を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeries.#ctor">
      <summary>ChartDataSeries オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Label">
      <summary>データ系列のラベルを取得または設定します。</summary>
      <remarks>ラベルは、凡例項目のタイトルを表します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Connected">
      <summary>3D 系列ポイントを線で結ぶかどうかを取得または設定します。</summary>
      <remarks>これは、PointData レイアウトを使用した 3D 散布図専用です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.DataValues">
      <summary>データ系列のデータ値コレクションを取得します。</summary>
      <remarks>チャートタイプごとに異なる長さのデータ値が必要です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.DataLabel">
      <summary>データラベルオブジェクトを取得または設定します。</summary>
      <remarks>2D チャート専用。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Display">
      <summary>系列の表示を取得または設定します。</summary>
      <remarks>2D チャート専用。このプロパティは、データ系列を表示または非表示にしたり、それをチャート化から除外するために使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.FillStyle">
      <summary>データ系列の塗りつぶしスタイルを取得または設定します。</summary>
      <remarks>2D チャート専用。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.FitType">
      <summary>曲線のフィッティングタイプを取得または設定します。</summary>
      <remarks>2D チャート専用。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.LegendEntry">
      <summary>系列ラベルを凡例に表示するかどうかを取得または設定します。</summary>
      <remarks>2D チャート専用。凡例には入れずにデータ系列をチャート化するとよいこともあります。LegendEntry プロパティを false に設定すると、凡例の系列エントリが非表示になります。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.LineStyle">
      <summary>色、太さ、パターンなどの系列の線スタイルを取得または設定します。</summary>
      <remarks>PointData レイアウトを使用した 2D チャートまたは 3D 散布図用です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.SymbolStyle">
      <summary>色、サイズ、形などの系列のシンボルスタイルを取得または設定します。</summary>
      <remarks>PointData レイアウトを使用した 2D チャートまたは 3D 散布図用です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Offset">
      <summary>適切なチャートの系列オフセットを取得または設定します。</summary>
      <remarks>2D チャート専用。系列オフセットは、チャートタイプによって異なる意味付けが可能です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Histogram">
      <summary>ヒストグラムのヒストグラム設定を取得します。</summary>
      <remarks>2D ヒストグラム専用。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.PlotFilter">
      <summary>大きなデータ配列のプロットを最適化するためのプロットフィルタ値を取得または設定します。</summary>
      <remarks>2D XYPlot 専用。プロットフィルタ値は、直前のデータポイントからの最小距離を表します（ピクセル単位）。距離が PlotFilter より小さい場合、そのポイントはプロットされません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.PlotFilterMethod">
      <summary>プロットフィルタの方法を取得または設定します。</summary>
      <remarks>2D XYPlot 専用。このプロパティは、大きなデータ配列をプロットするときの最適化の方法を指定します。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeries.ToString">
      <summary>データ系列を表す文字列を取得します。</summary>
      <returns>これが空でない場合は、データ系列のラベル。そうでない場合はクラス名。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataValuesCollection">
      <summary>データ値のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.Add(C1.Win.FlexReport.Chart.ChartDataValue)">
      <summary>既存のデータ値をコレクションに追加します。</summary>
      <param name="dataValue">追加するデータ値。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.AddNewValue(System.String)">
      <summary>新しいデータ値をコレクションに追加します。</summary>
      <param name="valueExpression">新しいデータ値の値式。</param>
      <returns>新しく追加されたデータ値。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.AddNewValue">
      <summary>新しいデータ値をコレクションに追加します。</summary>
      <returns>新しく追加されたデータ値。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるデータ値を削除します。</summary>
      <param name="index">削除するデータ値のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.Remove(C1.Win.FlexReport.Chart.ChartDataValue)">
      <summary>コレクションから既存のデータ値を削除します。</summary>
      <param name="dataValue">削除するデータ値。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataValue">
      <summary>データ系列のチャートデータ値を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataValue.Name">
      <summary>データ値の名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataValue.ValueExpression">
      <summary>データ値の式を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSeriesHistogram">
      <summary>ヒストグラムに固有のプロパティを保持するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.DisplayType">
      <summary>度数データの表示に使用される方法を取得または設定します。</summary>
      <remarks>度数データは、系列ごとに異なる方法で表示でき、1 つのチャートグループ内で 複数の表示タイプを組み合わせて使用できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalCreationMethod">
      <summary>ヒストグラムの区間の指定に使用する方法を取得または設定します。</summary>
      <remarks>
        区間境界は、さまざまな方法で決定できます。
        <para>Automatic 法を使用する場合は、データの最大値と最小値を使用し、区間をデータ平均の 3 標準偏差内に収まるように制限して、区間の上限値と下限値が計算されます。区間数はオプションです。区間境界は均等になるように計算されます。</para><para>SemiAutomatic 法を使用する場合は、区間数と共に区間の上限値と下限値を指定します。区間境界は均等になるように計算されます。</para><para>XDataBoundaries 法を使用する場合は、データ系列の X 値を使用して各区間境界が 明示的に設定されます。X 値はソートされ、重複値は除外されます。結果の各昇順値を使用して、次の区間境界が決定されます。したがって、結果の 1 番目と 2 番目の X 値によって先頭の区間が定義され、後続の X 値によってそれぞれ次の区間の終わりが指定されます。N 個の区間を指定するには、N+1 個の一意の X 値が必要です。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalNumber">
      <summary>ヒストグラム内の区間の数を取得または設定します。</summary>
      <remarks>IntervalNumber プロパティは、Automatic 法と SemiAutomatic 法を使用して 作成されたヒストグラムにのみ適用されます。XDataBoundaries 法を使用する場合、区間の数は、指定された重複しない X 値の数より 1 小さい数として 定義されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalStart">
      <summary>最初の区間の開始数値を取得または設定します。</summary>
      <remarks>SemiAutomatic 作成法にのみ適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalWidth">
      <summary>各区間の幅の数値を取得または設定します。</summary>
      <remarks>SemiAutomatic 作成法にのみ適用されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataLabel">
      <summary>データ値のテキストラベルを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataLabel.#ctor">
      <summary>ChartDataLabel オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Compass">
      <summary>指定された位置を基準にしたラベルの位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Connected">
      <summary>関連付けられたデータポイントに接続線を描画するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Filter">
      <summary>データラベルのフィルタ値を取得または設定します。</summary>
      <remarks>フィルタ = 1 の場合は、各データポイントにラベルが付き、フィルタ = 2 の場合は、1 つおきにラベルが付きます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Offset">
      <summary>関連付けられたデータポイントからのオフセット距離（ピクセル単位）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Text">
      <summary>ラベルのテキストを取得または設定します。</summary>
      <remarks>テキストは、系列ラベルやデータ値を参照する多くのキーワード（#TEXT、#XVAL、#YVAL、#YVAL1、#YVAL2、#YVAL3、%YVAL）をサポートします。たとえば、"{#YVAL:0.00}" は、Y 値を小数点以下 2 桁の形式で表します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Visible">
      <summary>ラベルの表示/非表示を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Style">
      <summary>ラベルの ChartStyle オブジェクトを取得します。</summary>
      <remarks>ChartLabels.DefaultLabelStyle プロパティを継承します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSortType">
      <summary>
        <seealso cref="T:C1.Win.FlexReport.Chart.ChartDataGroup" />のソートタイプを指定します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Ascending">
      <summary>同じ値をまとめてから、グループを昇順にソートします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Descending">
      <summary>同じ値をまとめてから、グループを降順にソートします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Original">
      <summary>同じ値をまとめ、グループの元の順を維持します（最初の表示順）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Original2">
      <summary>グループフィールド内の値が変化すると、近くにある同じ値のみがグループ化されて、新しいグループが開始されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisType">
      <summary>グラフ軸のタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisType.Auto">
      <summary>Auto では、データ値に応じて軸タイプが選択されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisType.Category">
      <summary>軸は、カテゴリの配置に使用されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisType.Numeric">
      <summary>数値軸が使用されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPieLegendLayout">
      <summary>凡例項目のレイアウトテキストを指定します。これは、単一の円グラフで使用する追加の凡例テキストを定義します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.None">
      <summary>レイアウトテキストがありません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.Percentage">
      <summary>グループ値をパーセンテージで表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.Amount">
      <summary>グループ値を量で表示します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPieSliceDetachment">
      <summary>デタッチするセグメントを指定します。これは、単一の円グラフで有効です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieSliceDetachment.NoDetachment">
      <summary>セグメントをデタッチしません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieSliceDetachment.SmallestSlice">
      <summary>最小値を含むセグメントをデタッチします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieSliceDetachment.LargestSlice">
      <summary>最大値を含むセグメントをデタッチします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualizationType">
      <summary>チャートの視覚化タイプ（2D または 3D）を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartVisualizationType.Chart2D">
      <summary>2D チャートを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartVisualizationType.Chart3D">
      <summary>3D チャートを指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartColorGeneration">
      <summary>データ系列の色の生成に使用されるカラーテーマを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CustomByDataColor">
      <summary>DataColor プロパティのカスタム色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CustomByPalette">
      <summary>Palette プロパティのカスタム色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Standard">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Office">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.GrayScale">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Apex">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Aspect">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Civic">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Concourse">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Equity">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Flow">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Foundry">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Median">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Metro">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Module">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Opulent">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Oriel">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Origin">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Paper">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Solstice">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Technic">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Trek">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Urban">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Verve">
      <summary>同じ名前の Office 2007 テーマと同様の配色を使用します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DType">
      <summary>2D チャートのタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.XYPlot">
      <summary>プロットグラフタイプ。</summary>
      <remarks>X 値と Y 値を指定する 2 つのデータ値が必要です。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Pie">
      <summary>円グラフタイプ。</summary>
      <remarks>Y 値を指定する 1 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Bar">
      <summary>棒グラフタイプ。</summary>
      <remarks>Y 値を指定する 1 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Area">
      <summary>面グラフタイプ。</summary>
      <remarks>Y 値を指定する 1 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Polar">
      <summary>ポーラチャートタイプ。</summary>
      <remarks>X（角度）値と Y（半径）値を指定する 2 つのデータ値が必要です。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Radar">
      <summary>レーダーチャートタイプ。</summary>
      <remarks>Y（半径）値を指定する 1 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Bubble">
      <summary>バブルチャートタイプ。</summary>
      <remarks>X、Y、Y2（サイズ）の各値を指定する 3 つのデータ値が必要です。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.HiLo">
      <summary>HiLo チャートタイプ。</summary>
      <remarks>Y（高）値と Y2（低）値を指定する 2 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.HiLoOpenClose">
      <summary>HiloOpenClose チャートタイプ。</summary>
      <remarks>Y（高値）、Y2（低値）、Y3（始値）、Y4（終値）の各値を指定する 4 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Candle">
      <summary>ローソク足チャートタイプ。</summary>
      <remarks>Y（高値）、Y2（低値）、Y3（始値）、Y4（終値）の各値を指定する 4 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Gantt">
      <summary>ガントチャートタイプ。</summary>
      <remarks>Y（始）値と Y2（終）値を指定する 2 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Step">
      <summary>階段グラフタイプ。</summary>
      <remarks>Y 値を指定する 1 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Histogram">
      <summary>ヒストグラムチャートタイプ。</summary>
      <remarks>Y 値を指定する 1 つのデータ値が必要です。X 値はカテゴリグループから取得されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBorderStyle">
      <summary>境界線のスタイルを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.NotSet">
      <summary>境界線スタイルを設定せず、Chart フィールドを継承します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.None">
      <summary>境界線なし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Empty">
      <summary>空の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Solid">
      <summary>実線の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Raised">
      <summary>浮き出た 3D の境界線。システム色を使用して描画されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Inset">
      <summary>くぼんだ 3D の境界線。システム色を使用して描画されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.RaisedBevel">
      <summary>内側が浮き出た 3D の斜影付き境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.InsetBevel">
      <summary>内側がくぼんだ 3D の斜影付き境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Groove">
      <summary>複合境界線（くぼんだ線 + 浮き出た線）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Fillet">
      <summary>複合境界線（浮き出た線 + くぼんだ線）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Double">
      <summary>実線の二重境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Dashed">
      <summary>点線の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Opaque">
      <summary>アンチエイリアスなしでレンダリングされる実線の境界線。Opaque 境界線は角丸を無視します。アンチエイリアスチャートを透過画像としてレンダリングするときにたいへん便利です。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartGradientStyle">
      <summary>グラデーション背景のスタイルを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.None">
      <summary>グラデーション塗りつぶしなし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Horizontal">
      <summary>左（BackColor）から右（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.HorizontalCenter">
      <summary>中央（BackColor）から左右（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Vertical">
      <summary>上（BackColor）から下（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.VerticalCenter">
      <summary>中央（BackColor）から上下（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Diagonal">
      <summary>左下（BackColor）から右上（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.DiagonalCenter">
      <summary>中央（BackColor）から左下と右上（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.DiagonalBack">
      <summary>左上（BackColor）から右下（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.DiagonalBackCenter">
      <summary>中央（BackColor）から左上と右下（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Radial">
      <summary>中央（BackColor）から放射状に四方へ（BackColor2）へ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.FromCenter">
      <summary>中央（BackColor）から隅（BackColor2）へ。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHatchStyle">
      <summary>ハッチ背景のスタイルを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.None">
      <summary>パターンなし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Horizontal">
      <summary>水平線のパターン。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Vertical">
      <summary>垂直線のパターン。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.ForwardDiagonal">
      <summary>左上から右下に向かう斜線のパターン。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.BackwardDiagonal">
      <summary>右上から左下に向かう斜線のパターン。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Cross">
      <summary>縦横に交差する線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DiagonalCross">
      <summary>斜めに交差する線を指定します。線はアンチエイリアスされます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent05">
      <summary>5 パーセントハッチを指定します。前景色と背景色の比率が 5:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent10">
      <summary>10 パーセントハッチを指定します。前景色と背景色の比率が 10:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent20">
      <summary>20 パーセントハッチを指定します。前景色と背景色の比率が 20:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent25">
      <summary>25 パーセントハッチを指定します。前景色と背景色の比率が 25:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent30">
      <summary>30 パーセントハッチを指定します。前景色と背景色の比率が 30:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent40">
      <summary>40 パーセントハッチを指定します。前景色と背景色の比率が 40:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent50">
      <summary>50 パーセントハッチを指定します。前景色と背景色の比率が 50:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent60">
      <summary>60 パーセントハッチを指定します。前景色と背景色の比率が 60:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent70">
      <summary>70 パーセントハッチを指定します。前景色と背景色の比率が 70:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent75">
      <summary>75 パーセントハッチを指定します。前景色と背景色の比率が 75:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent80">
      <summary>80 パーセントハッチを指定します。前景色と背景色の比率が 80:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent90">
      <summary>90 パーセントハッチを指定します。前景色と背景色の比率が 90:100 です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightDownwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に左に傾き、ForwardDiagonal より 50 パーセント間隔が狭く、アンチエイリアスされない斜線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightUpwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に左に傾き、BackwardDiagonal より 50 パーセント間隔が狭く、アンチエイリアスされない斜線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkDownwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に右に傾き、ForwardDiagonal より 50 パーセント間隔が狭く、ForwardDiagonal の 2 倍の幅の斜線を指定します。このハッチパターンは、アンチエイリアスされません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkUpwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に左に傾き、BackwardDiagonal より 50 パーセント間隔が狭く、幅が 2 倍の アンチエイリアスされない斜線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.WideDownwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に右に傾き、ハッチスタイル ForwardDiagonal と同じ間隔を持ち、幅が 3 倍のアンチエイリアスされない斜線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.WideUpwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に左に傾き、ハッチスタイル BackwardDiagonal と同じ間隔を持ち、幅が 3 倍のアンチエイリアスされない斜線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightVertical">
      <summary>Vertical より 50 パーセント間隔が狭い垂直線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightHorizontal">
      <summary>Horizontal より 50 パーセント間隔が狭い水平線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.NarrowVertical">
      <summary>ハッチスタイル Vertical より 75 パーセント間隔が狭い（または LightVertical より 25 パーセント狭い）垂直線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.NarrowHorizontal">
      <summary>ハッチスタイル Horizontal より 75 パーセント間隔が狭い（または LightHorizontal より 25 パーセント狭い）水平線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkVertical">
      <summary>Vertical より 50 パーセント間隔が狭く、幅が 2 倍の垂直線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkHorizontal">
      <summary>Horizontal より 50 パーセント間隔が狭く、幅が 2 倍の水平線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedDownwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に右に傾く破線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedUpwardDiagonal">
      <summary>上部ポイントから下部ポイントの方向に左に傾く破線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedHorizontal">
      <summary>水平方向の破線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedVertical">
      <summary>垂直方向の破線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SmallConfetti">
      <summary>紙吹雪模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LargeConfetti">
      <summary>紙吹雪の外観を持ち、SmallConfetti より大きな要素から成るハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.ZigZag">
      <summary>水平方向のジグザグ模様の線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Wave">
      <summary>水平方向の波形模様の線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DiagonalBrick">
      <summary>上部ポイントから下部ポイントの方向に 左に傾斜したれんが模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.HorizontalBrick">
      <summary>水平れんが模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Weave">
      <summary>織物模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Plaid">
      <summary>格子縞模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Divot">
      <summary>くぼみ模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DottedGrid">
      <summary>ドット模様からなる縦横に交差する線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DottedDiamond">
      <summary>ドット模様からなる斜めに交差する線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Shingle">
      <summary>上部ポイントから下部ポイントの方向に 右に傾斜した屋根板模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Trellis">
      <summary>格子模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Sphere">
      <summary>互いに接するように並べられた球模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SmallGrid">
      <summary>ハッチスタイル Cross より 50 パーセント間隔が狭い、縦横に交差する線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SmallCheckerBoard">
      <summary>チェッカー盤模様のハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LargeCheckerBoard">
      <summary>SmallCheckerBoard の 2 倍のサイズの正方形を使用したチェッカー盤模様の ハッチを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.OutlinedDiamond">
      <summary>アンチエイリアスされない、斜めに交差する線を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SolidDiamond">
      <summary>斜めに置かれたチェッカー盤模様のハッチを指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlignHorz">
      <summary>チャート要素の水平方向の配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.General">
      <summary>テキストは左揃えに、数値は右揃えに設定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Near">
      <summary>テキストを近い側に揃えます（左から右に並べられるモードでは左側）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Center">
      <summary>テキストを中央揃えにします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Far">
      <summary>セルテキストを遠い側に揃えます（左から右に並べられるモードでは右側）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Justify">
      <summary>テキストを全体に広げて配置します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlignImage">
      <summary>チャート要素内の画像の配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Hide">
      <summary>画像は非表示になります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Left">
      <summary>画像は左に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Right">
      <summary>画像は右に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Top">
      <summary>画像は上に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Bottom">
      <summary>画像は下に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Center">
      <summary>画像は中央に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Scale">
      <summary>画像は画像領域に適合するように拡大縮小されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Stretch">
      <summary>画像は画像領域に適合するように引き伸ばされます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Tile">
      <summary>画像は画像領域全体に並べて表示されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRotation">
      <summary>チャート要素の回転を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate0">
      <summary>回転なし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate90">
      <summary>オブジェクトは 90 度回転します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate180">
      <summary>オブジェクトは 180 度回転して逆さになります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate270">
      <summary>オブジェクトは 270 度回転します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlignVert">
      <summary>チャート要素の垂直方向の配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignVert.Top">
      <summary>テキストを上揃えにします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignVert.Center">
      <summary>テキストを中央揃えにします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignVert.Bottom">
      <summary>テキストを下揃えにします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartCompass">
      <summary>チャート要素の方位を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.North">
      <summary>オブジェクトは北または上に配置されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.South">
      <summary>オブジェクトは南または下に配置されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.East">
      <summary>オブジェクトは東または右側に配置されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.West">
      <summary>オブジェクトは西または左側に配置されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFitType">
      <summary>データ系列の曲線フィッティングタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFitType.Line">
      <summary>データポイントを直線で結びます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFitType.Spline">
      <summary>各データポイントをスムーズに線で結びます。角ができたり、カーブの強さが急激に変化することはありません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFitType.Beziers">
      <summary>線は必ずしもすべてのデータポイントを通過しません。各ポイントは磁石のように 曲線を特定の方向に引き寄せ、曲線の曲が具合に影響します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSeriesDisplay">
      <summary>データ系列の表示を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.Show">
      <summary>系列を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.Hide">
      <summary>データセットに系列を含めますが、描画しません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.Exclude">
      <summary>系列をデータセットから除外します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.ExcludeHoles">
      <summary>系列を表示しますが、データ欠損を無視します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPlotFilterMethod">
      <summary>データ系列のプロットフィルタの方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPlotFilterMethod.None">
      <summary>データ値はフィルタされません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPlotFilterMethod.Default">
      <summary>デフォルトのデータフィルタアルゴリズムは、大きなデータ配列のプロットを最適化します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPlotFilterMethod.Alternative">
      <summary>代替のデータフィルタアルゴリズムは、一方向（x または y）に並べられた大きなデータ配列の プロットを最適化します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAttachMethod">
      <summary>ラベルの添付方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.Coordinate">
      <summary>ラベルはチャート内の任意の場所に添付されます。チャートの左上隅から ChartLabel までのツイップ数を指定できます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.DataCoordinate">
      <summary>ラベルは PlotArea 内の任意の場所に添付されます。データ座標を指定できます。円グラフでは、この方法を使用できません。ChartLabel の一部が ChartArea の外に出ると、その部分はクリップされます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.DataIndex">
      <summary>ラベルはチャートの特定のデータポイントに添付されます。系列インデックス、ポイントインデックス、およびチャートグループを指定できます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.DataIndexY">
      <summary>ラベルは特定のデータポイントの上または下に添付されます。系列インデックス、ポイントインデックス、ChartGroup、および Y 座標を指定できます。これは、棒グラフと積層棒グラフでたいへん便利です。</summary>
      <remarks>2D チャート専用です。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabelCompass">
      <summary>指定された位置を基準にしてラベルの位置を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.North">
      <summary>ラベルをデータポイントの北または上に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.NorthEast">
      <summary>ラベルをデータポイントの北東または右上に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.East">
      <summary>ラベルをデータポイントの東または右に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.SouthEast">
      <summary>ラベルをデータポイントの南東または右下に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.South">
      <summary>ラベルをデータポイントの南または下に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.SouthWest">
      <summary>ラベルをデータポイントの南西または左下に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.West">
      <summary>ラベルをデータポイントの西または左に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.NorthWest">
      <summary>ラベルをデータポイントの北西または左上に配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.Radial">
      <summary>円グラフでは、ラベルをグラフの中心から離して配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.Orthogonal">
      <summary>ラベルをプロット線から垂直方向に離して配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.Auto">
      <summary>ラベルを自動的に配置します。自動配置のパラメータは、ChartLabels クラスの AutoArrangment プロパティで指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.RadialText">
      <summary>ラベルをプロット線から垂直方向に離して配置し、テキストをその線に沿って配置します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementMethod">
      <summary>ラベルの自動配置方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementMethod.Decimation">
      <summary>この方法は、重ならないように配置できないラベルを削除します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementMethod.FindingOptimum">
      <summary>この方法は、できる限りラベルが重ならないように配置します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions">
      <summary>ラベルの自動配置の位置オプションを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Default">
      <summary>任意のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Top">
      <summary>上のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Left">
      <summary>左のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Bottom">
      <summary>下のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Right">
      <summary>右のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.TopRight">
      <summary>右上のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.BottomRight">
      <summary>右下のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.BottomLeft">
      <summary>左下のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.TopLeft">
      <summary>左上のラベル位置が許可されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.UseDataPoints">
      <summary>ラベルはデータポイントを隠しません。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLinePattern">
      <summary>線のパターンを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.Solid">
      <summary>実線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.Dash">
      <summary>破線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.Dot">
      <summary>点線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.DashDot">
      <summary>点とダッシュが交互する線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.DashDotDot">
      <summary>1 つのダッシュと 2 つの点の連続から成る線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.None">
      <summary>線は描画されません。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLineJoin">
      <summary>連続する直線または曲線セグメントを接続して 1 つの図（サブパス）にする方法を示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.Miter">
      <summary>マイター接続を指定します。接続部は、マイター長さがマイターリミットを超えたかどうかに応じて、鋭角になるか、クリップされた角になります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.Bevel">
      <summary>ベベル接続を指定します。接続部は、斜めに切れた角になります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.Round">
      <summary>円形接続を指定します。線の接続部は、滑らかな円弧になります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.MiterClipped">
      <summary>マイター接続を指定します。接続部は、マイター長さがマイターリミットを超えたかどうかに応じて、鋭角になるか、ベベル角になります。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFillType">
      <summary>データの形状を塗りつぶす方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.SolidColor">
      <summary>塗りつぶしに Color1 の単色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.Gradient">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartGradientStyle" />に列挙されるパターンの 1 つと、Color1 および Color2 を使用して、2 色のグラデーションを塗りつぶしに使用します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.Hatch">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartHatchStyle" />に列挙されるパターンの 1 つと、Color1 および Color2 を使用して、2 色のハッチパターンを塗りつぶしに使用します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.Texture">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartFillStyle" />で指定された画像で塗りつぶすことでテクスチャを作成します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSymbolShape">
      <summary>データポイントシンボルの形状を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.None">
      <summary>データポイントを表すシンボルがありません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Box">
      <summary>塗りつぶした四角形でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Dot">
      <summary>塗りつぶした円でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Tri">
      <summary>塗りつぶした三角形でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Diamond">
      <summary>塗りつぶしたひし形でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.InvertedTri">
      <summary>塗りつぶした逆三角形でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Star">
      <summary>塗りつぶした星形でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.VerticalLine">
      <summary>短い垂直線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.HorizontalLine">
      <summary>短い水平線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Cross">
      <summary>十字線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.DiagCross">
      <summary>斜め十字線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Circle">
      <summary>円の輪郭線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Square">
      <summary>四角形の輪郭線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.OpenTri">
      <summary>三角形の輪郭線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.OpenDiamond">
      <summary>ひし形の輪郭線でデータポイントを表します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.OpenInvertedTri">
      <summary>逆三角形の輪郭線でデータポイントを表します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHistogramDisplayType">
      <summary>度数データの表示に使用する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramDisplayType.Histogram">
      <summary>区間と回数をヒストグラムとして表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramDisplayType.FrequencyGraph">
      <summary>区間と回数を度数グラフとして表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramDisplayType.SteppedFrequencyGraph">
      <summary>区間と回数を階段型度数グラフとして表示します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod">
      <summary>ヒストグラムの区間の指定に使用する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod.Automatic">
      <summary>区間の境界と幅をデータ統計値に基づいて計算します。区間数の入力はオプションです。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod.SemiAutomatic">
      <summary>開始区間、区間の幅、および区間数によって区間の境界を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod.XDataBoundaries">
      <summary>X データの入力を使用して区間の境界を指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLegendOrientation">
      <summary>チャートの凡例の方向を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.Auto">
      <summary>Compass の値が北または南に設定されている凡例の場合は水平方向、Compass の値が東または西に設定されている凡例の場合は垂直方向。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.Vertical">
      <summary>凡例の幅に入る範囲内で、凡例エントリを横に並べて（水平方向に）追加します。十分な幅がない場合は、凡例の行が追加されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.Horizontal">
      <summary>凡例の高さに入る範囲内で、凡例エントリを垂直方向に積み重ねます。十分な高さがない場合は、凡例の列が追加されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.HorizontalVariableItemWidth">
      <summary>Horizontal と同じですが、各エントリはその内容に応じて異なる幅を持つことができます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.VerticalVariableItemHeight">
      <summary>Vertical と同じですが、各エントリはその内容に応じて異なる高さを持つことができます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabelView3D">
      <summary>3D チャートのチャートラベルの 3D 表示平面を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelView3D.None">
      <summary>画面の 2D 平面にラベルを描画します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelView3D.XZ">
      <summary>XZ 面と平行な 3D 平面にラベルを描画します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelView3D.YZ">
      <summary>YZ 面と平行な 3D 平面にラベルを描画します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod">
      <summary>2D チャートの軸注釈の方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod.Values">
      <summary>軸に値の注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod.ValueLabels">
      <summary>軸に Chart2DValueLabelsCollection で指定されている値ラベルを使用して注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod.Mixed">
      <summary>値と値ラベルの両方が表示されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisId">
      <summary>軸の ID（タイプ）を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.X">
      <summary>2D または 3D チャートの X 軸を指します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.Y">
      <summary>2D または 3D チャートの Y 軸を指します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.Y2">
      <summary>2D チャートの Y2 軸を指します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.Z">
      <summary>3D チャートの Z 軸を指します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DTickMarks">
      <summary>2D グラフ軸の目盛りマークのタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.None">
      <summary>軸に目盛りマークを表示しません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.Inside">
      <summary>軸に沿ってチャート領域の内側に目盛りマークを表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.Outside">
      <summary>軸に沿ってチャート領域の外側に目盛りマークを表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.Cross">
      <summary>軸に交差する目盛りマークを表示します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DTickLabels">
      <summary>2D チャートの軸に対する注釈ラベルの相対位置を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.None">
      <summary>軸に注釈は付きません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.High">
      <summary>直交軸の最大値の近く、プロットエリアの内側に注釈を描画します。X 軸の注釈では、Group0 のデータは利用できないが、Group1 のデータは 利用できる場合、Y2 軸によって位置が決まります。そうでない場合は、Y 軸が使用されます。交差する軸と重なる注釈は除外されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.Low">
      <summary>直交軸の最小値の近く、プロットエリアの内側に注釈を描画します。X 軸の注釈では、Group0 のデータは利用できないが、Group1 のデータは 利用できる場合、Y2 軸によって位置が決まります。そうでない場合は、Y 軸が使用されます。交差する軸と重なる注釈は除外されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.NextToAxis">
      <summary>軸の横に注釈を描画します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFormat">
      <summary>2D チャートの軸の注釈の書式を指定します。</summary>
      <remarks>詳細については、.Net の日付/時刻書式文字列および標準の数値書式文字列を参照してください。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericManual">
      <summary>ChartAxis の AnnoFormatString プロパティと組み合わせて使用して、.Net カスタム数値書式を指定します。.Net ドキュメントのカスタム数値書式文字列を参照してください。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericCurrency">
      <summary>通貨の書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericGeneral">
      <summary>一般的な数値書式。固定小数点または指数表記を使用して、最も簡単な小数形式に書式設定されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericExponential">
      <summary>「-d.ddd…E+ddd」または「-d.ddd…e+ddd」形式の指数書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericPercentage">
      <summary>パーセント値の書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericRoundtrip">
      <summary>変換された後の数値が同じ数値として返されることを保証する書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericHexadecimal">
      <summary>16 進数書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateManual">
      <summary>ChartAxis の AnnoFormatString プロパティと組み合わせて使用して、.Net カスタム日付/時刻書式を指定します。.Net ドキュメントのカスタム日付/時刻書式文字列を参照してください。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateShort">
      <summary>短い日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateLong">
      <summary>長い日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateFullShortTime">
      <summary>長い日付と短い時刻から成る書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateFull">
      <summary>完全な日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateGeneralShortTime">
      <summary>短い時刻書式を使用する一般的な日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateGeneral">
      <summary>一般的な日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateMonth">
      <summary>月の書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateRFC1123">
      <summary>IETF RFC 1123 仕様に基づく日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateSortable">
      <summary>ソート可能な日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateShortTime">
      <summary>短い時刻書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateLongTime">
      <summary>長い時刻書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateUniversalSortable">
      <summary>一般的にソート可能な日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateUniversal">
      <summary>一般的な日付書式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateYear">
      <summary>年の書式。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisAlignment">
      <summary>レイアウト四角形に対するテキスト文字列の相対的な配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisAlignment.Near">
      <summary>テキストをレイアウトの近くに配置することを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisAlignment.Center">
      <summary>テキストをレイアウト四角形の中心に配置することを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisAlignment.Far">
      <summary>テキストをレイアウト四角形の原点位置から遠い位置に配置することを指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartValueLabelAppearance">
      <summary>2D チャートの値ラベルの外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartValueLabelAppearance.Label">
      <summary>テキストラベル専用。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartValueLabelAppearance.TriangleMarker">
      <summary>三角形マーカー付きのラベル。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartValueLabelAppearance.ArrowMarker">
      <summary>矢印マーカー付きのラベル。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartShading">
      <summary>3D 効果が適用されたチャートのレンダリング時に、2D チャートの 3D 領域の色に使用される陰影のタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartShading.None">
      <summary>特別な 3D カラーは適用されません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartShading.ColorLight">
      <summary>3D カラーは、前景色より明るくなります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartShading.ColorDark">
      <summary>3D カラーは、前景色より暗くなります。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBarAppearance">
      <summary>横棒グラフの外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Default">
      <summary>デフォルト（四角形）の外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Cylinder">
      <summary>円柱の外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Cone">
      <summary>円錐の外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Pyramid">
      <summary>四角錐の外観を指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBubbleMethod">
      <summary>バブルチャート内のバブルサイズを計算する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBubbleMethod.Diameter">
      <summary>直径に応じてシンボルのサイズを決定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBubbleMethod.Area">
      <summary>面積に応じてシンボルのサイズを決定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisLabelsSource">
      <summary>ガントチャートの X 軸のソースを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisLabelsSource.SeriesLabels">
      <summary>系列ラベルを軸ラベルとして使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisLabelsSource.XValues">
      <summary>X データ値を軸注釈に使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisLabelsSource.None">
      <summary>軸ラベルなし。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod">
      <summary>3D チャートの軸注釈の方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.Auto">
      <summary>チャートによって自動的に軸に注釈が付けられます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.DataLabels">
      <summary>チャートグループ内のデータラベルを使用して注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.ValueLabels">
      <summary>ValueLabels プロパティを使用して注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.Values">
      <summary>チャートの値を使用して注釈を付けます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DAnnoPosition">
      <summary>プロットキューブのどの軸辺に注釈を付けるかを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.Both">
      <summary>プロットキューブの両側の軸に注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.Near">
      <summary>プロットキューブの近い側の軸に注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.Far">
      <summary>プロットキューブの遠い側の軸に注釈を付けます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.None">
      <summary>軸に注釈を付けません。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DType">
      <summary>3D チャートのタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DType.Scatter">
      <summary>散布図チャートタイプ。</summary>
      <remarks>GridData と IrGridData の場合は、Z 値を指定するデータ値が 1 つ、カテゴリグループから X 値、および系列グループから Y 値が必要です。PointData の場合は、X、Y、および Z 値を指定する 3 つのデータ値が必要です。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DType.Bar">
      <summary>棒グラフタイプ。</summary>
      <remarks>Z 値を指定するデータ値が 1 つ、カテゴリグループから X 値、および系列グループから Y 値が必要です。</remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DType.Surface">
      <summary>面グラフタイプ。</summary>
      <remarks>Z 値を指定するデータ値が 1 つ、カテゴリグループから X 値、および系列グループから Y 値が必要です。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DTextRotation">
      <summary>3D キューブ内のテキストの回転を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DTextRotation.RotNo">
      <summary>回転なし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DTextRotation.Rot2D">
      <summary>画面の平面上で回転します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DTextRotation.Rot3D">
      <summary>3D 空間内で回転します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DView3D">
      <summary>3D キューブの定義済みビューを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.Default">
      <summary>デフォルトのビュー。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XY_2D_Pos">
      <summary>Z 軸の正の側から XY 面を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XY_2D_Neg">
      <summary>Z 軸の負の側から XY 面を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XZ_2D_Pos">
      <summary>Y 軸の正の側から XZ 面を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XZ_2D_Neg">
      <summary>Y 軸の負の側から XZ 面を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.YZ_2D_Pos">
      <summary>X 軸の正の側から YZ 面を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.YZ_2D_Neg">
      <summary>X 軸の負の側から YZ 面を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.Custom">
      <summary>カスタムビュー。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBarFormat">
      <summary>3D 横棒グラフの形式を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DBarFormat.Fixed">
      <summary>固定形式（棒の幅は固定され、X または Y 値を中心に配置されます）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DBarFormat.Histogram">
      <summary>ヒストグラム形式（各棒が隣の棒に接するようにスペースを埋めます）。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DContourMethod">
      <summary>3D チャートの等高線の計算方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DContourMethod.Default">
      <summary>デフォルトの等高線計算方法。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DContourMethod.Classic">
      <summary>新しく機能強化される前のデフォルトの等高線計算方法。この ContourMethod は、以前の結果と互換性を保つために提供されています。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DContourMethod.MarchingSquares">
      <summary>マーチングスクエア法による代替の等高線計算方法。このメソッドでは、より多くの計算が必要になりますが、通常は 等高線の対称性が向上します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DZoneMethod">
      <summary>3D チャートのゾーンの計算方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DZoneMethod.Contours">
      <summary>等高線ゾーン。対応する等高線レベルに応じて、1 つのセルが複数の色を持つことができます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DZoneMethod.Cells">
      <summary>セルゾーン。1 つのセルは 1 つの色しか持てません。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartColorSet">
      <summary>3D チャートの等高線スタイルの事前定義された色を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.Custom">
      <summary>カスタム色セット</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.Rainbow">
      <summary>虹色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.RevRainbow">
      <summary>逆順の虹色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BlackWhite">
      <summary>グレースケールカラー</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.WhiteBlack">
      <summary>逆順のグレースケールカラー</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.GreenBlue">
      <summary>緑から青までの色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.RedWhite">
      <summary>赤から白までの色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BluePink">
      <summary>青からピンクまでの色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BlueWhiteRed">
      <summary>青 -&gt; 白 -&gt; 赤までの色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BlackRedYellow">
      <summary>黒 -&gt; 赤 -&gt; 黄までの色</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.GreenPurpleYellow">
      <summary>緑 -&gt; 紫 -&gt; 黄までの色</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataLayout">
      <summary>3D チャートデータのデータレイアウトを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DDataLayout.PointData">
      <summary>ポイントデータ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DDataLayout.GridData">
      <summary>標準グリッドデータ。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DDataLayout.IrGridData">
      <summary>非標準グリッドデータ。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLightGradient">
      <summary>視覚効果スタイルのライトグラデーションのタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightGradient.Simple">
      <summary>ライトグラデーション効果は、形状に基づいてオブジェクト内で直線状になります。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightGradient.Triangle">
      <summary>ライトグラデーション効果は、色からライト、色へと進みます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightGradient.SigmeBell">
      <summary>ライトグラデーション効果は、ライトの強度分布に異なる重み付けを使用して、色からライト、色へと進みます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLightShape">
      <summary>視覚効果スタイルのライトの形状を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightShape.Rectangle">
      <summary>ライトグラデーション効果がオブジェクトの一方の端からもう一方の端に向かって進みます。LightStyle の Scale プロパティを使用して、オブジェクト内のグラデーション周期の長さを調整できます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightShape.Ellipse">
      <summary>ライトグラデーション効果がオブジェクトの中心から外縁に向かって進みます。LightStyle の Shift プロパティと Size プロパティを使用して、楕円の中心とサイズを調整できます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightShape.Edge">
      <summary>ライト効果がオブジェクトの端近くに偏って適用されます。この形状では、LightGradient は常に楕円になります。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlarmZoneShape">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartAlarmZone" />の形状を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlarmZoneShape.Rectangle">
      <summary>ChartAlarmZone の範囲を示すデータ座標によって指定される四角形。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlarmZoneShape.Ellipse">
      <summary>ChartAlarmZone の範囲を示すデータ座標によって指定される四角形で囲まれる楕円。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DLegendSeparator">
      <summary>階段型凡例の範囲値間の区切り文字を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendSeparator.Ellipsis">
      <summary>階段型凡例の範囲値の間に省略符（..）を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendSeparator.Dash">
      <summary>階段型凡例の範囲値の間にダッシュ記号（-）を指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DLegendType">
      <summary>ゾーン付き 3D チャートの凡例タイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendType.Stepped">
      <summary>ゾーンごとに範囲が出力されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendType.Continuous">
      <summary>2 つの隣り合うゾーン間の区切りの位置にレベルが出力されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartColorMode">
      <summary>各カテゴリおよび系列のカラーモードを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.Default">
      <summary>2D チャートの場合は、系列ごとに異なる色を設定します。3D チャートの場合は、各ポイントに同じ色を設定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.ColorBySeries">
      <summary>系列ごとに異なる色を設定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.ColorByCategory">
      <summary>カテゴリごとに異なる色を設定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.Auto">
      <summary>各カテゴリおよび系列の色を自動的に設定します。</summary>
      <remarks>系列が 1 つしかない場合は、カテゴリごとに異なる色を設定します。系列が複数ある場合は、系列ごとに異なる色を設定します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartImageType">
      <summary>生成する画像のタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Emf">
      <summary>Enhanced Windows メタファイル（EMF）画像形式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Png">
      <summary>W3C Portable Network Graphics（PNG）画像形式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Gif">
      <summary>Graphics Interchange Format（GIF）画像形式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Jpeg">
      <summary>Joint Photographic Experts Group（JPEG）画像形式。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Bmp">
      <summary>Bitmap（BMP）画像形式。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabels">
      <summary>すべてのチャートラベルを含むオブジェクトを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabels.DefaultLabelStyle">
      <summary>チャートラベルのデフォルトのスタイルを取得します。</summary>
      <remarks>すべてのラベルは、このスタイルを継承します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabels.LabelsCollection">
      <summary>すべてのチャートラベルのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabels.AutoArrangement">
      <summary>2D チャートのラベルの整列を制御する ChartAutoLabelArrangement オブジェクトを取得します。</summary>
      <remarks>自動整列は、LabelCompass が Auto に設定されているラベルにのみ適用されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabelsCollection">
      <summary>特定のチャートに定義されているチャートラベルをすべて含みます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.Add(C1.Win.FlexReport.Chart.ChartLabel)">
      <summary>既存のチャートラベルをコレクションに追加します。</summary>
      <param name="label">追加するチャートラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.AddNewLabel">
      <summary>新しいチャートラベルをコレクションに追加します。</summary>
      <returns>新しく追加されたチャートラベル。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるチャートラベルを削除します。</summary>
      <param name="index">削除するチャートラベルのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.Remove(C1.Win.FlexReport.Chart.ChartLabel)">
      <summary>既存のチャートラベルをコレクションから削除します。</summary>
      <param name="label">削除するチャートラベル。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabel">
      <summary>チャートに添付できる個別のテキスト注釈を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabel.#ctor">
      <summary>ChartLabel オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Connected">
      <summary>関連付けられたデータポイントに接続線を描画するかどうかを取得または設定します。</summary>
      <remarks>描画する場合、この接続線は 1 ピクセル幅で、前景色で描画されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Name">
      <summary>ラベル名を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Offset">
      <summary>関連付けられたデータポイントからのオフセット距離をツイップ単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Text">
      <summary>ラベルのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.AttachMethod">
      <summary>ラベルの添付方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.AttachMethodData">
      <summary>ラベルの添付データを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Compass">
      <summary>指定された位置を基準にしたラベルの位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.RotationOverride">
      <summary>ラベルの回転角度を度単位で取得または設定し、スタイルで設定されている Rotation の値をオーバーライドします。</summary>
      <remarks>2D チャート専用。Radial および RadialText 以外の Compass 値が設定されているラベルにのみ適用されます。0 以外の値のみ適用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.View3D">
      <summary>3D チャートのラベルの 3D 表示平面を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Style">
      <summary>ラベルの ChartStyle オブジェクトを取得します。</summary>
      <remarks>ChartLabels.DefaultLabelStyle プロパティを継承します。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAttachMethodData">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartLabel" />をチャートに配置または添付する方法を表します。
      </summary>
      <remarks>
        ChartAttachMethodData オブジェクトの各プロパティは、
        <see cref="P:C1.Win.FlexReport.Chart.ChartLabel.AttachMethod" />値のコンテキストでのみ意味を持ちます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.GroupIndex">
      <summary>ラベルの AttachMethod プロパティに DataIndex 添付方式が指定されている場合に、ラベルを添付するデータポイントのグループインデックスを取得または設定します。</summary>
      <remarks>2D チャート専用。3D チャートでは、チャートグループは 1 つしかありません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.SeriesIndex">
      <summary>ラベルの AttachMethod プロパティに DataIndex 添付方式が指定されている場合に、ラベルを添付するデータポイントの系列インデックスを取得または設定します。</summary>
      <remarks>3D チャートで、データレイアウトとしてポイントレイアウトが指定されている場合は、データポイントの系列インデックスが取得または設定されます。データレイアウトとして標準または非標準グリッドが指定されている場合は、データポイントの列が取得または設定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.PointIndex">
      <summary>ラベルの AttachMethod プロパティに DataIndex 添付方式が指定されている場合に、ラベルを添付するデータポイントのポイントインデックスを取得または設定します。</summary>
      <remarks>3D チャートで、データレイアウトとしてポイントレイアウトが指定されている場合は、データポイントのポイントインデックスが取得または設定されます。データレイアウトとして標準または非標準グリッドが指定されている場合は、データポイントの行が取得または設定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.X">
      <summary>ラベルの AttachMethod プロパティに Coordinate または DataCoordinate 添付方式が指定されている場合に、X 座標（クライアントまたはデータ）を取得または設定します。</summary>
      <remarks>クライアント座標では、ツイップ単位が使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.Y">
      <summary>ラベルの AttachMethod プロパティに Coordinate、DataCoordinate、または DataIndexY 添付方式が指定されている場合に、Y 座標（クライアントまたはデータ）を取得または設定します。</summary>
      <remarks>クライアント座標では、ツイップ単位が使用されます。DataIndexY 添付方式（2D チャートのみ）の場合は、Y データ座標が取得または設定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.Z">
      <summary>ラベルの AttachMethod プロパティに DataCoordinate 添付方式が指定されている場合に、Z データ座標を取得または設定します。</summary>
      <remarks>3D チャート専用。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement">
      <summary>ラベルの自動配置の設定を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.Method">
      <summary>ラベルの配置オプションを取得または設定します。</summary>
      <remarks>このオプションは、いくつかの ChartAutoLabelArrangementOptionsEnum 要素のビット単位 OR です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.Options">
      <summary>ラベルの配置方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.MaxIterations">
      <summary>最大反復回数を取得または設定します。</summary>
      <remarks>ChartAutoLabelArrangementMethodEnum.FindingOptimum 専用。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.Offset">
      <summary>関連付けられたポイントからの最大オフセット距離（ツイップ単位）を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartObject">
      <summary>チャートオブジェクトの基本クラス。</summary>
    </member>
    <member name="E:C1.Win.FlexReport.Chart.ChartObject.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObject.OnPropertyChanged(System.String)">
      <summary>1 つのプロパティが変更されたことを通知します。</summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPropertyBagObject">
      <summary>プロパティバッグ内のプロパティ値を管理するチャートオブジェクトの基本クラス。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.SetProperty(System.String,System.Object)">
      <summary>プロパティ値を変更します。デフォルト値と等しい場合は、強制的に設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.SetProperty(System.String,System.Object,System.Object)">
      <summary>1 つのプロパティ値を変更します。デフォルト値と等しい場合は、デフォルト状態にリセットします。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.GetProperty(System.String,System.Object)">
      <summary>1 つのプロパティ値を取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.RemoveProperty(System.String)">
      <summary>1 つのプロパティをデフォルト状態にリセットします。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.HasProperty(System.String)">
      <summary>あるプロパティが変更されているかどうかを示します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartObjectCollection`1">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartObject" />オブジェクトのコレクションを表します。
      </summary>
      <typeparam name="T">コレクション内の要素の型。</typeparam>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObjectCollection`1.AssignFrom(C1.Win.FlexReport.Chart.ChartObjectCollection{`0})">
      <summary>項目を別の ChartObjectCollection から現在のコレクションに割り当てます（コピーします）。</summary>
      <param name="source">項目のコピー元のコレクション。</param>
    </member>
    <member name="E:C1.Win.FlexReport.Chart.ChartObjectCollection`1.CollectionChanged">
      <summary>コレクションまたはその項目が変化すると発生します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObjectCollection`1.Contains(`0)">
      <summary>コレクションに特定の項目が含まれるかどうかを判定します。</summary>
      <param name="item">チェックする項目。</param>
      <returns>コレクションに指定された項目が含まれる場合は true。そうでない場合は false。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObjectCollection`1.IndexOf(`0)">
      <summary>要素のインデックスを取得します。</summary>
      <param name="item">要素。</param>
      <returns>要素の 0 から始まるインデックス。または、要素がコレクション内に存在しない場合は、-1。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartObjectCollection`1.Item(System.Int32)">
      <summary>指定されたインデックスにある要素を取得します。</summary>
      <param name="index">取得する要素の 0 から始まるインデックス。</param>
      <returns>指定されたインデックスにある要素。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartObjectCollection`1.Count">
      <summary>コレクションに含まれる要素数を取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFillStyle">
      <summary>チャート自体、チャート領域、凡例、ヘッダー、フッター、ラベルなど、チャートのさまざまな要素に使用できるさまざまな塗りつぶしスタイルを 記述するクラスを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.FillType">
      <summary>塗りつぶしタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Color1">
      <summary>塗りつぶし色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Color2">
      <summary>2 番目の塗りつぶし色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.OutlineColor">
      <summary>塗りつぶされた領域の輪郭線の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.GradientStyle">
      <summary>塗りつぶしのグラデーションスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.HatchStyle">
      <summary>塗りつぶしのハッチスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Alpha">
      <summary>塗りつぶしのアルファ値（透明度）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.OutlineThickness">
      <summary>塗りつぶされた領域の輪郭線の太さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Image">
      <summary>塗りつぶしイメージを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLineStyle">
      <summary>グラフ線のスタイルを定義します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.Color">
      <summary>線の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.Pattern">
      <summary>線のパターンを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.Thickness">
      <summary>線の太さを取得または設定します（ツイップ単位）。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.LineJoin">
      <summary>描画される線分の接続スタイルを取得または設定します。</summary>
      <remarks>多くの場合はデフォルト値で問題ありません。線が太い場合は、MiterLimit の値を小さくするか、LineJoin.Round の方がよいことがあります。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.MiterLimit">
      <summary>描画される線の接続部のマイターリミットを取得または設定します。</summary>
      <remarks>多くの場合はデフォルト値で問題ありません。線が太い場合は、値を小さくした方がよいことがあります。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSymbolStyle">
      <summary>グラフシンボルのスタイルを定義します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.Color">
      <summary>データポイントのシンボルの色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.OutlineColor">
      <summary>データポイントのシンボルの輪郭の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.OutlineWidth">
      <summary>データポイントのシンボルの輪郭線の幅をツイップ単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.Shape">
      <summary>データポイントのシンボルの形状を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.Size">
      <summary>データポイントのシンボルのサイズをツイップ単位で取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartStyle">
      <summary>チャート自体、チャート領域、凡例、ヘッダー、フッター、ラベルなど、チャートのさまざまな要素の外観を記述します。通常、オブジェクトのスタイルやそのプロパティは、オブジェクトの親スタイルまたは デフォルトのスタイルから継承されます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.#ctor">
      <summary>ChartStyle オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Autowrap">
      <summary>テキストが自動的に折り返されるかどうかを取得または設定します。</summary>
      <remarks>ヘッダー、フッター、軸タイトル、ラベル、凡例（タイトルのみ。系列名は含まない）など、チャート内のテキストを含むオブジェクトの大部分は、テキストを自動的に折り返して内部に表示できます。ただし、これらのオブジェクトはすべて自動的なサイズ変更も可能です。自動的なサイズ変更は、常に 単一行のテキストに基づいて行われます（可能な場合）。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeAutowrap">
      <summary>Autowrap がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetAutowrap">
      <summary>Autowrap をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.BackColor">
      <summary>背景色を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeBackColor">
      <summary>BackColor がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetBackColor">
      <summary>BackColor をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.BackColor2">
      <summary>グラデーション背景またはハッチ背景で使用する 2 番目の背景色を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeBackColor2">
      <summary>BackColor2 がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetBackColor2">
      <summary>BackColor2 をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Border">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartBorder" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeBorder">
      <summary>Border がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetBorder">
      <summary>Border をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Font">
      <summary>
        <see cref="T:C1.Win.FlexReport.FontHolder" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeFont">
      <summary>Font がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetFont">
      <summary>Font をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.ForeColor">
      <summary>前景色を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeForeColor">
      <summary>ForeColor がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetForeColor">
      <summary>ForeColor をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.GradientStyle">
      <summary>グラデーション背景の塗りつぶしのスタイルを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeGradientStyle">
      <summary>GradientStyle がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetGradientStyle">
      <summary>GradientStyle をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.HatchStyle">
      <summary>ハッチ背景の塗りつぶしのスタイルを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeHatchStyle">
      <summary>HatchStyle がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetHatchStyle">
      <summary>HatchStyle をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.HorizontalAlignment">
      <summary>テキストの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeHorizontalAlignment">
      <summary>HorizontalAlignment がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetHorizontalAlignment">
      <summary>HorizontalAlignment をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.ImageAlignment">
      <summary>画像の配置を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeImageAlignment">
      <summary>ImageAlignment がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetImageAlignment">
      <summary>ImageAlignment をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Opaque">
      <summary>背景の不透明度を取得または設定します。</summary>
      <remarks>オブジェクトの Opaque プロパティが true の場合は、前景が描画される前に、オブジェクトの背景に 背景色でブラシがかけられます。オブジェクトの Opaque プロパティが false の場合は、背景にブラシはかけられず、オブジェクトの前景だけが描画されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeOpaque">
      <summary>Opaque がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetOpaque">
      <summary>Opaque をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Rotation">
      <summary>テキストの回転方向を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeRotation">
      <summary>Rotation がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetRotation">
      <summary>Rotation をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.VerticalAlignment">
      <summary>テキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeVerticalAlignment">
      <summary>VerticalAlignment がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetVerticalAlignment">
      <summary>VerticalAlignment をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.VerticalText">
      <summary>テキストを縦書き表示にするかどうかを取得または設定します。</summary>
      <remarks>VerticalText を使用すると、2 バイト文字を左から右ではなく 上から下にレンダリングできます。1 バイト文字の場合、VerticalText は、時計回り方向に 90 度回転したテキストとして 表示されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeVerticalText">
      <summary>VerticalText がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetVerticalText">
      <summary>VerticalText をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBorder">
      <summary>チャート自体、チャート領域、凡例、ヘッダー、フッター、ラベルなど、チャートのさまざまな要素の境界線の外観を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.#ctor">
      <summary>ChartBorder クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.BorderStyle">
      <summary>境界線のスタイルを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeBorderStyle">
      <summary>BorderStyle がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetBorderStyle">
      <summary>BorderStyle をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.Color">
      <summary>境界線の色を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeColor">
      <summary>Color がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetColor">
      <summary>Color をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.Rounding">
      <summary>
        角の丸みを制御する
        <see cref="T:C1.Win.FlexReport.Chart.ChartRounding" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeRounding">
      <summary>Rounding がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetRounding">
      <summary>Rounding をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.Thickness">
      <summary>境界線の太さを取得または設定します（ツイップ単位）。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeThickness">
      <summary>Thickness がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetThickness">
      <summary>Thickness をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRounding">
      <summary>境界線の角の丸みを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.All">
      <summary>四角形のすべての角の丸みの半径をツイップ単位で取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeAll">
      <summary>All がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetAll">
      <summary>All をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.LeftTop">
      <summary>四角形の左上の角の丸みの半径をツイップ単位で取得または設定します。</summary>
      <remarks>
        このプロパティを設定すると、境界線の LeftTop 領域の
        <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />プロパティがオーバーライドされます。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeLeftTop">
      <summary>LeftTop がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetLeftTop">
      <summary>LeftTop をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.LeftBottom">
      <summary>四角形の左下の角の丸みの半径をツイップ単位で取得または設定します。</summary>
      <remarks>
        このプロパティを設定すると、境界線の LeftBottom 領域の
        <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />プロパティがオーバーライドされます。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeLeftBottom">
      <summary>LeftBottom がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetLeftBottom">
      <summary>LeftBottom をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.RightTop">
      <summary>四角形の右上の角の丸みの半径をツイップ単位で取得または設定します。</summary>
      <remarks>
        このプロパティを設定すると、境界線の RightTop 領域の
        <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />プロパティがオーバーライドされます。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeRightTop">
      <summary>RightTop がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetRightTop">
      <summary>RightTop をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.RightBottom">
      <summary>四角形の右下の角の丸みの半径をツイップ単位で取得または設定します。</summary>
      <remarks>
        このプロパティを設定すると、境界線の RightBottom 領域の
        <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />プロパティがオーバーライドされます。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeRightBottom">
      <summary>RightBottom がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetRightBottom">
      <summary>RightBottom をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffects">
      <summary>スケーリング、ライト、影など、チャート要素で使用できるさまざまな視覚効果を定義します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffects.Item(System.Int32)">
      <summary>インデックスで指定された視覚効果スタイルを取得します。</summary>
      <param name="index">視覚効果スタイルのインデックス。</param>
      <returns>指定されたインデックスの位置にある ChartVisualEffectsStyle オブジェクト。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffects.Item(System.String)">
      <summary>名前で指定された視覚効果スタイルを取得します。</summary>
      <param name="name">視覚効果スタイルの名前。</param>
      <returns>指定された名前を持つ ChartVisualEffectsStyle オブジェクト。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffects.Styles">
      <summary>VisualEffectsStyle のコレクションを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStylesCollection">
      <summary>ChartVisualEffectsStyle オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStylesCollection.Item(System.String)">
      <summary>名前で指定された視覚効果スタイルを取得します。</summary>
      <param name="name">視覚効果スタイルの名前。</param>
      <returns>指定された名前を持つ ChartVisualEffectsStyle オブジェクト。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle">
      <summary>視覚効果スタイルのパラメータを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Name">
      <summary>スタイル名を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Angle">
      <summary>レンダリング時に使用する角度を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeAngle">
      <summary>Angle がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetAngle">
      <summary>Angle をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Enabled">
      <summary>効果が有効にされているかどうかを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeEnabled">
      <summary>Enabled がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetEnabled">
      <summary>Enabled をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.GroupElements">
      <summary>レンダリング時にグラフィック要素をグループ化できるかどうかを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeGroupElements">
      <summary>GroupElements がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetGroupElements">
      <summary>GroupElements をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Scalable">
      <summary>要素のサイズがフィールドのサイズによって決まるかどうかを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeScalable">
      <summary>Scalable がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetScalable">
      <summary>Scalable をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ScaleEffect">
      <summary>Scalable プロパティが true の場合に要素のスケーリングに使用されるスケール係数を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeScaleEffect">
      <summary>ScaleEffect がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetScaleEffect">
      <summary>ScaleEffect をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Colors">
      <summary>スタイルのカラーオプションを取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeColors">
      <summary>Colors がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetColors">
      <summary>Colors をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Edge">
      <summary>スタイルのエッジの設定を取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeEdge">
      <summary>Edge がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetEdge">
      <summary>Edge をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Light">
      <summary>スタイルのライトの設定を取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeLight">
      <summary>Light がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetLight">
      <summary>Light をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Shadow">
      <summary>スタイルの影の設定を取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeShadow">
      <summary>Shadow がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetShadow">
      <summary>Shadow をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRect">
      <summary>四角形の領域を持つチャート要素を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRect.Visible">
      <summary>要素の表示/非表示を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRect.Location">
      <summary>要素の位置を取得または設定します。</summary>
      <remarks>記述するチャート要素の左上隅の位置を指定します。負でない値は、チャート要素を配置する、チャートのクライアント座標内の明示的な位置を示します。負の値の場合は、自動配置が行われます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRect.Size">
      <summary>要素のサイズを取得または設定します。</summary>
      <remarks>記述するチャート要素のサイズを指定します。負でない値は、チャート要素を配置する、チャートのクライアント座標内の明示的な幅と高さを示します。負の値の場合は、自動配置が行われます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartTitle">
      <summary>チャートのタイトルを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Compass">
      <summary>タイトルの一般的な配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Style">
      <summary>タイトルのスタイルを取得します。</summary>
      <remarks>ChartField のデフォルトのスタイルから継承されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Text">
      <summary>タイトルのテキストを取得または設定します。</summary>
      <remarks>Rtf 文字列が空でない場合は、そちらが使用されます。そうでない場合は、Text 文字列が使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Rtf">
      <summary>RTF 文字列から成るタイトルを取得または設定します。</summary>
      <remarks>Rtf 文字列が空でない場合は、そちらが使用されます。そうでない場合は、Text 文字列が使用されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLegend">
      <summary>チャートの凡例を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Compass">
      <summary>凡例の一般的な配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Style">
      <summary>凡例のスタイルを取得します。</summary>
      <remarks>ChartField のデフォルトのスタイルから継承されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Text">
      <summary>凡例のテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Orientation">
      <summary>凡例エントリの方向を取得または設定します。</summary>
      <remarks>
        <para>凡例エントリは、垂直または水平のどちらの方向にも配置できます。</para>
        <para>Vertical 方向の場合、凡例の高さに入る範囲内で、凡例エントリが垂直方向に 積み上げられます。凡例の高さにすべてのエントリが収まらず、凡例自体のサイズ変更が許可されている場合は、次の列が凡例に追加され、そこにエントリが積み重ねられます。</para>
        <para>Horizontal 方向の場合は、凡例の幅に入る範囲内で、凡例エントリが横に並べて 作成されます。凡例の幅にすべてのエントリが収まらず、凡例自体のサイズ変更が許可されている場合は、次の行が凡例に追加され、そこにエントリが並べられます。</para>
        <para>Auto 方向の場合は、凡例の Compass プロパティに基づいて適切な方向が自動的に 選択されます。Compass の値が East または West の場合は、Vertical 方向が使用されます。Compass の値が North または South の場合は、Horizontal 方向が使用されます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend2DReversed">
      <summary>2D チャートの凡例内の ChartGroups2D の順序を取得または設定します。</summary>
      <remarks>
        <see cref="T:C1.Win.FlexReport.Chart.Chart2DGroup" />の LegendReversed プロパティを使用して、系列の順序を逆にできます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend3DSeparator">
      <summary>3D チャートの階段型凡例の範囲値間の区切りを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend3DType">
      <summary>3D チャートの凡例の種類を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend3DFormatString">
      <summary>3D チャートの凡例の数値書式文字列を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ChartField">
      <summary>チャートのフィールドを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ChartField.#ctor">
      <summary>ChartField オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DataSource">
      <summary>チャートフィールドのデータソース名を取得または設定します。</summary>
      <remarks>レポートの DataSources に含まれるデータソースの名前を指定します。空にすると、メインのデータソースが使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.FilterExpression">
      <summary>カスタムデータソースの外部フィルタ式を取得または設定します。</summary>
      <remarks>DataSource が空でない場合に使用できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ImageType">
      <summary>チャートで生成される画像のタイプを取得または設定します。</summary>
      <remarks>GDI+ の制限により、この変換では透過性はサポートされません。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DataColor">
      <summary>チャートの棒、線、シンボル、または円グラフセグメントの色を取得または設定します。</summary>
      <remarks>ColorGeneratoin が CustomByDataColor に設定されている場合に使用できます。チャートに複数の系列（または円グラフセグメント）が含まれる場合は、基本色を明るくすることによって自動的に色が追加生成されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Palette">
      <summary>系列（または円グラフセグメント）ごとに、使用する色のコレクションを取得または設定します。</summary>
      <remarks>
        ColorGeneration が CustomByPalette に設定されている場合に使用できます。このコレクションは、セミコロンで区切られた色名のリストを含む文字列として 指定されます。次に例を示します。
        <example>chartField.Palette = "Red;Green;Blue"</example>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.VisualizationType">
      <summary>チャートの視覚化タイプを指定する値を取得または設定します。</summary>
      <remarks>
        チャートフィールドには、2D および 3D チャートを定義するためのさまざまなプロパティセットがあります。
        <list type="bullet">
          <item>
            <description>2D チャート固有のプロパティ：ChartArea2D、ChartGroups2D、VisualEffects</description>
          </item>
          <item>
            <description>3D チャート固有のプロパティ：ChartArea3D、ChartGroups3D</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.UseGrayscale">
      <summary>チャートを色ではなくグレースケールでレンダリングするかどうかを示す値を取得または設定します。</summary>
      <remarks>グレースケールは、白黒デバイスへの出力をプレビューすることを目的としています。これは、内部のスタイルブラシやペンの色に影響しません。出力デバイスおよび画像へのチャートの レンダリングにのみ影響します。グレースケールを使用すると、暗黙的にダブルバッファリング出力が使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ColorGeneration">
      <summary>テーマベースの自動色生成を指定する値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.UseAntiAliasedGraphics">
      <summary>チャートグラフィックのレンダリング中にのみアンチエイリアスを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.UseAntiAliasedText">
      <summary>チャートテキストのレンダリング中にのみアンチエイリアスを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DefaultStyle">
      <summary>チャートスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.LegendStyle">
      <summary>凡例のスタイルを取得します。</summary>
      <remarks>このプロパティは、Legend.Style への便利なショートカットを提供します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.FooterStyle">
      <summary>フッターのスタイルを取得します。</summary>
      <remarks>このプロパティは、Footer.Style への便利なショートカットを提供します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.HeaderStyle">
      <summary>ヘッダーのスタイルを取得します。</summary>
      <remarks>プロパティは、Header.Style への便利なショートカットを提供します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DefaultLabelStyle">
      <summary>ChartLabels のデフォルトのスタイルを取得します。</summary>
      <remarks>プロパティは、ChartLabels.DefaultLabelStyle への便利なショートカットを提供します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Header">
      <summary>ヘッダーオブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Footer">
      <summary>フッターオブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Legend">
      <summary>凡例オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartLabels">
      <summary>ChartLabels オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartArea2D">
      <summary>2D チャートのチャート領域を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartGroups2D">
      <summary>2D チャートのチャートグループを取得します。</summary>
      <remarks>各チャートグループには、データ値および外観に関する情報が含まれます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.VisualEffects">
      <summary>ChartVisualEffects オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartArea3D">
      <summary>3D チャートのチャート領域を取得します。</summary>
      <remarks>チャート領域は、プロットキューブ、軸、チャート化データを含むチャートの領域です。チャート領域の Style は、親の ChartField から直接継承されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartGroups3D">
      <summary>3D チャートのチャートグループを取得します。</summary>
      <remarks>チャートグループには、データ値および関連する外観に関する情報が含まれます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.ChartField.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.ChartField" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="T:C1.Win.FlexReport.BorderStyleEnum">
      <summary>フィールドの境界線のスタイルを指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスの
        <see cref="P:C1.Win.FlexReport.Field.BorderStyle" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.None">
      <summary>境界線なし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Transparent">
      <summary>境界線なし（None と同じ）。下位互換性のために追加されています。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Solid">
      <summary>実線の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Dash">
      <summary>破線の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Dot">
      <summary>点線の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.DashDot">
      <summary>1 点鎖線の境界線。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.DashDotDot">
      <summary>2 点鎖線の境界線。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.CheckBoxEnum">
      <summary>ブール値をチェックボックスに変換する方法を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスの
        <see cref="P:C1.Win.FlexReport.Field.CheckBox" />プロパティの値を設定します。このプロパティは、ブール値をテキストではなくグラフィカルに表示する場合に 有効です。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.NoCheckBox">
      <summary>チェックボックスなし（テキストとして表示）。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.CheckBox">
      <summary>チェックボックス。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.CrossBox">
      <summary>クロスボックス。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.RadioButton">
      <summary>ラジオボタン。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FieldAlignEnum">
      <summary>フィールドの四角形内のテキストの配置を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスの
        <see cref="P:C1.Win.FlexReport.Field.Align" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.General">
      <summary>数字は右に、その他の値は左に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.LeftTop">
      <summary>フィールドボックスの左および上に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.CenterTop">
      <summary>フィールドボックスの中央および上に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.RightTop">
      <summary>フィールドボックスの右および上に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.LeftBottom">
      <summary>フィールドボックスの左および下に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.CenterBottom">
      <summary>フィールドボックスの中央および下に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.RightBottom">
      <summary>フィールドボックスの右および下に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.LeftMiddle">
      <summary>フィールドボックスの左および上下の中央に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.CenterMiddle">
      <summary>フィールドボックスの中央および上下の中央に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.RightMiddle">
      <summary>フィールドボックスの右および上下の中央に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.JustTop">
      <summary>フィールドボックスの左右両端および上に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.JustBottom">
      <summary>フィールドボックスの左右両端および下に揃えて配置します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.JustMiddle">
      <summary>フィールドボックスの左右両端および上下の中央に揃えて配置します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureAlignEnum">
      <summary>フィールドの四角形内の画像の配置を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスと
        <see cref="T:C1.Win.FlexReport.Layout" />クラスの
        <see cref="P:C1.Win.FlexReport.Field.PictureAlign" />プロパティと
        <see cref="!:Layout.PictureAlign" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.LeftTop">
      <summary>左および上に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.CenterTop">
      <summary>中央および上に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.RightTop">
      <summary>右および上に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.LeftBottom">
      <summary>左および下に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.CenterBottom">
      <summary>中央および下に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.RightBottom">
      <summary>右および下に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.LeftMiddle">
      <summary>左および上下の中央に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.CenterMiddle">
      <summary>中央および上下の中央に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.RightMiddle">
      <summary>右および上下の中央に揃えます。必要に応じて切り詰めます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureScaleEnum">
      <summary>フィールドの四角形内の画像のスケーリングを指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスと
        <see cref="T:C1.Win.FlexReport.Layout" />クラスの
        <see cref="P:C1.Win.FlexReport.Field.PictureScale" />プロパティと
        <see cref="!:Layout.PictureScale" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Clip">
      <summary>画像の元のサイズを使用します。必要に応じて、表示領域でクリッピングします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Stretch">
      <summary>表示領域いっぱいに画像を縦横に拡大縮小します。このモードでは、通常、画像のアスペクト比が変化します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Scale">
      <summary>表示領域に合わせて画像を拡大縮小します。このモードでは、画像のサイズが変化しますが、アスペクト比は維持されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Tile">
      <summary>表示領域いっぱいに画像をタイル表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Hide">
      <summary>画像を非表示にします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.RunningSumEnum">
      <summary>積算合計を計算するかどうかを指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスの
        <see cref="P:C1.Win.FlexReport.Field.RunningSum" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.RunningSumEnum.NoRunningSum">
      <summary>積算合計フィールドとして処理しません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.RunningSumEnum.SumOverGroup">
      <summary>各グループに渡る積算合計を計算します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.RunningSumEnum.SumOverAll">
      <summary>レポート全体に渡る積算合計を計算します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.TextDirectionEnum">
      <summary>フィールド内のテキストの方向を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスの
        <see cref="!:Field.TextDirection" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.TextDirectionEnum.Normal">
      <summary>テキストの方向は標準です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.TextDirectionEnum.Up">
      <summary>テキストの方向は上向きです。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.TextDirectionEnum.Down">
      <summary>テキストの方向は下向きです。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Field.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.Field" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Field.Load(System.Xml.XmlNodeList)">
      <summary>高度な永続性機構を提供するために派生クラスでオーバーライドされます。</summary>
      <param name="properties"></param>
    </member>
    <member name="M:C1.Win.FlexReport.Field.Save(System.Xml.XmlWriter)">
      <summary>高度な永続性機構を提供するために派生クラスでオーバーライドされます。</summary>
      <param name="writer"></param>
    </member>
    <member name="M:C1.Win.FlexReport.Field.GetRenderContent(System.String@,System.Drawing.Image@,System.Boolean@,System.Boolean)">
      <summary>フィールドによってレンダリングされるテキストまたは画像を選択します。</summary>
      <param name="value">フィールドのテキスト。</param>
      <param name="img">フィールドの画像。</param>
      <param name="disposeImage">画像を使用後に廃棄することを示します。</param>
      <param name="designTime">このパラメータを使用して、設計時と実行時では異なる方法でフィールドをレンダリングできます。連結コントロールには設計時に利用できるデータがないため、通常、これが必要です。</param>
      <remarks>独自のテキストや画像を提供してレポートにレンダリングするには、このメソッドを派生クラスでオーバーライドします。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.WritingMode">
      <summary>水平方向（デフォルト）、垂直方向に左から右へなど、テキストの書字モードを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Value">
      <summary>フィールドの計算値を取得または設定します。</summary>
      <remarks>
        <para>
          フィールドの
          <see cref="P:C1.Win.FlexReport.Field.Calculated" />プロパティが true に設定されている場合、コントロールは、
          <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティに格納されている式を評価し、その結果を
          <see cref="P:C1.Win.FlexReport.Field.Value" />プロパティに格納します。その結果がレポートにレンダリングされます。
        </para>
        <para>
          このプロパティは、フィールドのデフォルトプロパティです。したがって、
          <b>VBScript</b>式で フィールド名を使用する場合、実際には、フィールドの
          <see cref="P:C1.Win.FlexReport.Field.Value" />プロパティを参照しています。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Subreport">
      <summary>
        フィールド内にレンダリングされる別のレポート（
        <i>サブレポート</i>）への参照を取得または設定します。
      </summary>
      <remarks>
        <para>サブレポートは、別のレポートに挿入されるレポートです。サブレポートは、いくつかのレポートを 1 つのレポートに まとめる場合に便利です。たとえば、いくつかのサブレポートを 1 つのレポートに組み込んだ メインレポートを作成できます。また、メインレポートを使用して詳細情報を表示し、サブレポートを使用して各グループの先頭に サマリーデータを表示できます。</para>
        <para>実用的な例として、コントロールに付属する NWIND.XML サンプルの "Sales By Category" レポートや "Sales By Year" レポートを参照してください。</para>
        <para>
          フィールドをサブレポートとして定義するには、サブレポートをロードした後に、フィールドの
          <see cref="P:C1.Win.FlexReport.Field.Subreport" />プロパティにサブレポートコントロールを割り当てます。
        </para>
        <para>
          次に、サブレポートフィールドの
          <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティ（これは、Microsoft Access サブレポートの
          <b>LinkChildFields/LinkMasterFields</b>プロパティの設定と同じ）を使用して、サブレポートをメインレポートにリンクします。サブレポートフィールドの
          <b>Text</b>プロパティは、フィルタとして使用されます。このプロパティは、メインレポートの現在のレコードに基づいて、サブレポートのレンダリングに使用されるソースレコードセット内のレコードを指定します。
        </para>
        <para>
          メインレポートがレンダリングされ、サブレポートフィールドに達すると、
          <b>Text</b>式が評価され、その結果がサブレポートのフィルタ条件として使用されます。
        </para>
        <para>リンク式の作成は難しくありませんが、引用符を含む文字列を作成する際に、これらの内部の引用符を二重（""）にする必要があるため、多少複雑になります。</para>
        <para>
          レポートデザイナを使用してレポートを作成する場合、コードでリンク式を作成する必要は ありません。代わりに、サブレポートフィールドを右クリックし、
          <b>［サブレポートのリンク］</b>メニューを選択します。ダイアログボックスが表示されるので、ここでマスターフィールドと詳細フィールドを選択できます。［OK］をクリックすると、レポートデザイナによって自動的にリンク式が作成され、サブレポートフィールドの
          <b>Text</b>プロパティに割り当てられます。
        </para>
        <para>
          サブレポートフィールドの
          <see cref="P:C1.Win.FlexReport.Field.CanGrow" />プロパティは、通常、true に設定されます。これにより、すべてのレコードを表示できるようにサブレポートフィールドを 広げることができます。
        </para>
        <para>サブレポートに別のサブレポートを入れることもできます。ネストできるレポートの深さに決めれた制限はありません。ただし、レポートの循環参照は指定できません。つまり、レポートはサブレポートを介して自分自身を参照することは できません。</para>
      </remarks>
      <example>
        <code>
          <![CDATA[
          // サブレポートをロードし、それをメインレポートのフィールドに割り当てます
          string sSub = "Sales By Category Subreport";
          c1Sub.Load("NWIND.XML", sSub);
          c1rMain.Fields[sSub].Subreport = c1Sub;
          
          // メインレポートとサブレポートの接続を設定します
          c1rMain.Fields[sSub].Calculated = true;
          c1rMain.Fields[sSub].Text = "\"CategoryName = '\" &amp; [CategoryName] &amp; \"'\"";
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Text">
      <summary>フィールドのテキストを取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティには、レポートにレンダリングされるテキストが含まれます。
        </para>
        <para>
          この値は、
          <see cref="P:C1.Win.FlexReport.Field.Calculated" />プロパティの設定に基づき、リテラルとして（変換なしで）レンダリングされるか、
          <b>VBScript</b>式として評価されます。
        </para>
      </remarks>
      <example>
        次のコードは 2 つのフィールドを作成します。1 つは「Sales Tax」というラベルを表示し、もう 1 つは データベースフィールド「Sales」に定数を乗算して税額を表示します。
        <code>
          <![CDATA[
          // リテラルテキストを表示します
          _c1r.Field[0].Text = "Sales Tax";
          _c1r.Field[0].Calculated = false;
          
          // 計算値を表示します
          _c1r.Field[1].Text = "Sales * 0.085";
          _c1r.Field[1].Calculated = true;
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Calculated">
      <summary>
        <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティをリテラル値と計算式のどちらとして 解釈するかを指定します。
      </summary>
      <remarks>
        <para>
          このプロパティが false に設定されると、
          <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティの値は 何も処理されずにレポートにレンダリングされます。
        </para>
        <para>
          このプロパティが true に設定されると、
          <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティの値は
          <b>VBScript</b>式として評価され、式の結果がレポートにレンダリングされます。
        </para>
      </remarks>
      <example>
        次のコードは 2 つのフィールドを作成します。1 つは「Sales Tax」というラベルを表示し、もう 1 つは データベースフィールド「Sales」に定数を乗算して税額を表示します。
        <code>
          <![CDATA[
          // リテラルテキストを表示します
          _c1r.Field[0].Text = "Sales Tax";
          _c1r.Field[0].Calculated = false;
          
          // 計算値を表示します
          _c1r.Field[1].Text = "Sales * 0.085";
          _c1r.Field[1].Calculated = true;
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.HideDuplicates">
      <summary>連続するレコードで、重複する値を非表示にするかどうかを指定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.HideDuplicates" />プロパティを使用すると、フィールドの値が前のレコードの値と同じ場合に、そのフィールドをレポートで非表示にできます。
        </para>
        <para>たとえば、納入業者と製品をリストするレポートでは、すべての製品に業者名を 表示するのではなく、同じ製品のグループに業者の名前を一度だけ表示できます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.RunningSum">
      <summary>フィールドの積算合計を表示するかどうかを指定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.RunningSum" />プロパティを使用して、レポートのレコードごとの合計または グループごとの合計を計算できます。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.RunningSum" />プロパティは、レポートの計算フィールドに積算合計を 表示するかどうかを指定します。また、積算する値の範囲を設定できます。
        </para>
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.RunningSumEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.WordWrap">
      <summary>フィールドのコンテンツがフィールド四角形内で折り返されるかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Font">
      <summary>フィールドのフォントを取得または設定します。</summary>
      <remarks>
        フィールドのフォントの
        <see cref="P:C1.Win.FlexReport.FontHolder.Size" />プロパティをフィールドボックスに収まらないほど 大きな値（
        <see cref="!:Height" />プロパティで定義）に設定すると、テキストはフィールドにまったく表示されなくなります。
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.FontHolder" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.CanGrow">
      <summary>フィールドの高さがフィールドのコンテンツに合わせて自動的に大きくなるかどうかを指定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.CanGrow" />プロパティと
          <see cref="P:C1.Win.FlexReport.Field.CanShrink" />プロパティを使用して、レポートのフィールドとセクションの外観を制御できます。両方のプロパティを true に設定すると、任意の量のデータを出力できるようにフィールドまたはセクションは自動的に調整されます。フィールドが拡大または 縮小すると、それより下にあるフィールドは、ページ内を上下に移動します。
        </para>
        <para>
          フィールドの
          <see cref="P:C1.Win.FlexReport.Field.CanGrow" />プロパティを true に設定すると、コントロールは、そのフィールドを含むセクションの
          <see cref="P:C1.Win.FlexReport.Field.CanGrow" />プロパティを自動的に true に設定します。ただし、コントロールの
          <see cref="P:C1.Win.FlexReport.Field.CanShrink" />プロパティを true に設定しても、セクションの
          <see cref="P:C1.Win.FlexReport.Field.CanShrink" />プロパティは true に設定されません。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.CanGrow" />プロパティと
          <see cref="P:C1.Win.FlexReport.Field.CanShrink" />プロパティを使用する場合は、次の点に注意してください。
        </para>
        <para>1. これらのプロパティの設定は、フィールド間の水平方向の間隔には影響しません。フィールドが占める垂直方向の領域にだけ影響します。</para>
        <para>2. 背の高いフィールドがあると、その横にあるフィールドが縮小されないことがあります。たとえば、いくつかの背の低いコントロールがレポートの詳細セクションの左側にあり、背の高いコントロール（非連結オブジェクトフレームなど）が右側にある場合、左側にあるコントロールは、データがなくても縮小されません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.CanShrink">
      <summary>フィールドの高さがフィールドのコンテンツに合わせて自動的に小さくなるかどうかを指定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.Field.CanGrow" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.Size">
      <summary>フィールドのサイズ（ツイップ単位）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Location">
      <summary>セクション内のフィールドの位置（ツイップ単位）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.ForeColor">
      <summary>フィールドの前景色を取得または設定します。</summary>
      <remarks>
        <b>ForeColor</b>プロパティを使用して、フィールド内のテキストの色を指定します。このプロパティを使用して、フィールドを読みやすくしたり、特別な意味を伝えることができます。
      </remarks>
      <example>
        次のコードは、
        <i>UnitsInStock</i>フィールドの値が追加注文レベルを下回った場合に、そのフィールドのテキストの色を 変更するスクリプトです。
        <code>
          <![CDATA[
          // スクリプトを作成します
          string script = "UnitsInStock.ForeColor = " + 
            "IIF(UnitsInStock &lt; ReorderLevel, vbRed, vbBlack)";
          
          // スクリプトを詳細セクションに割り当てます
          _c1r.Sections.Detail.OnPrint = script;
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Format">
      <summary>フィールド値の書式設定に使用される文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.Format" />プロパティを使用して、数値、日付、時刻、およびテキストを 表示および印刷する方法をカスタマイズできます。
        </para>
        <para>
          たとえば、
          <b>Price</b>フィールドを作成した場合に、その
          <see cref="P:C1.Win.FlexReport.Field.Format" />プロパティを「Currency」に設定できます。これで、フィールド値が「4321.678」の場合は、「$4,321.68」とレンダリングされます。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Field.Format" />プロパティを使用して、数値（通貨およびパーセント値を含む）、日付、boolean 値、および文字列を書式設定できます。
        </para>
        <para>
          この書式文字列の構文は、.NET の
          <see cref="M:System.String.Format(System.String,System.Object)" />メソッドで使用される構文と同じです。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Align">
      <summary>フィールド内にテキストを配置する方法を取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.FieldAlignEnum" />
      <remarks>
        <para>このプロパティは、フィールド内にテキストを配置する方法を決定します。</para>
        <para>
          画像の配置を制御するには、
          <see cref="P:C1.Win.FlexReport.Field.PictureAlign" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.BorderStyle">
      <summary>フィールドの境界線のスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.LineWidth">
      <summary>フィールドの境界線または線の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.BorderColor">
      <summary>フィールドの境界線の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Picture">
      <summary>フィールドに表示する画像を取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、次の 3 種類のオブジェクトに設定できます。</para>
        <para>
          1) 通常の .NET
          <see cref="T:System.Drawing.Image" />オブジェクト。
        </para>
        <para>2) 画像のファイル名または URL を含む文字列。</para>
        <para>3) レポートデータソース内の画像フィールドの名前を含む文字列。</para>
        <para>1 と 2 は、ロゴなどの非連結画像を作成するために使用されます。これらの画像は、レポートデータに依存しません。</para>
        <para>3 は、製品や従業員の写真などの連結画像を作成するために使用されます。これらは、レポートデータと一緒に格納される画像です。</para>
      </remarks>
      <seealso cref="P:C1.Win.FlexReport.Field.PictureAlign" />
      <seealso cref="P:C1.Win.FlexReport.Field.PictureScale" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.PictureAlign">
      <summary>フィールド画像が配置される方法を取得または設定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.Field.Picture" />
      <seealso cref="P:C1.Win.FlexReport.Field.PictureScale" />
      <seealso cref="T:C1.Win.FlexReport.PictureAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.PictureScale">
      <summary>画像がフィールド領域に合わせて拡大縮小される方法を取得または設定します。</summary>
      <remarks>
        <para>このプロパティの設定に基づいて、画像はクリップ、引き伸ばし、拡大縮小（画像のアスペクト比 を保持）、並べて表示、または非表示にされます。</para>
        <para>
          <b>PictureScale</b>は、
          <see cref="P:C1.Win.FlexReport.Field.PictureAlign" />プロパティと組み合わせて機能し、画像の拡大縮小と 配置を個別に制御できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.CheckBox">
      <summary>フィールドがチェックボックスとして表示されるかどうかを指定します。</summary>
      <remarks>このプロパティを使用すると、ブール値をプレーンテキストではなくグラフィカルに表示できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.RTF">
      <summary>このフィールドが { } で囲まれた文字列を RTF としてレンダリングするかどうかを指定します。</summary>
      <remarks>このプロパティを true に設定すると、{ } で囲まれたテキストを含む フィールドが RTF としてレンダリングされます。これにより、フィールド内に複雑な書式設定を追加できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.BarCode">
      <summary>フィールドをバーコード形式でレンダリングできます。</summary>
      <seealso cref="T:C1.Win.C1Document.BarCodeEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.BarcodeOptions">
      <summary>
        バーコードレンダリングの追加オプションを定義できる
        <see cref="P:C1.Win.FlexReport.Field.BarcodeOptions" />オブジェクトを取得します。
      </summary>
      <seealso cref="T:C1.Win.C1Document.BarCodeEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.ShapeType">
      <summary>
        現在のフィールドによって描画される幾何学図形のタイプを取得または設定します。
        <para>
          デフォルトは
          <b>None</b>です。
        </para>
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Shape">
      <summary>
        このフィールドによって描画される幾何学図形のプロパティを指定する
        <see cref="T:C1.Win.C1Document.ShapeBase" />派生クラスのインスタンスを 取得または設定します（
        <see cref="P:C1.Win.FlexReport.Field.ShapeType" />が
        <b>None</b>でない場合）。
      </summary>
      <seealso cref="P:C1.Win.FlexReport.Field.ShapeType" />
    </member>
    <member name="T:C1.Win.FlexReport.ForcePageBreakEnum">
      <summary>フィールドまたはセクションの前後にページ区切りが挿入されるかどうかを決定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスと
        <see cref="T:C1.Win.FlexReport.Section" />クラスの
        <see cref="!:Field.ForcePageBreak" />プロパティと
        <see cref="P:C1.Win.FlexReport.Section.ForcePageBreak" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.None">
      <summary>ページ区切りなし。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.Before">
      <summary>フィールドまたはセクションの前にページ区切りを挿入します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.After">
      <summary>フィールドまたはセクションの後にページ区切りを挿入します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.BeforeAndAfter">
      <summary>フィールドまたはセクションの前と後にページ区切りを挿入します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.PageBefore">
      <summary>段組みレポートで、フィールドまたはセクションの前に段区切りではなくページ区切りを挿入します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.PageAfter">
      <summary>段組みレポートで、フィールドまたはセクションの後に段区切りではなくページ区切りを挿入します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.PageBeforeAndAfter">
      <summary>段組みレポートで、フィールドまたはセクションの前後に段区切りではなくページ区切りを挿入します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.AutoSizeBehavior">
      <summary>オブジェクトのサイズをそのコンテンツに基づいてどのように変更するかを定義します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.None">
      <summary>オブジェクトはサイズ変更されません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.CanGrow">
      <summary>オブジェクトは拡大可能です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.CanShrink">
      <summary>オブジェクトは縮小可能です。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.GrowAndShrink">
      <summary>オブジェクトは拡大縮小可能です。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SplitBehavior">
      <summary>レポートオブジェクトの分割動作を定義します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SplitBehavior.Never">
      <summary>オブジェクトは複数のページに分割されません（つまり、必ず 1 ページに一緒に表示されます）。1 ページに収まらないオブジェクトはカットされます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SplitBehavior.SplitIfNeeded">
      <summary>現在のページに収まらない場合、オブジェクトは分割されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SplitBehavior.KeepTogether">
      <summary>オブジェクトが大きすぎて空のページに収まらない場合にのみ、オブジェクトが 分割されます。収まらない場合、オブジェクトは即座に分割されます。そうでない場合は、新しいページが開始され、そのページにオブジェクトが分割されずに配置 されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.AnchorEnum">
      <summary>
        セクションの
        <see cref="P:C1.Win.FlexReport.Section.CanGrow" />プロパティと
        <see cref="P:C1.Win.FlexReport.Section.CanShrink" />プロパティを 設定してセクションが拡大または縮小した場合に、その中のフィールドがセクションに対してどのように配置されるかを決定します。
      </summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Field" />クラスの
        <see cref="!:Field.Anchor" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.AnchorEnum.Top">
      <summary>フィールドは移動しません。フィールドの上端と セクションの上端の間のスペースは変わりません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.AnchorEnum.Bottom">
      <summary>フィールドは垂直方向に移動します。フィールドの下端と セクションの下端の間のスペースは変わりません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.AnchorEnum.TopAndBottom">
      <summary>フィールドは拡大または縮小します。フィールドとセクションの間のスペースは 上下とも変わりません。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FieldBase">
      <summary>C1FlexReport 内のすべてのフィールドの基本クラス。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.AssignFrom(C1.Win.FlexReport.FieldBase)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FieldBase" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.Clone">
      <summary>
        現在の
        <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクトをコピーして新しいオブジェクトを作成します。
      </summary>
      <returns>
        現在の
        <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクトのコピー。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.SetZOrder(System.Boolean)">
      <summary>
        フィールドを
        <b>ZOrder</b>の最前面または最背面に移動します。
      </summary>
      <param name="front">
        フィールドを
        <b>ZOrder</b>の最前面または最背面のどちらに移動するかを決定します。
      </param>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Bounds">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクトの範囲を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ParentReport">
      <summary>
        このフィールドを含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Name">
      <summary>フィールド名を取得または設定します。</summary>
      <remarks>
        <para>
          フィールド名は、コントロールの
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Fields" />コレクションへのインデックスとして使用できます。
        </para>
        <para>
          次の例に示すように、フィールド名は、
          <b>VBScript</b>式でフィールドを識別するためにも 使用されます。
        </para>
        <para>重複または空のフィールド名を使用することもできますが、フィールド名をスクリプトで使用したり、インデクサとして使用する場合は 避けてください。</para>
      </remarks>
      <example>
        次のコードは、スクリプトをレポートの
        <see cref="F:C1.Win.FlexReport.SectionTypeEnum.Detail" />セクションに割り当てます。このスクリプトは、値に基づいてフィールドの
        <see cref="!:ForeColor" />プロパティを変更します。
        <code>
          <![CDATA[
          _c1r.Sections.Fields["sampleField"].ForeColor = Color.Black;
          _c1r.Sections.Detail.OnFormat = 
            "sampleField.ForeColor = iif(someValue &lt; 5, vbRed, vbBlack)";
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Section">
      <summary>フィールドが属するセクションを取得または設定します。</summary>
      <remarks>
        フィールドを 1 つのセクションから別のセクションに移動するには、
        <see cref="P:C1.Win.FlexReport.FieldBase.Section" />プロパティを新しい値に設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SubSectionIndex">
      <summary>
        フィールドが属する
        <see cref="P:C1.Win.FlexReport.FieldBase.Section" />の
        <see cref="T:C1.Win.FlexReport.SubSection" />のインデックスを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Visible">
      <summary>
        レポート内に
        <see cref="T:C1.Win.FlexReport.FieldBase" />をレンダリングするかどうかを指定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Hyperlink">
      <summary>現在のフィールドに関連付けられているハイパーリンクを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Left">
      <summary>フィールドの左端の x 座標をツイップ単位で取得または設定します。</summary>
      <remarks>
        <para>
          フィールドの位置は、このフィールドの左上隅から、このフィールドを含む
          <see cref="T:C1.Win.FlexReport.SubSection" />の左上隅までの距離です。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.FieldBase.Left" />プロパティまたは
          <see cref="P:C1.Win.FlexReport.FieldBase.Top" />プロパティを 0 に設定すると、フィールドは、このフィールドを含むセクションの左端または上端に配置されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Top">
      <summary>フィールドの上端の y 座標をツイップ単位で取得または設定します。</summary>
      <remarks>
        <para>
          フィールドの位置は、このフィールドの左上隅から、このフィールドを含む
          <see cref="T:C1.Win.FlexReport.SubSection" />の左上隅までの距離です。
        </para>
        <para>
          フィールドの
          <see cref="!:AutoHEight" />プロパティが true に設定されている場合、コントロールは、フィールドのコンテンツに合わせて自動的に
          <see cref="!:RenderHeight" />プロパティを調整します。また、コントロールは、現在のフィールドの下にあるフィールドの
          <see cref="!:RenderTop" />プロパティを調整して、フィールド間の垂直方向の距離を維持します。
          <see cref="P:C1.Win.FlexReport.FieldBase.Top" />プロパティと
          <see cref="P:C1.Win.FlexReport.FieldBase.Height" />プロパティの値は影響されません。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Width">
      <summary>フィールドの幅（ツイップ単位）を取得または設定します。</summary>
      <remarks>
        <para>
          各
          <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクトには、そのコンテンツがレンダリングされる場所になる四角形（フィールドボックス）があります。
        </para>
        <para>
          フィールドボックスは、
          <see cref="P:C1.Win.FlexReport.FieldBase.Left" />、
          <see cref="P:C1.Win.FlexReport.FieldBase.Top" />、
          <see cref="P:C1.Win.FlexReport.FieldBase.Width" />、
          <see cref="P:C1.Win.FlexReport.FieldBase.Height" />の各プロパティによって定義されます。
        </para>
        <para>これらのプロパティはツイップ単位で表され、位置は、そのフィールドが含まれるセクションからの相対位置です。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Height">
      <summary>フィールドの高さ（ツイップ単位）を取得または設定します。</summary>
      <remarks>
        <para>
          各
          <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクトには、そのコンテンツがレンダリングされる場所になる四角形（フィールドボックス）があります。
        </para>
        <para>
          フィールドボックスは、
          <see cref="P:C1.Win.FlexReport.FieldBase.Left" />、
          <see cref="P:C1.Win.FlexReport.FieldBase.Top" />、
          <see cref="P:C1.Win.FlexReport.FieldBase.Width" />、
          <see cref="P:C1.Win.FlexReport.FieldBase.Height" />の各プロパティによって定義されます。
        </para>
        <para>これらのプロパティはツイップ単位で表され、位置は、そのフィールドが含まれるセクションからの相対位置です。</para>
        <para>
          フィールドの
          <see cref="P:C1.Win.FlexReport.FieldBase.Height" />プロパティは、フィールドの
          <see cref="T:System.Drawing.Font" />の高さ以上の値に設定する必要があります。そうしないと、テキストがフィールドにまったく表示されなくなります。
        </para>
        <para>
          フィールドの
          <see cref="P:C1.Win.FlexReport.FieldBase.AutoHeight" />プロパティが true に設定されている場合、コントロールは、フィールドのコンテンツに合わせて自動的に
          <see cref="!:RenderHeight" />プロパティを調整します。また、コントロールは、現在のフィールドの下にあるフィールドの
          <see cref="!:RenderTop" />プロパティを調整して、フィールド間の垂直方向の距離を維持します。
          <see cref="P:C1.Win.FlexReport.FieldBase.Top" />プロパティと
          <see cref="P:C1.Win.FlexReport.FieldBase.Height" />プロパティの値は影響されません。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Right">
      <summary>フィールドの右端の x 座標をツイップ単位で取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Bottom">
      <summary>フィールドの下端の y 座標をツイップ単位で取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginLeft">
      <summary>フィールドの左端とコンテンツの間隔（ツイップ単位）を取得または設定します。</summary>
      <remarks>このプロパティは、境界線または単色の背景を持つフィールドをレンダリングする場合に、境界線とフィールドコンテンツの間に 間隔を追加するために使用できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginTop">
      <summary>フィールドの上端とコンテンツの間隔（ツイップ単位）を取得または設定します。</summary>
      <remarks>このプロパティは、境界線または単色の背景を持つフィールドをレンダリングする場合に、境界線とフィールドコンテンツの間に 間隔を追加するために使用できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginRight">
      <summary>フィールドの右端とコンテンツの間隔（ツイップ単位）を取得または設定します。</summary>
      <remarks>このプロパティは、境界線または単色の背景を持つフィールドをレンダリングする場合に、境界線とフィールドコンテンツの間に 間隔を追加するために使用できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginBottom">
      <summary>フィールドの下端とコンテンツの間隔（ツイップ単位）を取得または設定します。</summary>
      <remarks>このプロパティは、境界線または単色の背景を持つフィールドをレンダリングする場合に、境界線とフィールドコンテンツの間に 間隔を追加するために使用できます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ForcePageBreak">
      <summary>フィールドの前後にページ区切りを挿入するかどうかを指定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.ForcePageBreakEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.AutoHeight">
      <summary>コンテンツに基づいてオブジェクトの高さをどのように変更するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.AutoWidth">
      <summary>コンテンツに基づいてオブジェクトの幅をどのように変更するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SplitVertBehavior">
      <summary>オブジェクトが高すぎて現在のページのスペースに垂直方向に収まらない場合に、オブジェクトをどのように処理するかを決定する値を取得または設定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.FieldBase.SplitHorzBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SplitHorzBehavior">
      <summary>オブジェクトが広すぎて現在のページのスペースに水平方向に収まらない場合に、オブジェクトをどのように処理するかを決定する値を取得または設定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.FieldBase.SplitVertBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.KeepTogether">
      <summary>フィールドが 1 ページに収められるかどうかを指定します。</summary>
      <remarks>
        <para>このプロパティが true に設定されている場合、コントロールは、フィールドのコンテンツを 1 ページに 収めるためにページ区切りを挿入します。</para>
        <para>
          false に設定されている場合は、そのフィールドを含む
          <see cref="P:C1.Win.FlexReport.FieldBase.Section" />の
          <see cref="P:C1.Win.FlexReport.Section.KeepTogether" />プロパティも false に設定され、フィールドが 2 ページ以上にまたがってレンダリングされる ことがあります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Anchor">
      <summary>
        このフィールドを含む
        <see cref="T:C1.Win.FlexReport.SubSection" />に相対的なフィールドの垂直位置を取得または設定します。
      </summary>
      <remarks>
        <para>通常、フィールドは、セクションが拡大または縮小されても移動しません。ただし、必要に応じて、セクションと一緒にフィールドを拡大したり、セクションの下端から同じ位置にフィールドを留めておくことが できます。</para>
        <para>これは特に、セクションの高さ全体に伸びる垂直線を作成するための フィールドではよく使用する機能です。</para>
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.AnchorEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ZOrder">
      <summary>
        フィールドの
        <b>ZOrder</b>を取得または設定します。
      </summary>
      <remarks>
        <para>
          フィールドの
          <b>ZOrder</b>は、そのフィールドにオーバーラップする他のフィールドの前面または背面のどちらにフィールドを レンダリングするかを決定します。
        </para>
        <para>
          <b>ZOrder</b>値を大きくするとフィールドは前面に移動し、小さく設定すると背面に移動します。
        </para>
        <para>
          <b>ZOrder</b>値は相対的な値なので、通常は、
          <see cref="M:C1.Win.FlexReport.FieldBase.SetZOrder(System.Boolean)" />メソッドを呼び出す方が簡単です。この メソッドは、オーバーラップしている他のすべてのフィールドの最前面または最背面にフィールドをレンダリングします。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.FieldCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Add(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        コレクションに
        <see cref="T:C1.Win.FlexReport.Field" />を追加します。このオーバーロードは、レガシーフィールド型を追加する、非推奨のメソッドです。
      </summary>
      <param name="name">新しいフィールドの名前を含みます。フィールドには統一的な名前付け規則を使用し、レポートフィールドとデータベースフィールドの名前は重複しないようにしてください。同じ名前を使用しても不正にはなりませんが、VBScript 式で同じフィールド名が使用されると、予期しない結果になる可能性があります。</param>
      <param name="text">
        新しいフィールドの
        <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティの値を含みます。この値は、フィールドの
        <see cref="P:C1.Win.FlexReport.Field.Calculated" />プロパティの設定に基づいて、リテラルまたは VBScript 式として処理されます。デフォルトでは、
        <see cref="P:C1.Win.FlexReport.Field.Calculated" />は false に設定されており、テキストは そのままレンダリングされます。
      </param>
      <param name="left">このフィールドを含むセクションに対する新しいフィールドの左端の座標（ツイップ単位）。</param>
      <param name="top">このフィールドを含むセクションに対する新しいフィールドの上端の座標（ツイップ単位）。</param>
      <param name="width">新しいフィールドの幅（ツイップ単位）。</param>
      <param name="height">新しいフィールドの高さ（ツイップ単位）。</param>
      <returns>新しく追加されたフィールドへの参照。</returns>
      <remarks>
        <para>
          セクションの
          <see cref="P:C1.Win.FlexReport.Section.Fields" />コレクションにフィールドを追加した場合、新しいフィールドは、自動的に そのセクションに割り当てられます。
        </para>
        <para>
          コントロールの
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Fields" />コレクションにフィールドを追加した場合、新しいフィールドは、どのセクションにも 割り当てられません。この場合は、フィールドの
          <see cref="!:Field.Section" />プロパティを設定する必要があります。そうしないと、レポートにレンダリングされません。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Add(System.String,System.String,C1.Win.Interop.Rect)">
      <summary>
        コレクションに
        <see cref="T:C1.Win.FlexReport.Field" />を追加します。
      </summary>
      <param name="name">新しいフィールドの名前を含みます。フィールドには統一的な名前付け規則を使用し、レポートフィールドとデータベースフィールドの名前は重複しないようにしてください。同じ名前を使用しても不正にはなりませんが、VBScript 式で同じフィールド名が使用されると、予期しない結果になる可能性があります。</param>
      <param name="text">
        新しいフィールドの
        <see cref="P:C1.Win.FlexReport.Field.Text" />プロパティの値を含みます。この値は、フィールドの
        <see cref="P:C1.Win.FlexReport.Field.Calculated" />プロパティの設定に基づいて、リテラルまたは VBScript 式として処理されます。デフォルトでは、
        <see cref="P:C1.Win.FlexReport.Field.Calculated" />は false に設定されており、テキストは そのままレンダリングされます。
      </param>
      <param name="rc">このフィールドを含むセクションに対するフィールドの位置（ツイップ単位）を定義します。</param>
      <returns>新しく追加されたフィールドへの参照。</returns>
      <remarks>
        <para>
          セクションの
          <see cref="P:C1.Win.FlexReport.Section.Fields" />コレクションにフィールドを追加した場合、新しいフィールドは、自動的に そのセクションに割り当てられます。
        </para>
        <para>
          コントロールの
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Fields" />コレクションにフィールドを追加した場合、新しいフィールドは、どのセクションにも 割り当てられません。この場合は、フィールドの
          <see cref="!:Field.Section" />プロパティを設定する必要があります。そうしないと、レポートにレンダリングされません。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Add(C1.Win.FlexReport.FieldBase)">
      <summary>コレクションにフィールドまたはフィールドのクローンを追加します。</summary>
      <param name="field">
        コレクションに追加する
        <see cref="T:C1.Win.FlexReport.FieldBase" />オブジェクト。
      </param>
      <returns>新しく追加されたフィールドへの参照。</returns>
      <remarks>フィールドがどのレポートにも属さない場合、そのフィールドはコレクションに追加されます。フィールドがすでに レポートに属している場合は、そのクローンが作成されてコレクションに追加されます。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.RemoveAt(System.Int32)">
      <summary>コレクションからフィールドを削除します。</summary>
      <param name="index">削除するフィールドを指定します。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Remove(System.Int32)">
      <summary>コレクションからフィールドを削除します。</summary>
      <param name="index">削除するフィールドを指定します。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Remove(System.String)">
      <summary>コレクションからフィールドを削除します。</summary>
      <param name="name">削除するフィールドの名前。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Remove(C1.Win.FlexReport.FieldBase)">
      <summary>コレクションからフィールドを削除します。</summary>
      <param name="item">削除されるフィールド。</param>
    </member>
    <member name="T:C1.Win.FlexReport.ImageField">
      <summary>画像を表示するために使用されるフィールドです。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ImageField.Picture">
      <summary>フィールドに表示する画像を取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、次の 3 種類のオブジェクトに設定できます。</para>
        <para>
          1) 通常の .NET
          <see cref="!:Image" />オブジェクト。
        </para>
        <para>2) 画像のファイル名または URL を含む文字列。</para>
        <para>3) レポートデータソース内の画像フィールドの名前を含む文字列。</para>
        <para>1 と 2 は、ロゴなどの非連結画像を作成するために使用されます。これらの画像は、レポートデータに依存しません。</para>
        <para>3 は、製品や従業員の写真などの連結画像を作成するために使用されます。これらは、レポートデータと一緒に格納される画像です。</para>
      </remarks>
      <seealso cref="P:C1.Win.FlexReport.ImageField.PictureAlign" />
      <seealso cref="P:C1.Win.FlexReport.ImageField.PictureScale" />
    </member>
    <member name="P:C1.Win.FlexReport.ImageField.PictureAlign">
      <summary>フィールド領域内に画像を配置する方法を取得または設定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.ImageField.Picture" />
      <seealso cref="P:C1.Win.FlexReport.ImageField.PictureScale" />
      <seealso cref="T:C1.Win.FlexReport.PictureAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.ImageField.PictureScale">
      <summary>画像がフィールド領域に合わせて拡大縮小される方法を取得または設定します。</summary>
      <remarks>
        <para>このプロパティの設定に基づいて、画像はクリップ、引き伸ばし、拡大縮小（画像のアスペクト比 を保持）、並べて表示、または非表示にされます。</para>
        <para>
          <b>PictureScale</b>は、
          <see cref="P:C1.Win.FlexReport.ImageField.PictureAlign" />プロパティと組み合わせて機能し、画像の拡大縮小と 配置を個別に制御できます。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.SortEnum">
      <summary>グループのソート方法を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Group" />クラスの
        <see cref="P:C1.Win.FlexReport.Group.Sort" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.SortEnum.NoSort">
      <summary>このグループのレコードはソートしません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortEnum.Ascending">
      <summary>レコードを昇順にソートします。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortEnum.Descending">
      <summary>レコードを降順にソートします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.KeepTogetherEnum">
      <summary>グループが 1 ページに収められるかどうかを指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Group" />クラスと
        <see cref="T:C1.Win.FlexReport.Section" />クラスの
        <see cref="P:C1.Win.FlexReport.Group.KeepTogether" />プロパティと
        <see cref="P:C1.Win.FlexReport.Section.KeepTogether" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.KeepTogetherEnum.KeepNothing">
      <summary>グループをまとめません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.KeepTogetherEnum.KeepWholeGroup">
      <summary>グループヘッダー、詳細、およびフッターを 1 ページに収めます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.KeepTogetherEnum.KeepFirstDetail">
      <summary>グループヘッダーと最初の詳細セクションを 1 ページに収めます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Group">
      <summary>レポートデータをソートおよびグループ化するために使用されるオブジェクト。</summary>
      <remarks>
        各
        <b>Group</b>には、グループの集計情報の表示に使用できるヘッダーセクションと フッターセクションがあります。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Group.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.Group" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Group.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.Group" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Group.GroupBy">
      <summary>レコードのグループ化に使用される式を取得または設定します。</summary>
      <remarks>
        このプロパティには、ソースレコードセット内の各レコードを対象に評価される
        <b>VBScript</b>式が 含まれます。この式の値が変化するたびに、新しいグループが開始されます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Group.Sort">
      <summary>グループのソート方法を取得または設定します。</summary>
      <remarks>
        <para>
          指定されたソート方法は、
          <see cref="P:C1.Win.FlexReport.Group.GroupBy" />プロパティのコンテンツに適用されます。たとえば、
          <see cref="P:C1.Win.FlexReport.Group.GroupBy" />に「FirstName」という式が含まれており、
          <see cref="P:C1.Win.FlexReport.Group.Sort" />が Ascending に設定されている場合、そのグループは、データソース内の FirstName 列のコンテンツに基づいて昇順にソートされます。
        </para>
        <para>
          ソートは、C1FlexReport ではなく、データソース自体で実行されることに注意してください。このため、ソートは、常に計算式ではなく列名に基づいて実行されます。
          <see cref="P:C1.Win.FlexReport.Group.GroupBy" />プロパティに 計算式が含まれる場合は、その式から最初の列名が抽出され、その値に基づいてソートが 実行されます。たとえば、
          <see cref="P:C1.Win.FlexReport.Group.GroupBy" />が「Left(FirstName, 3)」に設定されている場合は、FirstName の最初の 3 文字ではなく、FirstName 列に基づいてソートが実行されます。
        </para>
        <para>
          これが問題になる場合もあります。たとえば、日付の一部（年、月、四半期など）に基づいてソートする必要がある場合です。このような場合は、データソースに計算列を追加し（データの取得に使用する SQL を変更する）、
          <see cref="P:C1.Win.FlexReport.Group.GroupBy" />プロパティをその計算列の名前に設定する方法をお勧めします。
        </para>
      </remarks>
      <example>
        次のコードは、データソースに HireQuarter 列を追加する SQL 文を使用し、この新しい列に基づいてグループを ソートします。レポートには、従業員が四半期ごとの雇用時期に基づいてソートして表示されます。
        <code>
          <![CDATA[
          string sql = "SELECT *, DATEPART('q', HireDate) AS HireQuarter " + 
            "FROM Employees";
          c1r.DataSource.RecordSource = sql;
          c1r.Groups[0].GroupBy = "HireQuarter";
          c1r.Groups[0].Sort = SortEnum.Ascending;
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Group.KeepTogether">
      <summary>グループが 1 ページに収められるかどうかを指定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.KeepTogetherEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Group.ParentReport">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Group" />を含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.SectionHeader">
      <summary>
        このグループのヘッダーを表す
        <see cref="T:C1.Win.FlexReport.Section" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.SectionFooter">
      <summary>
        このグループのフッターを表す
        <see cref="T:C1.Win.FlexReport.Section" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.OutlineLabel">
      <summary>
        アウトラインツリー内のオブジェクトのラベルを表す
        <see cref="T:C1.Win.FlexReport.ScriptStringValue" />を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.OutlineParent">
      <summary>アウトラインツリー内でこのオブジェクトの親として使用されるオブジェクトの名前を 取得または設定します。デフォルトでは、このプロパティは null です。これは、デフォルトのレポート階層を使用して親が決定されることを意味します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.SortExpression">
      <summary>グループインスタンスを集計関数でソートするために使用できるソート式を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.GroupCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.Group" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.GroupCollection.Add(System.String,System.String,C1.Win.FlexReport.SortEnum)">
      <summary>
        コレクションに新しい
        <see cref="T:C1.Win.FlexReport.Group" />を追加します。新しいグループのヘッダーおよびフッターセクションも追加されます。
      </summary>
      <param name="name">新しいグループの名前を含みます。</param>
      <param name="groupBy">
        新しいグループの
        <see cref="P:C1.Win.FlexReport.Group.GroupBy" />プロパティの値を含みます。
      </param>
      <param name="sort">
        新しいグループの
        <see cref="P:C1.Win.FlexReport.Group.Sort" />プロパティの値を含みます。
      </param>
      <returns>新しく追加されたグループへの参照。</returns>
      <remarks>レポートにグループが追加されると、自動的に 2 つの新しいセクション（新しいグループのグループヘッダーセクションとグループフッターセクション）が追加されます。これらの新しいセクションはデフォルトでは表示されません。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.GroupCollection.RemoveAt(System.Int32)">
      <summary>コレクションから項目を削除します。</summary>
      <param name="index">削除する項目を指定します。</param>
    </member>
    <member name="M:C1.Win.FlexReport.GroupCollection.Clear">
      <summary>コレクションをクリアします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.GroupCollection.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureShowEnum">
      <summary>背景画像が表示される場所を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Layout" />クラスの
        <see cref="!:Layout.PictureShow" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.NoPages">
      <summary>背景画像を表示しません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.AllPages">
      <summary>すべてのページに背景画像を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.FirstPage">
      <summary>最初のページにだけ背景画像を表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.AllButFirstPage">
      <summary>最初のページ以外のすべてのページに背景画像を表示します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ColumnLayoutEnum">
      <summary>段のレイアウト（縦長横並びまたは横長縦並び）を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Layout" />クラスの
        <see cref="P:C1.Win.FlexReport.Layout.ColumnLayout" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.ColumnLayoutEnum.Down">
      <summary>縦長の段を横に並べます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ColumnLayoutEnum.Across">
      <summary>横長の段を縦に並べます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ColumnLayoutEnum.Labels">
      <summary>レポートデザイナで、デザインサーフェス上のラベル間隔は無視、ヘッダー／フッターセクションは非表示、グループ化ボタンは無効、フィールドが移動またはドラッグされたときのセクションの自動サイズ変更は無効になります。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.OrientationEnum">
      <summary>用紙の方向を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Layout" />クラスの
        <see cref="P:C1.Win.FlexReport.Layout.Orientation" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.OrientationEnum.Auto">
      <summary>
        現在の
        <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />と レポートの幅（
        <see cref="P:C1.Win.FlexReport.Layout.Width" />）に基づいて、自動的に方向を設定します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.OrientationEnum.Portrait">
      <summary>縦方向を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.OrientationEnum.Landscape">
      <summary>横方向を使用します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.HdrFtrEnum">
      <summary>ページフッターセクションとページヘッダーセクションが表示される場所を指定します。</summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="T:C1.Win.FlexReport.Layout" />クラスの
        <see cref="P:C1.Win.FlexReport.Layout.PageFooter" />プロパティと
        <see cref="P:C1.Win.FlexReport.Layout.PageHeader" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.AllPages">
      <summary>ページフッターとページヘッダーは、レポートのすべてのページに印刷されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.NotWithReportHdr">
      <summary>ページヘッダーは、レポートヘッダーと同じページには印刷されません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.NotWithReportFtr">
      <summary>ページフッターは、レポートフッターと同じページには印刷されません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.NotWithReportHdrFtr">
      <summary>ページフッターおよびページヘッダーは、レポートヘッダーおよびレポートフッターと同じページには印刷されません。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Layout">
      <summary>ページにレポートをレンダリングする方法を制御します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PageSize">
      <summary>現在のページサイズを取得します（ツイップ単位）。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.Width">
      <summary>レポートの詳細セクションの幅を取得または設定します（ツイップ単位）。</summary>
      <remarks>
        <para>このプロパティは、レポートの詳細セクションの幅を決定します。</para>
        <para>
          段組みレポートのヘッダーセクションとフッターセクションは、すべての段（列）にまたがっています。したがって、レポートの実際の幅は、
          <see cref="P:C1.Win.FlexReport.Layout.Width" />*
          <see cref="P:C1.Win.FlexReport.Layout.Columns" />になります。
        </para>
        <para>
          たとえば、詳細セクションの幅が 1 インチの 2 段組みレポートの場合は、
          <b>Width</b>= 1440 になり、全体の幅は 2 * 1440 = 2880 になります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginLeft">
      <summary>各ページの左マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>
        マージンは、用紙の端からツイップ単位で測定されます。用紙のサイズと方向は、
        <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />プロパティと
        <see cref="P:C1.Win.FlexReport.Layout.Orientation" />プロパティを使用して選択できます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginRight">
      <summary>各ページの右マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>
        マージンは、用紙の端からツイップ単位で測定されます。用紙のサイズと方向は、
        <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />プロパティと
        <see cref="P:C1.Win.FlexReport.Layout.Orientation" />プロパティを使用して選択できます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginTop">
      <summary>各ページの上マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>
        マージンは、用紙の端からツイップ単位で測定されます。用紙のサイズと方向は、
        <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />プロパティと
        <see cref="P:C1.Win.FlexReport.Layout.Orientation" />プロパティを使用して選択できます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginBottom">
      <summary>各ページの下マージンを取得または設定します（ツイップ単位）。</summary>
      <remarks>
        マージンは、用紙の端からツイップ単位で測定されます。用紙のサイズと方向は、
        <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />プロパティと
        <see cref="P:C1.Win.FlexReport.Layout.Orientation" />プロパティを使用して選択できます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.Columns">
      <summary>詳細の段（列）の数を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用して、段組みレポートを作成します。</para>
        <para>
          段組みレポートのヘッダーセクションとフッターセクションの幅は、レポートの幅全体になります。詳細セクションだけが複数の段にレンダリングされます。
          <see cref="P:C1.Win.FlexReport.Layout.Width" />プロパティを使用して、各段の幅を指定します。また、
          <see cref="P:C1.Win.FlexReport.Layout.ColumnLayout" />プロパティを使用して、ページに段を縦長横並びに置くか、横長縦並びに 置くかを指定します。
        </para>
        <para>段組みレポートは、宛先ラベルなどの印刷済みの段組みフォームにレポートを印刷する 場合に便利です。また、詳細情報を横に詰めてページに表示するようなコンパクトなレポートを作成する場合にも 便利です。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.ColumnLayout">
      <summary>段のレイアウト（縦長横並びまたは横長縦並び）を取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.ColumnLayoutEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PaperSize">
      <summary>レポートの用紙サイズを取得または設定します。</summary>
      <seealso cref="T:System.Drawing.Printing.PaperKind" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.CustomWidth">
      <summary>レポートの独自の幅を取得または設定します（ツイップ単位）。</summary>
      <remarks>
        <para>
          独自の用紙サイズでレポートを作成するには、
          <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />プロパティを
          <see cref="F:System.Drawing.Printing.PaperKind.Custom" />に設定し、
          <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />プロパティと
          <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />プロパティを ページのサイズ（ツイップ単位）に設定します。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />が
          <see cref="F:System.Drawing.Printing.PaperKind.Custom" />以外の値に設定されている場合、用紙サイズは その設定によって決定されます。この場合、
          <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />プロパティと
          <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />プロパティは 使用されません。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />が
          <see cref="F:System.Drawing.Printing.PaperKind.Custom" />に設定され、
          <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />プロパティと
          <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />プロパティが 0 に設定されている場合は、プリンタのデフォルトの用紙サイズが使用されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.CustomHeight">
      <summary>レポートの独自の高さを取得または設定します（ツイップ単位）。</summary>
      <remarks>
        <para>
          独自の用紙サイズでレポートを作成するには、
          <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />プロパティを
          <see cref="F:System.Drawing.Printing.PaperKind.Custom" />に設定し、
          <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />プロパティと
          <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />プロパティを ページのサイズ（ツイップ単位）に設定します。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />が
          <see cref="F:System.Drawing.Printing.PaperKind.Custom" />以外の値に設定されている場合、用紙サイズは その設定によって決定されます。この場合、
          <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />プロパティと
          <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />プロパティは 使用されません。
        </para>
        <para>
          <see cref="P:C1.Win.FlexReport.Layout.PaperSize" />が
          <see cref="F:System.Drawing.Printing.PaperKind.Custom" />に設定され、
          <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />プロパティと
          <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />プロパティが 0 に設定されている場合は、プリンタのデフォルトの用紙サイズが使用されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.Orientation">
      <summary>用紙の方向を取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.OrientationEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PageHeader">
      <summary>どのページにページヘッダーセクションを表示するかを決定する値を取得または設定します。</summary>
      <remarks>
        <para>
          <b>PageHeader</b>プロパティと
          <b>PageFooter</b>プロパティを使用して、レポートのページヘッダーまたは ページフッターをレポートヘッダーまたはレポートフッターと同じページに出力するかどうかを指定します。
        </para>
        <para>たとえば、レポートヘッダーを表紙として表示する場合、レポートの最初のページには、ページ番号が入った ページヘッダーを出力しないようにできます。</para>
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.HdrFtrEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PageFooter">
      <summary>どのページにページフッターセクションを表示するかを決定する値を取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.HdrFtrEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.LabelSpacingX">
      <summary>デザインサーフェスで水平ラベル間隔を無視するためにデザイナによって使用されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.LabelSpacingY">
      <summary>デザインサーフェスで垂直ラベル間隔を無視するためにデザイナによって使用されます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Layout.AssignFrom(C1.Win.FlexReport.Layout)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Layout.Reset">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Layout" />オブジェクトのプロパティをデフォルト値にリセットします。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportInfo">
      <summary>レポートのメタデータを含むクラス。</summary>
      <remarks>
        <para>レポートには、タイトル、作成者、キーワードなどの一般情報を含めることができます。</para>
        <para>（コンテンツや構造とは異なり）このようなドキュメント自体に関するグローバル情報は メタデータと呼ばれ、外部データベースでレポートやレポート定義を カタログ化したり検索するために利用することを目的としています。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.AssignFrom(C1.Win.FlexReport.ReportInfo)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.Clear">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportInfo" />オブジェクトをクリアします。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.Clone">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.ReportInfo" />オブジェクトのコピーを返します。
      </summary>
      <returns>
        この
        <see cref="T:C1.Win.FlexReport.ReportInfo" />オブジェクトのコピー。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.ToString">
      <summary>
        現在の
        <see cref="T:C1.Win.FlexReport.ReportInfo" />オブジェクトを表す文字列を返します。
      </summary>
      <returns>
        現在の
        <see cref="T:C1.Win.FlexReport.ReportInfo" />オブジェクトを表す文字列を返します。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Author">
      <summary>レポートを作成したユーザーの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Title">
      <summary>レポートのタイトルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Subject">
      <summary>レポートのサブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Keywords">
      <summary>レポートに関連付けられたキーワードを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Creator">
      <summary>レポートを作成したアプリケーションの名前を取得または設定します。</summary>
    </member>
    <member name="E:C1.Win.FlexReport.ReportInfo.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportObject">
      <summary>
        名前で指定されたオブジェクトを表します。これは、
        <see cref="T:C1.Win.FlexReport.FieldBase" />、
        <see cref="T:C1.Win.FlexReport.Section" />、
        <see cref="T:C1.Win.FlexReport.SubSection" />、および別のレポートのオブジェクトの基本クラスです。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObject.CreateSame">
      <summary>現在のオブジェクトと同じ型のインスタンスを作成します。</summary>
      <returns>作成されたオブジェクト。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObject.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">オブジェクトの名前をコピーするかどうかを示します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObject.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObject.Tag">
      <summary>呼び出し側のプログラムで必要な追加のデータを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObject.ParentReport">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Section">
      <summary>レポートテーブル領域を表します。</summary>
      <remarks>
        <para>
          各
          <see cref="T:C1.Win.FlexReport.Section" />オブジェクトは、
          <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトのコレクションを保持します。
        </para>
        <para>各レポートには、次のセクションがあります。</para>
        <para>
          <b>詳細</b>セクション。
        </para>
        <para>
          <b>レポートヘッダー</b>セクションと
          <b>レポートフッター</b>セクション。
        </para>
        <para>
          <b>ページヘッダー</b>セクションと
          <b>ページフッター</b>セクション。
        </para>
        <para>
          レポート内の各
          <see cref="T:C1.Win.FlexReport.Group" />オブジェクトに
          <b>グループヘッダー</b>セクションと
          <b>グループフッター</b>セクション。
        </para>
        <para>
          レポート内のセクションの総数は、
          <code>
            <![CDATA[
            5 + 2 * Groups.Count
            ]]>
          </code>になります。セクションを レポートに直接追加したり、レポートから直接削除することはできません。セクションの数は、グループの数の関数になります。
        </para>
        <para>
          セクションは削除できませんが、
          <see cref="P:C1.Win.FlexReport.Section.Visible" />プロパティを false に設定して非表示にすることは できます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Section.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.Section" />から現在のオブジェクトに割り当てます（コピーします）。このメソッドはサブセクションのリストをコピーしますが、フィールドのリストはコピーしません。このメソッドはセクションのタイプはコピーしません。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">名前をコピーするかどうかを示します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Section.ParentReport">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Section" />を含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Name">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />名を取得または設定します。
      </summary>
      <remarks>
        <para>
          セクション名は、コントロールの
          <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" />コレクションへのインデックスとして使用できます。
        </para>
        <para>
          セクション名は、
          <b>VBScript</b>式でフィールドを識別するためにも使用されます。
        </para>
        <para>重複または空のセクション名を使用することもできますが、セクション名をスクリプトで使用したり、インデクサとして使用する場合は 避けてください。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Type">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />のタイプ（PageHeader、Detail など）を返します。
      </summary>
      <seealso cref="T:C1.Win.FlexReport.SectionTypeEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Section.Fields">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Section" />内のすべてのフィールドのコレクションを取得します。
      </summary>
      <remarks>
        <para>
          <b>Fields</b>コレクションには、現在のセクションで定義されているすべての
          <see cref="T:C1.Win.FlexReport.Field" />オブジェクトが含まれます。
        </para>
        <para>
          セクションの
          <b>Fields</b>コレクションにフィールドを追加すると、そのフィールドは、そのコレクションを所有するセクションに 自動的に割り当てられます。たとえば、次のコードは、フィールドを
          <b>Detail</b>セクションに追加します。
        </para>
        <code>
          <![CDATA[
          _c1r.Sections.Detail.Fields.Add("new field", "CompanyLogo", rc);
          ]]>
        </code>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.SubSections">
      <summary>
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトのコレクションを取得します。このコレクションは少なくとも 1 つの要素を含みます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Visible">
      <summary>
        レポート内に
        <see cref="T:C1.Win.FlexReport.Section" />をレンダリングするかどうかを指定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Height">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />の高さをツイップ単位で取得します。セクションの高さはサブセクションの合計高さと同じです。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.AutoHeight">
      <summary>
        コンテンツに基づいて
        <see cref="T:C1.Win.FlexReport.Section" />の高さをどのように変更するかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.CanGrow">
      <summary>セクションの高さが、そのコンテンツに合わせて自動的に大きくなるかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.CanShrink">
      <summary>
        1 つ以上のフィールドが縮小された場合に、
        <see cref="T:C1.Win.FlexReport.Section" />の高さも縮小されるかどうかを指定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.SplitBehavior">
      <summary>セクションが高すぎて現在のページのスペースに垂直方向に収まらない場合に、セクションをどのように処理するかを決定する値を取得または設定します。</summary>
      <seealso cref="!:SplitHorzBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.Section.KeepTogether">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />が 1 ページに収められるかどうかを指定します。
      </summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.FlexReport.Group" />オブジェクトと
          <see cref="T:C1.Win.FlexReport.Field" />オブジェクトにも、
          <b>KeepTogether</b>プロパティがあります。
        </para>
        <para>
          <see cref="T:C1.Win.FlexReport.Group" />オブジェクトの
          <see cref="P:C1.Win.FlexReport.Group.KeepTogether" />プロパティは、複数のセクションにまたがって機能します。このプロパティは、グループヘッダーを最初の詳細セクションと一緒にするか、それともグループ全体を 1 ページに収めるかを指定します。
        </para>
        <para>
          <see cref="T:C1.Win.FlexReport.Field" />オブジェクトの
          <see cref="!:Field.KeepTogether" />プロパティは、フィールドを 1 ページにレンダリングするか、それともページ区切りで分割できるかを決定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.ForcePageBreak">
      <summary>セクションがレンダリングされる前後にページ区切りが挿入されるかどうかを指定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.ForcePageBreakEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Section.Repeat">
      <summary>
        グループヘッダー、グループフッター、レポートフッターの各セクションの場合にのみ、現在のセクションが各ページの先頭または最後に繰り返し表示されるかどうかを 示す値を取得または設定します。デフォルトは
        <b>false</b>です。
      </summary>
      <remarks>
        <para>このプロパティは、グループヘッダーおよびグループフッターセクションにのみ適用されます。</para>
        <para>この値を true に設定すると、各ページの先頭（詳細セクションの前）にグループヘッダーが繰り返し表示されます。</para>
        <para>
          複数のグループがある場合は、
          <b>Repeat</b>プロパティが true に設定されているすべてのグループヘッダーセクションが 各ページの先頭にレンダリングされます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.PrintAtPageBottom">
      <summary>
        マスターレポートのフッターセクションの場合にのみ、現在のセクションが詳細セクションの右下ではなく、ページの最後のページフッターのすぐ上に出力するかどうかを示す値を 取得または設定します。デフォルトは
        <b>false</b>です。
        <para>このプロパティは、フッター以外のセクションまたはサブレポートのフッターでは 無視されます。</para>
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.UseColumnLayout">
      <summary>
        マスターレポートのグループおよび詳細セクションの場合にのみ、現在のセクションが
        <see cref="P:C1.Win.FlexReport.Layout.Columns" />プロパティと
        <see cref="P:C1.Win.FlexReport.Layout.ColumnLayout" />プロパティ によって定義された列のレイアウトを使用するかどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.OnFormat">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />が書式設定される前に実行される
        <b>VBScript</b>コードを含む文字列を取得または設定します。
      </summary>
      <remarks>
        <para>
          このプロパティには、セクション内のフィールドが計算される前に実行される
          <b>VBScript</b>命令が 含まれます。このスクリプトが実行される時点で、レコードセットはセクションに表示されるデータをすでに保持していますが、それらのフィールドの値はまだ更新されていません。
        </para>
        <para>
          このイベントを使用して、計算が行われる前にフィールドに値を割り当てることができます。これにより、
          <see cref="P:C1.Win.FlexReport.Section.CanGrow" />プロパティまたは
          <see cref="P:C1.Win.FlexReport.Section.CanShrink" />プロパティが true に設定されている場合は、コントロールがフィールドのサイズや位置を計算するときに新しい値が考慮されます。
        </para>
        <para>
          フィールドの現在の値に基づいてフィールドのプロパティを設定する場合は、代わりに
          <see cref="P:C1.Win.FlexReport.Section.OnPrint" />プロパティを 使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.OnPrint">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />が（書式設定された後の）出力される前に実行される
        <b>VBScript</b>コードを含む文字列を 取得または設定します。
      </summary>
      <remarks>
        このプロパティには、セクション内のフィールドが計算された後に実行される
        <b>VBScript</b>命令が 含まれます。
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Calculated">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />が計算されて、その
        <see cref="P:C1.Win.FlexReport.Section.RenderHeight" />プロパティが有効な値を含むかどうかを示す値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.RenderHeight">
      <summary>セクションの実際の高さを返します。これは、すべてのサブセクションの合計高さと 同じです。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportObjectCollection`1">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportObject" />オブジェクトのコレクションを表します。
      </summary>
      <typeparam name="TItem">コレクション内の要素の型。</typeparam>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.Contains(`0)">
      <summary>コレクションに特定の項目が含まれるかどうかを判定します。</summary>
      <param name="item">チェックする項目。</param>
      <returns>コレクションに指定された項目が含まれる場合は true。そうでない場合は false。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.Contains(System.String)">
      <summary>このコレクションに、指定された名前の項目が含まれるかどうかを判定します。</summary>
      <param name="name">項目の名前。</param>
      <returns>コレクションに、指定された名前の項目が含まれる場合は true。そうでない場合は false。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.IndexByName(System.String)">
      <summary>要素の名前に基づいてそのインデックスを取得します。</summary>
      <param name="name">要素の名前。</param>
      <returns>指定された名前の要素の 0 から始まるインデックス。または、要素に名前が指定されていない場合は、-1。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.FindByName(System.String)">
      <summary>項目を名前で取得し、名前が存在しない場合は null を返します。</summary>
      <param name="name">項目の名前。</param>
      <returns>指定された名前の項目を返し、そうでない場合は null を返します。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.IndexOf(`0)">
      <summary>要素のインデックスを取得します。</summary>
      <param name="item">要素。</param>
      <returns>要素の 0 から始まるインデックス。または、要素がコレクション内に存在しない場合は、-1。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.Move(System.Int32,System.Int32)">
      <summary>
        <paramref name="index" />のインデックスを持つ項目を
        <paramref name="newIndex" />で指定された新しい位置に移動します。
      </summary>
      <param name="index">現在のインデックス。</param>
      <param name="newIndex">新しいインデックス。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Item(System.Int32)">
      <summary>指定されたインデックスにある要素を取得します。</summary>
      <param name="index">取得する要素の 0 から始まるインデックス。</param>
      <returns>指定されたインデックスにある要素。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Item(System.String)">
      <summary>指定された名前の要素を取得します。</summary>
      <param name="name">取得する要素の名前。</param>
      <returns>指定された名前の要素。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Count">
      <summary>コレクションに含まれる要素数を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.StrongNamedReportObject">
      <summary>
        厳密な名前で指定されたオブジェクトを表します。これは、
        <see cref="T:C1.Win.FlexReport.DataSource" />、
        <see cref="T:C1.Win.FlexReport.ReportParameter" />の基本クラスです。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportObjectNamedList`1">
      <summary>レポートオブジェクトの厳密名のリストを表します。</summary>
      <typeparam name="TItem">コレクション内の要素の型。</typeparam>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLabeledValue">
      <summary>ラベル付きの値を表します。これは、関連ラベルが付いた値を含み、ラベルと値の両方を定数または式で指定できます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLabeledValue.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLabeledValue.#ctor(System.Object,System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="value">
        <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />の定数値。
      </param>
      <param name="label">
        <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />の定数ラベル。
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLabeledValue.AssignFrom(C1.Win.FlexReport.ReportLabeledValue)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Owner">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.ReportLabeledValues" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Parameter">
      <summary>
        このオブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.ReportParameter" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.ParentReport">
      <summary>
        このオブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Value">
      <summary>値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Label">
      <summary>値のラベルを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLabeledValues">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValues.Owner">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValues.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.BoundLabeledValues">
      <summary>
        ラベル付き値の動的リストを表します。値の数は、リンクされた
        <see cref="P:C1.Win.FlexReport.BoundLabeledValues.DataSource" />内のレコードの数、実際の値の計算に使用される
        <see cref="P:C1.Win.FlexReport.BoundLabeledValues.ValueExpression" />、および値のラベルの計算に使用される
        <see cref="P:C1.Win.FlexReport.BoundLabeledValues.LabelExpression" />によって決まります。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BoundLabeledValues.AssignFrom(C1.Win.FlexReport.BoundLabeledValues)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.BoundLabeledValues" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.Owner">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.BoundLabeledValues" />オブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.Parameter">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.BoundLabeledValues" />オブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.ReportParameter" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.ParentReport">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.BoundLabeledValues" />オブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.DataSource">
      <summary>
        値のリストを作成するために使用される
        <see cref="P:C1.Win.FlexReport.BoundLabeledValues.DataSource" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.DataSourceName">
      <summary>
        値のリストを作成するために使用される
        <see cref="P:C1.Win.FlexReport.BoundLabeledValues.DataSource" />の名前を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.ValueExpression">
      <summary>値を計算するために使用される式を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.LabelExpression">
      <summary>値のラベルを計算するために使用される式を取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.AllowedValuesDefinition">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />パラメータの許容値のリストを作成する方法を定義します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.AllowedValuesDefinition.AssignFrom(C1.Win.FlexReport.AllowedValuesDefinition)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Owner">
      <summary>
        このオブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.ReportParameter" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Binding">
      <summary>
        データソース連結に基づいてレポートパラメータの許容値のリストを定義する
        <see cref="T:C1.Win.FlexReport.BoundLabeledValues" />を取得します。
        <see cref="P:C1.Win.FlexReport.AllowedValuesDefinition.Values" />コレクションが空でない場合、このプロパティは 無視されます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Values">
      <summary>
        レポートパラメータの許容値のリストを定義する
        <see cref="T:C1.Win.FlexReport.ReportLabeledValues" />コレクションを取得します。このコレクションが項目を含む場合、
        <see cref="P:C1.Win.FlexReport.AllowedValuesDefinition.Binding" />プロパティは無視されます。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportParameter">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内の 1 つのパラメータを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportParameter.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportParameter" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportParameter.AssignFrom(System.Object)">
      <summary>プロパティを別のオブジェクトから現在のオブジェクトに割り当てます（コピーします）。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameter.ParentReport">
      <summary>
        このパラメータを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameter.AllowedValuesDefinition">
      <summary>
        このパラメータの許容値のリストを定義する
        <see cref="P:C1.Win.FlexReport.ReportParameter.AllowedValuesDefinition" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameter.DisplayText">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportParameter" />値に対応するユーザーフレンドリなテキストを取得します。このプロパティは、レポートのレンダリング中にのみ意味のある値を持ちます。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportParameterCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportParameter" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptValue`1">
      <summary>
        リテラルまたは式のいずれかで値を指定できる
        <see cref="T:C1.Win.FlexReport.ScriptStringValue" />、
        <see cref="!:ScriptIntValue" />などの型の抽象基本クラス。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptValue`1.AssignFrom(C1.Win.FlexReport.ScriptValue{`0})">
      <summary>
        プロパティを別の
        <see cref="!:ScriptValue" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ScriptValue`1.IsExpression">
      <summary>
        現在の
        <see cref="!:ScriptValue" />が式で指定されているかどうかを示す値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ScriptValue`1.Expression">
      <summary>
        この
        <see cref="!:ScriptValue" />の値を計算するために使用される式を取得または設定します。この値を設定すると、
        <see cref="P:C1.Win.FlexReport.ScriptValue`1.IsExpression" />が true に設定されます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ScriptValue`1.Value">
      <summary>
        この
        <see cref="!:ScriptValue" />の値を取得または設定します。この値を設定すると、
        <see cref="P:C1.Win.FlexReport.ScriptValue`1.IsExpression" />が false に設定されます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptValue`1.op_Implicit(C1.Win.FlexReport.ScriptValue{`0})~System.String">
      <summary>
        <see cref="!:ScriptValue" />オブジェクトを文字列に変換します。
      </summary>
      <param name="value">変換するオブジェクト。</param>
      <returns>オブジェクトを表す文字列。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptStringValue">
      <summary>定数または式で指定できる文字列を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptStringValue.op_Implicit(System.String)~C1.Win.FlexReport.ScriptStringValue">
      <summary>
        文字列を
        <see cref="T:C1.Win.FlexReport.ScriptStringValue" />に変換します。
      </summary>
      <param name="value">変換する文字列。</param>
      <returns>ScriptStringValue オブジェクト。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptObjectValue">
      <summary>定数または式で指定できるオブジェクト値を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptObjectValue.op_Implicit(System.String)~C1.Win.FlexReport.ScriptObjectValue">
      <summary>
        文字列を
        <see cref="T:C1.Win.FlexReport.ScriptObjectValue" />に変換します。
      </summary>
      <param name="value">変換する文字列。</param>
      <returns>ScriptObjectValue オブジェクト。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptEnumValue`1">
      <summary>定数または式で指定できる列挙値を表します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SectionTypeEnum">
      <summary>
        セクションのタイプを指定します。これは、コントロールの
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" />コレクションに含まれる
        <see cref="T:C1.Win.FlexReport.Section" />オブジェクトのインデックスと同じです。
      </summary>
      <remarks>
        この列挙型のメンバを使用して、
        <see cref="!:Field.Section" />プロパティと
        <see cref="P:C1.Win.FlexReport.Section.Type" />プロパティの値を設定します。
      </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Undefined">
      <summary>未定義。この設定は、フィールドがどのセクションにも属さず、レンダリングされないことを示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Detail">
      <summary>詳細セクション：メインデータソース内の各レコードごとに繰り返し表示されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Header">
      <summary>レポートヘッダーセクション：レポートの最初に 1 回表示されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Footer">
      <summary>レポートフッターセクション：レポートの最後に 1 回表示されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.PageHeader">
      <summary>
        ページヘッダーセクション：
        <see cref="P:C1.Win.FlexReport.Layout.PageHeader" />プロパティの設定に従って、各ページの上部に表示されます。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.PageFooter">
      <summary>
        ページフッターセクション：
        <see cref="P:C1.Win.FlexReport.Layout.PageFooter" />プロパティの設定に従って、各ページの下部に表示されます。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader1">
      <summary>レベル 1 グループの前に表示されるグループヘッダーセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter1">
      <summary>レベル 1 グループの後に表示されるグループフッターセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader2">
      <summary>レベル 2 グループの前に表示されるグループヘッダーセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter2">
      <summary>レベル 2 グループの後に表示されるグループフッターセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader3">
      <summary>レベル 3 グループの前に表示されるグループヘッダーセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter3">
      <summary>レベル 3 グループの後に表示されるグループフッターセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader4">
      <summary>レベル 4 グループの前に表示されるグループヘッダーセクション。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter4">
      <summary>レベル 4 グループの後に表示されるグループフッターセクション。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SectionCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SectionCollection.FindSection(C1.Win.FlexReport.SectionTypeEnum)">
      <summary>
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" />コレクションから
        <see cref="P:C1.Win.FlexReport.Section.Type" />に基づいてセクションを取得します。セクションが存在しない場合は null を返します。
      </summary>
      <param name="sectionType"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Item(C1.Win.FlexReport.SectionTypeEnum)">
      <summary>
        <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" />コレクションから
        <see cref="P:C1.Win.FlexReport.Section.Type" />に基づいてセクションを取得します。指定された
        <see cref="P:C1.Win.FlexReport.Section.Type" />のセクションが存在しない場合は、例外が生成されます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Detail">
      <summary>レポートの詳細セクションへの参照を返します。</summary>
      <remarks>このプロパティは、this[SectionTypeEnum.Detail] と同じです。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Header">
      <summary>レポートヘッダーセクションへの参照を返します。</summary>
      <remarks>このプロパティは、this[SectionTypeEnum.Header] と同じです。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Footer">
      <summary>レポートフッターセクションへの参照を返します。</summary>
      <remarks>このプロパティは、this[SectionTypeEnum.Footer] と同じです。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.PageHeader">
      <summary>レポートのページヘッダーセクションへの参照を返します。</summary>
      <remarks>このプロパティは、this[SectionTypeEnum.PageHeader] と同じです。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.PageFooter">
      <summary>レポートのページフッターセクションへの参照を返します。</summary>
      <remarks>このプロパティは、this[SectionTypeEnum.PageFooter] と同じです。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.SubSection">
      <summary>
        <see cref="T:C1.Win.FlexReport.Section" />の一部を表します。各
        <see cref="T:C1.Win.FlexReport.Section" />は、少なくとも 1 つの
        <see cref="T:C1.Win.FlexReport.SubSection" />を含みます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubSection.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.SubSection" />から現在のオブジェクトに割り当てます（コピーします）。このメソッドは、コピー元の SubSection に属するフィールドをコピーしません。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">名前が割り当てられるかどうかを示します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.SplitBehavior">
      <summary>サブセクションが高すぎて現在のページのスペースに垂直方向に収まらない場合に、サブセクションをどのように処理するかを決定する値を取得または設定します。</summary>
      <seealso cref="!:SplitHorzBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.ForcePageBreak">
      <summary>サブセクションがレンダリングされる前後にページ区切りが挿入されるかどうかを指定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.ForcePageBreakEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Fields">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.SubSection" />内のすべてのフィールドのコレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Index">
      <summary>
        <see cref="P:C1.Win.FlexReport.Section.SubSections" />コレクション内の
        <see cref="T:C1.Win.FlexReport.SubSection" />のインデックスを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.ParentSection">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトを所有する
        <see cref="T:C1.Win.FlexReport.Section" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Height">
      <summary>
        <see cref="T:C1.Win.FlexReport.SubSection" />の高さ（ツイップ単位）を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Visible">
      <summary>
        レポート内に
        <see cref="T:C1.Win.FlexReport.SubSection" />をレンダリングするかどうかを指定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.AutoHeight">
      <summary>
        コンテンツに基づいて
        <see cref="T:C1.Win.FlexReport.SubSection" />の高さをどのように変更するかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.PrintAtPageBottom">
      <summary>
        マスターレポートのサブセクションの場合にのみ、現在のサブセクションが詳細セクションの右下ではなく、ページの最後のページフッターのすぐ上に出力するかどうかを示す値を 取得または設定します。デフォルトは
        <b>false</b>です。
        <para>このプロパティは、フッター以外のセクションまたはサブレポートのフッターでは 無視されます。</para>
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Calculated">
      <summary>
        <see cref="T:C1.Win.FlexReport.SubSection" />が計算されて、その
        <see cref="P:C1.Win.FlexReport.SubSection.RenderHeight" />プロパティが有効な値を含むかどうかを示す値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.RenderHeight">
      <summary>
        <see cref="P:C1.Win.FlexReport.SubSection.AutoHeight" />プロパティがセクションに適用された後に サブセクションの高さを返します。
        <see cref="P:C1.Win.FlexReport.SubSection.RenderHeight" />プロパティは、セクションの高さがまだ計算されていない場合は例外を生成します。これは、たとえば、レポートヘッダーのレンダリング中にレポートフッターの RenderHeight にアクセスした場合です。
      </summary>
      <remarks>
        <para>
          サブセクションが拡大または縮小しても、サブセクションの
          <see cref="P:C1.Win.FlexReport.SubSection.Height" />プロパティは変更されません。
        </para>
        <para>
          （たとえば、
          <see cref="!:OnPrint" />イベントの処理中に）セクションのレンダリングに使用される実際の高さを取得する必要がある場合は、代わりに
          <see cref="P:C1.Win.FlexReport.SubSection.RenderHeight" />プロパティを 使用します。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.SubSectionCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubSectionCollection.Add">
      <summary>
        コレクションに
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトを追加します。
      </summary>
      <returns>
        追加された
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトを返します。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.SubSectionCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスの項目をコレクションから削除します。</summary>
      <param name="index">削除する項目のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.SubSectionCollection.Remove(C1.Win.FlexReport.SubSection)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクトを削除します。
      </summary>
      <param name="item">
        削除する
        <see cref="T:C1.Win.FlexReport.SubSection" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportNamedCollection`1">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />に変更を通知する
        <see cref="T:C1.Win.C1Document.NamedCollection`1" />を表します。
      </summary>
      <typeparam name="TItem">コレクション項目の型。</typeparam>
    </member>
    <member name="P:C1.Win.FlexReport.ReportNamedCollection`1.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportOwnedCollection`1">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />に変更を通知する
        <see cref="T:C1.Win.C1Document.OwnedCollection`1" />を表します。
      </summary>
      <typeparam name="TItem">コレクション項目の型。</typeparam>
    </member>
    <member name="P:C1.Win.FlexReport.ReportOwnedCollection`1.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DbUtils">
      <summary>内部使用。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FontHolder">
      <summary>
        プラットフォームに依存しない Font オブジェクトを表します。WinForms で
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクトをカプセル化し、フォントのプロパティへの取得／設定アクセスを提供します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.OnPropertyChanged(System.String)">
      <summary>
        <see cref="E:C1.Win.FlexReport.FontHolder.PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されるプロパティの名前。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.Clone">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.FontHolder" />オブジェクトのクローンを作成します。
      </summary>
      <returns>このオブジェクトのクローン。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.ToString">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.FontHolder" />を表す文字列を取得します。
      </summary>
      <returns>
        この
        <see cref="T:C1.Win.FlexReport.FontHolder" />を表す文字列を返します。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Font">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Name">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクトの名前を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Size">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクトの
        <see cref="P:System.Drawing.Font.Size" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Bold">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />が太字かどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Italic">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />が斜体かどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Underline">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />が下線付きかどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Strikethrough">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />が取り消し線（テキスト上の中央に引かれた横線）付きかどうかを示す値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.GdiCharSet">
      <summary>
        カプセル化された
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />によって使用される GDI 文字セットを取得または設定します。
      </summary>
    </member>
    <member name="E:C1.Win.FlexReport.FontHolder.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.op_Implicit(C1.Win.FlexReport.FontHolder)~System.Drawing.Font">
      <summary>
        <see cref="T:C1.Win.FlexReport.FontHolder" />オブジェクトを
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクトに変換します。
      </summary>
      <param name="fontHolder">
        <see cref="T:C1.Win.FlexReport.FontHolder" />オブジェクト。
      </param>
      <returns>
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.op_Implicit(System.Drawing.Font)~C1.Win.FlexReport.FontHolder">
      <summary>
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクトを
        <see cref="T:C1.Win.FlexReport.FontHolder" />オブジェクトに変換します。
      </summary>
      <param name="font">
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />オブジェクト。
      </param>
      <returns>
        提供されたフォントオブジェクトと等しい
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" />プロパティを保持する新しい
        <see cref="T:C1.Win.FlexReport.FontHolder" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.PictureHolderType">
      <summary>
        内部使用。
        <see cref="P:C1.Win.FlexReport.PictureHolder.Type" />プロパティの可能な値を定義します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.ToString">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.PictureHolder" />を表す文字列を取得します。
      </summary>
      <returns>
        この
        <see cref="T:C1.Win.FlexReport.PictureHolder" />を表す文字列を返します。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.PictureHolder.Image">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.PictureHolder" />によってロードされる
        <see cref="P:C1.Win.FlexReport.PictureHolder.Image" />を取得します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromObject(System.Object,System.String)">
      <summary>
        指定されたオブジェクトから
        <see cref="T:C1.Win.FlexReport.PictureHolder" />の新しいインスタンスを作成します。次のオブジェクトを指定できます。
        <list type="bullet">
          <item>
            <term>null 値</term>
            <description>
              空の
              <see cref="T:C1.Win.FlexReport.PictureHolder" />が作成されます。
            </description>
          </item>
          <item>
            <term>文字列</term>
            <description>文字列は、1 つの式、ファイル、または URL を表します。</description>
          </item>
          <item>
            <term>
              <see cref="P:C1.Win.FlexReport.PictureHolder.Image" />オブジェクト。
            </term>
          </item>
          <item>
            <term>
              <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクト。
            </term>
          </item>
          <item>
            <term>バイト配列。</term>
            <description>配列には画像データが含まれる必要があります。</description>
          </item>
        </list>
      </summary>
      <param name="value">
        作成された
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクトにデータを提供する値。
      </param>
      <param name="path">
        <paramref name="value" />で相対的なファイル名を指定するときに使用されるルートパス。
      </param>
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクトの新しいインスタンス。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromExpression(System.String)">
      <summary>
        スクリプト式に基づいて
        <see cref="T:C1.Win.FlexReport.PictureHolder" />の新しいインスタンスを作成します。
      </summary>
      <param name="expression">スクリプト式を持つ文字列。</param>
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.op_Implicit(C1.Win.FlexReport.PictureHolder)~System.Drawing.Image">
      <summary>
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクトを
        <see cref="P:C1.Win.FlexReport.PictureHolder.Image" />オブジェクトに変換します。
      </summary>
      <param name="picHolder">
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクト。
      </param>
      <returns>
        <see cref="P:C1.Win.FlexReport.PictureHolder.Image" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.StringParser">
      <summary>内部使用。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.ContainsIdent(System.String,System.String)">
      <summary>
        指定された識別子が文字列に存在するかどうかをチェックします。メソッドは
        <see cref="F:C1.Win.FlexReport.StringParser.Params.DefaultIgnoreCase" />を使用します。
      </summary>
      <param name="s">チェックする文字列。</param>
      <param name="ident">チェックする識別子。</param>
      <returns>
        識別子が使用されている場合は
        <b>true</b>を返し、そうでない場合は
        <b>false</b>を返します。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.IndexOfIndent(System.String,System.String,C1.Win.FlexReport.StringParser.Params)">
      <summary>文字列内の識別子のインデックスを返します。識別子は引用符内に置くこともでき、'_' または文字で始まり、'_'、文字、数字のみが含まれる必要があります。</summary>
      <param name="s"></param>
      <param name="ident"></param>
      <param name="prms"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.ReplaceIdent(System.String,System.String,System.String,C1.Win.FlexReport.StringParser.Params)">
      <summary>識別子を、指定された文字列に置換します。引用符内にあるテキストはすべて無視されます。引用符を定義する文字は、prms.Quotes 配列で指定されます。引用符内にある識別子も置換する場合は、これを null に設定します。</summary>
      <param name="s"></param>
      <param name="ident"></param>
      <param name="newStr"></param>
      <param name="prms"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.Bracket(System.String)">
      <summary>内部使用。</summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.IsBracket(System.String)">
      <summary>内部使用。</summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.Unbracket(System.String)">
      <summary>内部使用。</summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.BracketSqlObject(System.String)">
      <summary>内部使用。</summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.FlexReport.WatermarkVisibility">
      <summary>ウォーターマークまたはオーバーレイが表示される場所を指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.Hidden">
      <summary>ウォーターマークまたはオーバーレイを表示しません。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.AllPages">
      <summary>すべてのページにウォーターマークまたはオーバーレイを表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.FirstPage">
      <summary>最初のページにのみウォーターマークまたはオーバーレイを表示します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.AllButFirstPage">
      <summary>最初のページ以外のすべてのページにウォーターマークまたはオーバーレイを表示します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Watermark">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />内のウォーターマークまたはオーバーレイを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Watermark.AssignFrom(C1.Win.FlexReport.Watermark)">
      <summary>別のオブジェクトからこのオブジェクトにプロパティをコピーします。</summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Watermark.Reset">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Watermark" />オブジェクトのすべてのプロパティをデフォルト値にリセットします。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Visibility">
      <summary>ウォーターマークが表示される場所を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Picture">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Watermark" />の表示に使用されるピクチャを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.PictureAlign">
      <summary>ウォーターマークのピクチャが配置される方法を取得または設定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.Watermark.Picture" />
      <seealso cref="P:C1.Win.FlexReport.Watermark.PictureScale" />
      <seealso cref="T:C1.Win.FlexReport.PictureAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.PictureScale">
      <summary>ウォーターマークの画像がページ領域に合わせて拡大縮小される方法を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SortDefinition">
      <summary>ソートパラメータを定義します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.SortDefinition.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.SortDefinition" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SortDefinition.#ctor(System.String,C1.Win.FlexReport.SortDirection)">
      <summary>
        <see cref="T:C1.Win.FlexReport.SortDefinition" />クラスの新しいインスタンスを初期化し、ソート式とソート方向を指定します。
      </summary>
      <param name="expression">ソート式を持つ文字列。</param>
      <param name="direction">ソート方向。</param>
    </member>
    <member name="M:C1.Win.FlexReport.SortDefinition.AssignFrom(C1.Win.FlexReport.SortDefinition)">
      <summary>
        別の
        <see cref="T:C1.Win.FlexReport.SortDefinition" />オブジェクトから
        <see cref="P:C1.Win.FlexReport.SortDefinition.Expression" />プロパティと
        <see cref="P:C1.Win.FlexReport.SortDefinition.Direction" />プロパティをコピーします。(
        <see cref="!:IOwnedCollectionItem.Owner" />プロパティはコピーされないことに注意してください。)
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.ParentReport">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.Owner">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.SortDefinitionCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.Expression">
      <summary>ソート式を定義する文字列を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.Direction">
      <summary>ソート方向を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.SortDefinitionCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.SortDefinition" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinitionCollection.Owner">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.DataSource" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinitionCollection.Report">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetPageImage(System.Int32,System.Drawing.Graphics)">
      <summary>
        指定されたページを表す
        <see cref="T:System.Drawing.Imaging.Metafile" />を返します。
      </summary>
      <param name="pageIndex">ページのインデックス。</param>
      <param name="referenceGraphics">メタファイルのデバイスコンテキストを取得するために使用される参照グラフィック。</param>
      <returns>
        指定されたページを表す
        <see cref="T:System.Drawing.Imaging.Metafile" />。ページが存在しない場合は
        <b>null</b>。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetPageImage(System.Int32)">
      <summary>
        指定されたページを表す
        <see cref="T:System.Drawing.Imaging.Metafile" />を返します。
      </summary>
      <param name="pageIndex">ページのインデックス。</param>
      <returns>
        指定されたページを表す
        <see cref="T:System.Drawing.Imaging.Metafile" />。ページが存在しない場合は
        <b>null</b>。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.DataLinkBase.DefaultReplaceParameters(C1.Win.FlexReport.DataLinkParams,System.String)">
      <summary>文字列内のパラメータの名前を値に置き換えるために 使用されるデフォルトのメソッド。</summary>
      <param name="dlp"></param>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.FlexReport.ParameterPassingMode">
      <summary>パラメータをデータソースに渡すモードを指定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ParameterPassingMode.Default">
      <summary>パラメータは、データソースによって決められた標準的な方法で渡されます。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.ParameterPassingMode.Literal">
      <summary>パラメータは、指定されたとおりにリテラルでデータソースに渡されます。値を引用符で囲む必要がある場合は、パラメータ値に引用符を入れる必要があります。このモードは、非標準データソースの処理を目的に設計されています。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.ParameterPassingMode">
      <summary>パラメータ値をデータエンジンにどのように渡すかを示す値を取得または設定します。</summary>
      <seealso cref="P:C1.Win.FlexReport.DataSource.EncloseParameterValues" />
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.SortDefinitions">
      <summary>
        データソースのソートを定義する
        <see cref="T:C1.Win.FlexReport.SortDefinitionCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.Both">
      <summary>グループ値を数値とパーセンテージで表示します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Empty">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" />が空かどうかを示す値を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.BehaviorOptions">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />の互換性オプションを指定します。このクラスのプロパティを使用して、旧バージョンや
        <b>C1Report</b>との互換性を制御できます。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.BehaviorOptions">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />の互換性オプションを指定します。このクラスのプロパティを使用して、旧バージョンや
        <b>C1Report</b>との互換性を制御できます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BehaviorOptions.Reset">
      <summary>すべてのプロパティをそれぞれのデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.BehaviorOptions.AssignFrom(C1.Win.FlexReport.BehaviorOptions)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.BehaviorOptions" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.AllowHorizontalSplitting">
      <summary>レポートコンテンツの幅が広すぎてページの水平方向のスペースに入らない場合に、レポートコンテンツが分割可能かどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.UseDefaultPrinterPaperSize">
      <summary>
        <see cref="!:Layout.PaperKind" />が
        <b>Custom</b>で、
        <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" />および
        <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />の両方が
        <b>0</b>（未指定）のときに、デフォルトのプリンタの用紙サイズを使用するかどうかを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.IgnoreInvisibleFieldsInGrowShrinkSections">
      <summary>CanGrow/CanShrink セクションの高さを計算するとき、非表示のフィールドを無視するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CustomImage">
      <summary>CheckedImage プロパティ、UncheckedImage プロパティ、および IndeterminateImage プロパティで指定されたカスタム画像を使用して、チェックマークが描画されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.RightToLeft">
      <summary>
        レポートにおける右から左への記述に関するデフォルト値を取得または設定します。デフォルトでは、この値は
        <b>null</b>であり、静的プロパティ
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultRightToLeft" />の値が 使用されることを示します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ActualRightToLeft">
      <summary>
        以下のルールを使用して、実際の右から左への記述に関する値を取得します。1)
        <see cref="P:C1.Win.FlexReport.C1FlexReport.RightToLeft" />が null でない場合は、その値が使用されます。2) 現在レンダリングされているレポートの場合は、所有するサブレポートフィールドの
        <see cref="P:C1.Win.FlexReport.C1FlexReport.ActualRightToLeft" />が使用されます。3) 静的プロパティ
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultRightToLeft" />の使用された値。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.AvailableHeight">
      <summary>
        現在のページでセクションに使用できる残りの領域の高さを取得します。このプロパティは、ページ区切り付きモードでレポートをレンダリングしている場合（つまり、
        <see cref="!:IsBusy" />および
        <see cref="!:Paginated" />が true の場合）にのみ使用できます。
        <see cref="!:IsBusy" />が true の場合は -1 が返され、
        <see cref="!:Paginated" />が false の場合は double.MaxValue が返されます。OnPrint/OnFormat スクリプトで使用すると、この値は、まだ現在のセクションを考慮しないことに注意してください。サブレポートでは、このプロパティは、マスターレポートの
        <see cref="P:C1.Win.FlexReport.C1FlexReport.AvailableHeight" />を返します。
      </summary>
      <remarks>
        ここに示すコード例は、詳細セクションの OnFormat スクリプトで使用することにより、現在の詳細セクションがページ上に印刷される最後のものかどうかを判断することができます（テストでは、現在のセクションがページに収まり、次のセクションは収まらないことを確認します）。
        <code>
          <![CDATA[
          h = Detail.RenderHeight
          ah = Report.AvailableHeight
          if (h &lt; ah) and (2 * h &gt; ah) then
            Detail.BackColor = RGB(255, 0, 0) ' 最後のページ
          else
            Detail.BackColor = RGB(255, 255, 255)
          endif
          ]]>
        </code>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.BehaviorOptions">
      <summary>
        前バージョンの C1Report との互換性を向上させる
        <see cref="P:C1.Win.FlexReport.C1FlexReport.BehaviorOptions" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DefaultRightToLeft">
      <summary>右から左への記述に関するデフォルト値を取得します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CrystalReports10">
      <summary>Crystal Reports バージョン 10 のチャートオブジェクト用パレットに近い色を使用します。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CrystalReports14">
      <summary>Crystal Reports バージョン 14 のチャートオブジェクト用パレットに近い色を使用します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RightToLeft">
      <summary>
        フィールドの要素が、右から左に表記されるフォントを使用するロケールをサポートするように配置されているかどうかを示す値を取得または設定します。デフォルトでは、このプロパティは
        <b>null</b>であり、
        <see cref="P:C1.Win.FlexReport.C1FlexReport.RightToLeft" />が使用されることを意味しています。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ActualRightToLeft">
      <summary>
        フィールドに対して右から左への値が指定されていない場合（
        <see cref="P:C1.Win.FlexReport.FieldBase.RightToLeft" />が null）、その値を取得して
        <see cref="P:C1.Win.FlexReport.C1FlexReport.RightToLeft" />を返します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.BasePath">
      <summary>
        相対パス名で指定された追加ファイルの検索に使用されたディレクトリを取得または設定します。このプロパティは、ファイルからレポートがロードされるときに自動的に更新されます。
        <see cref="T:System.IO.MemoryStream" />からレポート定義をロードする場合、または
        <see cref="P:C1.Win.FlexReport.C1FlexReport.ReportDefinition" />プロパティを使用する場合は、相対ファイル名を持つ項目を含むレポートテンプレートに対しては、WorkingDirectory が 正しい値を持つことを確認してください。このプロパティが null の場合は、
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" />が使用されます。そうでない場合は、
        <see cref="!:Enviroment.CurrentDirectory" />が使用されます。
      </summary>
      <seealso cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" />
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath">
      <summary>
        ファイル名が相対名として指定される場合に、ファイル名の解決に使用される デフォルトのディレクトリを取得または設定します。このプロパティのデフォルトは null です。この場合は、
        <see cref="!:Enviroment.CurrentDirectory" />が使用されます。
      </summary>
      <seealso cref="P:C1.Win.FlexReport.C1FlexReport.BasePath" />
    </member>
    <member name="T:C1.Win.FlexReport.SQLiteLink">
      <summary>内部使用。</summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.SQLite">
      <summary>SQLite データソースを指定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureHolder">
      <summary>内部使用。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromFile(System.String,System.String)">
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromUrl(System.String,System.String)">
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.ResourceNameParser">
      <summary>内部使用。ファイル名または URL で指定されたリソースを同じように操作できるようにするヘルパークラス。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ResourceNameParser.Open(System.String,System.String)">
      <summary>
        内部使用。指定された
        <paramref name="location" />文字列をファイル名または URL として解析することを試み、そのストリームを開きます。
        <paramref name="location" />は相対パスでも絶対パスでもかまいません。相対パスの場合は、以下の順に基本パスを使用して絶対パスが計算されます。-)
        <paramref name="basePath" />-)
        <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" />-)
        <see cref="!:Enviroment.CurrentDirectory" />返された
        <see cref="T:C1.Win.FlexReport.ResourceNameParser" />オブジェクトは、使用後に破棄する必要があります。ロケーションを解析できない場合、結果は null になります。
      </summary>
      <param name="location"></param>
      <param name="basePath"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.FlexReport.ResourceNameParser.Stream">
      <summary>
        リソースのデータが含まれる
        <see cref="P:C1.Win.FlexReport.ResourceNameParser.Stream" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FileNameParser">
      <summary>内部使用。文字列をファイル名として解析するために使用されるヘルパークラス。ファイル名には相対名または絶対名を使用できます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FileNameParser.ReplaceSpecialFolderTags(System.String,System.String)">
      <summary>内部使用。渡された文字列内の特別なタグを置換します。タグは、?(specialfolder.SpecialFolderEnumMember) のように指定されます。たとえば、次の入力は ?(specialfolder.MyDocuments)\myfile.bmp 次のように変換されます。c:\Users\UserName\Documents\myfile.bmp</summary>
      <param name="input"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.FileNameParser.Open(System.String,System.String,System.Boolean)">
      <summary>
        内部使用。
        <paramref name="location" />を相対または絶対ファイル名として解釈することを試みます。相対ファイル名は、
        <see cref="M:C1.Win.FlexReport.ResourceNameParser.Open(System.String,System.String)" />メソッドと同じように解決されます。
      </summary>
      <param name="fileName"></param>
      <param name="path"></param>
      <param name="openStream">
        <paramref name="location" />によって指定されたファイルを開くかどうかを示します。デフォルトでは true です。
      </param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.FlexReport.UrlParser">
      <summary>内部使用。文字列を URL として解析するために使用されるヘルパークラス。ファイル名には相対名または絶対名を使用できます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.UrlParser.Open(System.String,System.String)">
      <summary>
        内部使用。
        <paramref name="location" />を相対または絶対 URL として解釈することを試みます。相対 URL は、
        <see cref="M:C1.Win.FlexReport.ResourceNameParser.Open(System.String,System.String)" />メソッドと同じように解決されます。
      </summary>
      <param name="location"></param>
      <param name="basePath"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Image">
      <summary>ラベルの画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Image">
      <summary>タイトル画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataHandler.Empty">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.DataHandler" />によって管理されるデータセットにレコードがないかどうかを示します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.SubreportHasData">
      <summary>サブレポートにデータがあるかどうかを返し、データがない場合はレンダリングを抑止します。</summary>
      <remarks>このプロパティを使用すると、サブレポートにデータがあるかどうかをチェックし、データがない場合はレンダリングを抑止できます。</remarks>
      <example>
        次のコードは、空のサブレポートを含むセクションを非表示にするスクリプトです。
        <code>
          <![CDATA[
          rep.Sections.Detail.OnFormat = "Detail.Visible = fSubreport.SubreportHasData"
          ]]>
        </code>次のコードは、空のサブレポートを含むフィールドを非表示にし、代わりに別のフィールドを表示するスクリプトです。
        <code>
          <![CDATA[
          rep.Sections.Detail.OnFormat = 
            "hasData = fSubreport.SubreportHasData\r\n" + 
            "fSubreport.Visible = hasData\r\n" + 
            "fNoData.Visible = Not hasData"
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.SubreportHasData">
      <summary>サブレポートにデータがあるかどうかを返し、データがない場合はレンダリングを抑止します。</summary>
      <remarks>このプロパティを使用すると、サブレポートにデータがあるかどうかをチェックし、データがない場合はレンダリングを抑止できます。</remarks>
      <example>
        次のコードは、空のサブレポートを含むセクションを非表示にするスクリプトです。
        <code>
          <![CDATA[
          rep.Sections.Detail.OnFormat = "Detail.Visible = fSubreport.SubreportHasData"
          ]]>
        </code>次のコードは、空のサブレポートを含むフィールドを非表示にし、代わりに別のフィールドを表示するスクリプトです。
        <code>
          <![CDATA[
          rep.Sections.Detail.OnFormat = 
            "hasData = fSubreport.SubreportHasData\r\n" + 
            "fSubreport.Visible = hasData\r\n" + 
            "fNoData.Visible = Not hasData"
          ]]>
        </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.UnboundData">
      <summary>非連結データセットを取得します。</summary>
      <remarks>このプロパティが設定されている場合、チャートには非連結ポイントだけが表示されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DUnboundData">
      <summary>3D チャートの非連結データを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DUnboundData.#ctor(C1.Win.FlexReport.Chart.Chart3DData)">
      <summary>Chart3DUnboundData オブジェクトの新しいインスタンスを作成します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DUnboundData.GridSet">
      <summary>GridData または IrGridData レイアウトのデータセットを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DUnboundData.PointSet">
      <summary>PointData レイアウトのデータセットを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataSetGrid">
      <summary>グリッドデータレイアウトまたは非標準グリッドデータレイアウトのデータを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.#ctor(C1.Win.FlexReport.Chart.Chart3DUnboundData)">
      <summary>Chart3DDataSetGrid オブジェクトの新しいインスタンスを初期化します。</summary>
      <param name="parent">このオブジェクトの親。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.GridData">
      <summary>Z 値の 2 次元配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.RowCount">
      <summary>グリッドのデータセット内の行数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.ColumnCount">
      <summary>グリッドのデータセット内の列数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.Item(System.Int32,System.Int32)">
      <summary>指定された行および列に基づいて、データの z 値を取得または設定します。</summary>
      <param name="column">列インデックス。</param>
      <param name="row">行インデックス。</param>
      <returns>指定された行と列の位置にある z 値。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.GetChartGroup">
      <summary>内部使用専用。このデータセットを含むチャートグループを取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>指定された行および列に基づいて、データの z 値を設定します。</summary>
      <param name="column">列インデックス。</param>
      <param name="row">行インデックス。</param>
      <param name="value">指定された行と列の位置にある z 値。</param>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataSetPoint">
      <summary>ポイントデータレイアウトのデータを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetPoint.#ctor">
      <summary>Chart3DDataSetPoint オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetPoint.SeriesCollection">
      <summary>ポイント系列のコレクションを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection">
      <summary>チャートの 3D ポイント系列のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.Add(C1.Win.FlexReport.Chart.Chart3DPointSeries)">
      <summary>既存のポイント系列をコレクションに追加します。</summary>
      <param name="series">追加するポイント系列。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.AddNewSeries">
      <summary>新しいポイント系列をコレクションに追加します。</summary>
      <returns>新しく追加されたポイント系列。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるポイント系列を削除します。</summary>
      <param name="index">削除するポイント系列のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.Remove(C1.Win.FlexReport.Chart.Chart3DPointSeries)">
      <summary>コレクションから既存のポイント系列を削除します。</summary>
      <param name="series">削除するポイント系列。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPointSeries">
      <summary>ポイントデータレイアウトの 1 つのデータ系列を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeries.#ctor">
      <summary>Chart3DPointSeries オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Visible">
      <summary>ポイント系列の表示/非表示を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Label">
      <summary>ポイント系列のラベルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Connected">
      <summary>3D 系列ポイントを線で結ぶかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.LineStyle">
      <summary>色、太さ、パターンなどの系列の線スタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.SymbolStyle">
      <summary>色、サイズ、形などの系列のシンボルスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Points">
      <summary>ポイント系列のポイントのコレクションを取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeries.ToString">
      <summary>ポイント系列を表す文字列を取得します。</summary>
      <returns>ポイント系列のラベルが空でない場合はラベル、そうでない場合はクラス名。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPointsCollection">
      <summary>チャートの 3D ポイントのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.Add(C1.Win.FlexReport.Chart.Chart3DPoint)">
      <summary>既存のデータポイントをコレクションに追加します。</summary>
      <param name="point">追加するデータポイント。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.AddNewPoint">
      <summary>新しいデータポイントをコレクションに追加します。</summary>
      <returns>新しく追加されたデータポイント。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるデータポイントを削除します。</summary>
      <param name="index">削除するデータポイントのインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.Remove(C1.Win.FlexReport.Chart.Chart3DPoint)">
      <summary>既存のデータポイントをコレクションから削除します。</summary>
      <param name="point">削除するデータポイント。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPoint">
      <summary>3D 空間内のポイントを表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPoint.X">
      <summary>ポイントの X 座標を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPoint.Y">
      <summary>ポイントの Y 座標を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPoint.Z">
      <summary>ポイントの Z 座標を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPoint.ToString">
      <summary>ポイントを表す文字列を取得します。</summary>
      <returns>X、Y、および Z の値を含む文字列。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DData.UnboundSeriesList">
      <summary>非連結系列のコレクションを取得します。</summary>
      <remarks>このプロパティが空でない場合、チャートには非連結系列だけが表示されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection">
      <summary>非連結チャートデータ系列の定義のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.Add(C1.Win.FlexReport.Chart.ChartUnboundDataSeries)">
      <summary>既存のデータ系列をコレクションに追加します。</summary>
      <param name="series">追加するデータ系列。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.AddNewSeries">
      <summary>新しいデータ系列をコレクションに追加します。</summary>
      <returns>新しく追加されたデータ系列。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにあるデータ系列を削除します。</summary>
      <param name="index">削除するデータ系列のインデックス。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.Remove(C1.Win.FlexReport.Chart.ChartUnboundDataSeries)">
      <summary>コレクションから既存のデータ系列を削除します。</summary>
      <param name="series">削除するデータ系列。</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartUnboundDataSeries">
      <summary>チャートの非連結データ系列の定義を表します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.X">
      <summary>X データを管理する配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y">
      <summary>Y データを管理する配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y1">
      <summary>Y1 データを管理する配列を取得または設定します。</summary>
      <remarks>Y1 データは、Hi-Lo、Hi-Lo-Open-Close、ローソク足、バブルの各チャートで使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y2">
      <summary>Y2 データを管理する配列を取得または設定します。</summary>
      <remarks>Y2 データは、Hi-Lo-Open-Close チャートとローソク足チャートで使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y3">
      <summary>Y3 データを管理する配列を取得または設定します。</summary>
      <remarks>Y3 データは、Hi-Lo-Open-Close チャートとローソク足チャートで使用されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.SeriesData">
      <summary>現在の ChartUnboundDataSeries オブジェクトを取得します。このプロパティは、プロパティブラウザでの使用だけを目的としています。コードでは使用できません。</summary>
      <remarks>
        <para>利便性を考慮して、プロパティブラウザで SeriesData プロパティを編集することで、すべての関連する ChartUnboundDataSeries データ配列を同時に編集できます。データ配列は、現在の ChartType の表示に使用される場合にのみ、関連があると見なされます。</para>
        <para>たとえば、XYPlot の SeriesData を編集すると、X および Y のデータ配列を含む データエディタが呼び出されます。また、ローソク足チャートの SeriesData を編集すると、X、Y、Y1、Y2、Y3 の各データ配列を含むデータエディタが呼び出されます。</para>
        <para>SeriesData プロパティは、エディタの呼び出しを可能にするプレースホルダに過ぎないため、プロパティブラウザ内での使用だけを目的としています。返される値は、このプロパティが含まれるオブジェクトです。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.GetChartGroup">
      <summary>内部使用専用。このデータ系列を含むチャートグループを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle">
      <summary>辺のパラメータを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="parent">親のスタイル。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.Rounding">
      <summary>四角形要素の丸みの半径を取得または設定します。Scalable プロパティが true の場合は、相対単位で測定されます。そうでない場合は、ピクセル単位になります。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ShouldSerializeRounding">
      <summary>Rounding がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ResetRounding">
      <summary>Rounding をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.Width">
      <summary>要素の辺の幅を取得または設定します。Scalable プロパティが true の場合は、相対単位で測定されます。そうでない場合は、ピクセル単位になります。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ShouldSerializeWidth">
      <summary>Width がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ResetWidth">
      <summary>Width をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle">
      <summary>ライトのパラメータを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="parent">親のスタイル。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Focus">
      <summary>ライトの焦点の位置を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeFocus">
      <summary>Focus がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetFocus">
      <summary>Focus をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Gradient">
      <summary>ライトグラデーションの種類を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeGradient">
      <summary>Gradient がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetGradient">
      <summary>Gradient をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Intensity">
      <summary>ライトの強度を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeIntensity">
      <summary>Intensity がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetIntensity">
      <summary>Intensity をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Scale">
      <summary>ライトのスケールを取得または設定します。スケールが 1 より小さい場合は、ライトパターンが 要素全体で繰り返されます。LightShapeEnum.Rectangle でのみ使用されます。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeScale">
      <summary>Scale がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetScale">
      <summary>Scale をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Shape">
      <summary>ライトの形状を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeShape">
      <summary>Shape がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetShape">
      <summary>Shape をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Shift">
      <summary>
        ライトシフトを取得または設定します。
        <see cref="F:C1.Win.FlexReport.Chart.ChartLightShape.Ellipse" />でのみ使用されます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeShift">
      <summary>Shift がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetShift">
      <summary>Shift をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Size">
      <summary>
        ライトスポットのサイズを取得または設定します。
        <see cref="F:C1.Win.FlexReport.Chart.ChartLightShape.Ellipse" />でのみ使用されます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeSize">
      <summary>Size がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetSize">
      <summary>Size をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle">
      <summary>影のパラメータを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="parent">親のスタイル。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.Offset">
      <summary>影のオフセットを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ShouldSerializeOffset">
      <summary>Offset がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ResetOffset">
      <summary>Offset をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.Soft">
      <summary>影の形状をソフトにするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ShouldSerializeSoft">
      <summary>Soft がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ResetSoft">
      <summary>Soft をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.Transparency">
      <summary>影の透明度を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ShouldSerializeTransparency">
      <summary>Transparency がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ResetTransparency">
      <summary>Transparency をデフォルト状態にリセットします。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions">
      <summary>色オプションを表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
        <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="parent">親のスタイル。</param>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.Brightness">
      <summary>-100 から 100 の間の輝度補正値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ShouldSerializeBrightness">
      <summary>Brightness がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ResetBrightness">
      <summary>Brightness をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.HueShift">
      <summary>0 から 359 の間の色相シフトを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ShouldSerializeHueShift">
      <summary>HueShift がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ResetHueShift">
      <summary>HueShift をデフォルト状態にリセットします。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.Saturation">
      <summary>-100 から 100 の間の彩度補正値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ShouldSerializeSaturation">
      <summary>Saturation がデフォルト状態の場合は、false を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ResetSaturation">
      <summary>Saturation をデフォルト状態にリセットします。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderToFilter(C1.Win.C1Document.Export.ExportFilter)">
      <summary>
        レポートを
        <see cref="!:ExportFilter2" />オブジェクトにレンダリングします。
      </summary>
      <param name="filter">レポートをレンダリングするエクスポートフィルタ。</param>
      <remarks>
        <para>
          <see cref="T:C1.Win.FlexReport.C1FlexReport" />には、レポートを HTML、PDF、RTF、Excel などの形式にエクスポートできる いくつかのエクスポートフィルタが組み込まれています。
        </para>
        <para>これらの基本フィルタの派生クラスを作成することで、独自のフィルタを作成できます。</para>
      </remarks>
      <param name="filter">使用するエクスポータ。</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderToFilterAsync(C1.Win.C1Document.Export.ExportFilter)">
      <summary>
        <see cref="!:RenderToFilter(Export.Exporter)" />メソッドの非ブロック（非同期）バージョン。
      </summary>
      <param name="filter">使用するエクスポータ。</param>
      <returns>非同期の値オブジェクト。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Field.LineSpacing">
      <summary>
        フィールド内のテキストの行スペーシングをパーセント単位で取得または設定します。デフォルトは 100 で、通常の行スペーシングです。
        <para>
          <see cref="P:C1.Win.FlexReport.Field.RTF" />が
          <b>true</b>の場合、このプロパティは無視されます。
        </para>
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.TextAngle">
      <summary>フィールド内でテキストを回転させる角度を取得または設定します（バーコードを含む）。</summary>
      <remarks>一部の出力/エクスポート形式（RTF、プレーンテキストなど）は、テキストの回転をサポートしません。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.FieldBase" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.TextAngle">
      <summary>フィールド内でテキストを回転させる角度を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.LineSpacing">
      <summary>フィールド内のテキストの行スペーシングをパーセント単位で取得または設定します。デフォルトは 100 で、通常の行スペーシングです。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.TextFitMode">
      <summary>
        テキストをどのようにフィールドの境界内に収めるかを示す値を取得または設定します。
        <b>AutoSize</b>- フォントのサイズを自動的に調整してテキストを収めます。
        <b>AutoCharSpacing</b>- 指定された範囲に収まるようにテキストが均等に配置されます。均等配置は、単語ではなく文字ごとに行われ、フィールドの幅がデフォルトのテキストの幅より狭い場合でも考慮されます。
        <see cref="P:C1.Win.FlexReport.TextFieldBase.TextFitMode" />が
        <b>None</b>でない場合、
        <see cref="P:C1.Win.FlexReport.TextFieldBase.WordWrap" />プロパティは無視され、テキストは強制改行だけで改行されます。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.OnSerializeAdded">
      <summary>親レポートのフィールドコレクションにフィールドを追加した後でアクションをポストします。</summary>
      <remarks>このメソッドの呼び出し時に ParentReport が null ではありません。</remarks>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor(System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.TextField" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="text">フィールドのテキスト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.TextField" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="name">フィールドの名前。</param>
      <param name="text">フィールドのテキスト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        <see cref="T:C1.Win.FlexReport.TextField" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="name">フィールドの名前。</param>
      <param name="text">フィールドのテキスト。</param>
      <param name="left">このフィールドを含むセクションに対する新しいフィールドの左端の座標（ツイップ単位）。</param>
      <param name="top">このフィールドを含むセクションに対する新しいフィールドの上端の座標（ツイップ単位）。</param>
      <param name="width">新しいフィールドの幅（ツイップ単位）。</param>
      <param name="height">新しいフィールドの高さ（ツイップ単位）。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SubSection">
      <summary>
        このフィールドを含む
        <see cref="P:C1.Win.FlexReport.FieldBase.SubSection" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Text">
      <summary>
        この
        <see cref="T:C1.Win.FlexReport.Watermark" />の表示に使用されるテキストを取得または設定します。このプロパティは、
        <see cref="P:C1.Win.FlexReport.Watermark.Picture" />が null の場合にのみ使用されます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.WritingMode">
      <summary>水平方向（デフォルト）、垂直方向に左から右へなどのテキストの書字モードを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Align">
      <summary>ウォーターマーク内にテキストをどのように配置するかを決定する値を取得または設定します。</summary>
      <seealso cref="T:C1.Win.FlexReport.FieldAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.ForeColor">
      <summary>テキストの前景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.TextAngle">
      <summary>ウォーターマーク内でテキストを回転させる角度を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.WordWrap">
      <summary>自動ワードラップを行うかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Font">
      <summary>テキストフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.LineSpacing">
      <summary>ウォーターマーク内のテキストの行スペーシングをパーセント単位で取得または設定します。デフォルトは 100 で、通常の行スペーシングです。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.TextFitMode">
      <summary>
        テキストをどのようにウォーターマークの境界内に収めるかを示す値を取得または設定します。
        <b>AutoSize</b>- フォントのサイズを自動的に調整してテキストを収めます。
        <b>AutoCharSpacing</b>- 指定された範囲に収まるようにテキストが均等に配置されます。均等配置は、単語ではなく文字ごとに行われ、フィールドの幅がデフォルトのテキストの幅より狭い場合でも考慮されます。
        <see cref="P:C1.Win.FlexReport.Watermark.TextFitMode" />が
        <b>None</b>でない場合、
        <see cref="P:C1.Win.FlexReport.Watermark.WordWrap" />プロパティは無視され、テキストは強制改行だけで改行されます。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Opacity">
      <summary>ウォーターマークの不透明度レベルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.EnableAggregatesOnReportFields">
      <summary>レポートフィールドを集計関数で使用できるかどうかを示す値を取得または設定します。このプロパティを true に設定すると、C1Report との互換性が向上します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderLeft">
      <summary>サブセクション内の現在のフィールドの実際の左位置を取得します。このプロパティはレポートのレンダリング中にのみ使用できます。そうでない場合は、-1 を返します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderTop">
      <summary>サブセクション内の現在のフィールドの実際の上位置を取得します。このプロパティはレポートのレンダリング中にのみ使用できます。そうでない場合は、-1 を返します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderWidth">
      <summary>現在のフィールドの実際の幅を取得します。このプロパティはレポートのレンダリング中にのみ使用できます。そうでない場合は、-1 を返します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderHeight">
      <summary>現在のフィールドの実際の高さを取得します。このプロパティはレポートのレンダリング中にのみ使用できます。そうでない場合は、-1 を返します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.Watermark.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns>現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.Axis">
      <summary>FlexChartField 内の 1 つの軸を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Axis.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.Axis" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Axis.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.Axis" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Position">
      <summary>軸位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Origin">
      <summary>軸が直交軸と交差する位置の値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Reversed">
      <summary>軸を反転（上から下または右から左）するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Labels">
      <summary>軸ラベルを表示すかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.LabelAngle">
      <summary>軸ラベルの回転角度を取得または設定します。</summary>
      <remarks>この角度は、-90 から 90 の有効な値で測定されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Format">
      <summary>軸ラベルに使用される書式文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Title">
      <summary>軸の横に表示されるタイトルテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.TitleStyle">
      <summary>軸タイトルのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MajorTickMarks">
      <summary>軸の目盛りマークの場所を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MajorGrid">
      <summary>軸にグリッド線を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MajorGridStyle">
      <summary>主グリッドのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MajorUnit">
      <summary>軸ラベル間の単位数を取得または設定します。</summary>
      <remarks>軸に日付値が含まれる場合、単位は日数です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MinorTickMarks">
      <summary>小目盛りマークの場所を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MinorGrid">
      <summary>軸に副グリッド線を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MinorGridStyle">
      <summary>副グリッドのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.MinorUnit">
      <summary>小目盛りとグリッド線の間の単位数を取得または設定します。</summary>
      <remarks>軸に日付値が含まれる場合、単位は日数です。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.LogBase">
      <summary>軸の対数の底を取得または設定します。</summary>
      <remarks>底が NaN（デフォルト値）の場合、軸は線形目盛りを使用します。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.AxisLine">
      <summary>軸線が表示されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.LabelAlignment">
      <summary>軸ラベルの配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Min">
      <summary>軸に表示される最小値を取得または設定します。</summary>
      <remarks>最小値が NaN（デフォルト値）の場合、最小値は自動的に計算されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Max">
      <summary>軸に表示される最大値を取得または設定します。</summary>
      <remarks>最大値が NaN（デフォルト値）の場合、最大値は自動的に計算されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.Style">
      <summary>軸スタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Axis.OverlappingLabels">
      <summary>重なった軸ラベルの処理方法を示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.AxisX">
      <summary>FlexChartField 内のデフォルトの X 軸を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.AxisX.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.AxisX" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.AxisY">
      <summary>FlexChartField 内のデフォルトの Y 軸を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.AxisY.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.AxisY" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.ChartNamedObject">
      <summary>名前付きフレックスチャートオブジェクトの抽象基本クラス。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartNamedObject.SetName(System.String)">
      <summary>現在のオブジェクトの名前を設定します。</summary>
      <param name="value">オブジェクトの新しい名前。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartNamedObject.Clone">
      <summary>現在のオブジェクトのクローンを作成します。</summary>
      <returns>新しく作成されたクローン。</returns>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartNamedObject.Name">
      <summary>現在のオブジェクトの一意の名前を取得または設定します。指定された名前を持つ項目がオーナーに既に存在する場合は、例外が生成されます。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.ChartObject">
      <summary>フレックスチャートオブジェクトの抽象基本クラス。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartObject.Field">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.FlexChartFieldBase" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartObject.ParentReport">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.ChartOptions">
      <summary>チャートのオプションを指定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartOptions.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.ChartOptions" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartOptions.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.Legend" />オブジェクト。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartOptions.InterpolateNulls">
      <summary>欠損値の解釈方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartOptions.ClusterSize">
      <summary>縦棒グラフと横棒グラフのクラスタのサイズを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartOptions.BubbleMinSize">
      <summary>バブルチャートの最小シンボルサイズを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartOptions.BubbleMaxSize">
      <summary>バブルチャートの最大シンボルサイズを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.ChartStyle">
      <summary>FlexChartField 要素のビジュアルスタイルを指定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartStyle.StrokeColor">
      <summary>
        ストローク色を取得または設定します。
        <b>null</b>はデフォルトの色を示します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartStyle.StrokeWidth">
      <summary>ストロークの幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartStyle.FillColor">
      <summary>
        塗りつぶし色を取得または設定します。
        <b>null</b>はデフォルトの色を示します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartStyle.Font">
      <summary>フォントを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartStyle.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.ChartStyle" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartStyle.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.ChartStyle" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.ChartTitle">
      <summary>チャートタイトル（ヘッダーまたはフッター）を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartTitle.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.ChartTitle" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.ChartTitle.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.ChartTitle" />オブジェクト。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartTitle.Content">
      <summary>タイトルのコンテンツを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartTitle.Border">
      <summary>タイトルが境界線を持つかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartTitle.HorizontalAlignment">
      <summary>タイトルの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartTitle.Style">
      <summary>タイトルのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.ChartTitle.BorderStyle">
      <summary>タイトルの境界線スタイルを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.DataGroup">
      <summary>チャートデータグループ定義を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.DataGroup.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.DataGroup" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.DataGroup.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.DataGroup" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataGroup.Owner">
      <summary>
        このオブジェクトを含む
        <see cref="T:C1.Win.FlexReport.FlexChart.DataGroupCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataGroup.Sort">
      <summary>データグループのソートタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataGroup.GroupExpression">
      <summary>グループ化に使用される式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataGroup.FilterExpression">
      <summary>フィルタ処理に使用される式を取得または設定します。GroupExpression を使用してグループ化した後で、FilterExpression を使用してデータをフィルタ処理します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataGroup.SortExpression">
      <summary>ソート式を取得または設定します。フィルタ処理の後に適用されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataGroup.FilterOutName">
      <summary>フィルタ処理で除外されたすべてのデータを結合した新しいグループの名前を取得または設定します。空の場合、フィルタ処理で除外されたデータは破棄されます。</summary>
      <remarks>空の場合は、除外されたグループが破棄されます。</remarks>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.DataGroupCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChart.DataGroup" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.DataLabel">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChartField" />内のデータポイントに関連付けられたラベルを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.DataLabel.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.DataLabel" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.DataLabel.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.DataLabel" />オブジェクト。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabel.Position">
      <summary>データラベルの位置を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.DataLabelBase">
      <summary>データラベルの基本クラスです。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.DataLabelBase.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.DataLabelBase" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabelBase.Content">
      <summary>データラベルのコンテンツを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabelBase.Border">
      <summary>ラベルが境界線を持つかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabelBase.ConnectingLine">
      <summary>データラベルが、対応するデータポイントとの接続線を持つかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabelBase.Offset">
      <summary>対応するデータポイントからのデータラベルのオフセットをツイップ単位で取得または設定します。0（デフォルト）は自動値を示します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabelBase.Style">
      <summary>データラベルのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.DataLabelBase.BorderStyle">
      <summary>データラベルの境界線スタイルを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.Legend">
      <summary>チャート凡例を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Legend.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.Legend" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Legend.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.Legend" />オブジェクト。
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Legend.Position">
      <summary>凡例の位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Legend.Style">
      <summary>凡例のスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Legend.TitleStyle">
      <summary>凡例タイトルのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Legend.Title">
      <summary>凡例タイトルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Legend.Orientation">
      <summary>凡例の方向を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.Series">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChartField" />内の系列を表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Series.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChart.Series" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Series.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChart.Series" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChart.Series.AssignFrom(System.Object)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChart.Series" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.DataSourceName">
      <summary>
        系列のデータソースの名前を取得または設定します。この名前は、レポートの DataSources コレクション内のデータソースの名前と一致している必要があります。
        <para>
          空の文字列は、
          <see cref="!:FlexChartFieldBase.DataSource" />が使用されることを意味します。
        </para>
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.XExpression">
      <summary>X データの取得に使用される式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.HasYExpressions">
      <summary>
        <see cref="P:C1.Win.FlexReport.FlexChart.Series.YExpressions" />が空でないかどうかを示す値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.YExpressions">
      <summary>Y データの取得に使用される式の配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.YExpression">
      <summary>
        Y データの取得に使用される式を取得または設定します。このプロパティは、
        <see cref="P:C1.Win.FlexReport.FlexChart.Series.YExpressions" />を操作して、インデックス 0 を持つ要素を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Y1Expression">
      <summary>
        Hi-Lo チャート、Hi-Lo-Open-Close チャート、ローソク足チャート、およびバブルチャートの Y1 データの取得に使用される式を取得または設定します。このプロパティは、
        <see cref="P:C1.Win.FlexReport.FlexChart.Series.YExpressions" />を操作して、インデックス 1 を持つ要素を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Y2Expression">
      <summary>
        Hi-Lo チャート、Hi-Lo-Open-Close チャート、およびローソク足チャートの Y2 データの取得に使用される式を取得または設定します。このプロパティは、
        <see cref="P:C1.Win.FlexReport.FlexChart.Series.YExpressions" />を操作して、インデックス 2 を持つ要素を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Y3Expression">
      <summary>
        Hi-Lo チャート、Hi-Lo-Open-Close チャート、およびローソク足チャートの Y3 データの取得に使用される式を取得または設定します。このプロパティは、
        <see cref="P:C1.Win.FlexReport.FlexChart.Series.YExpressions" />を操作して、インデックス 3 を持つ要素を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Label">
      <summary>
        系列のラベルを導出する
        <see cref="T:C1.Win.FlexReport.ScriptStringValue" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Style">
      <summary>系列のスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.AltStyle">
      <summary>系列の代替スタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.ChartType">
      <summary>系列のチャートタイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Visibility">
      <summary>系列の表示/非表示を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.SymbolStyle">
      <summary>系列のシンボルスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.SymbolSize">
      <summary>この系列をレンダリングするために使用されるシンボルのサイズ（ツイップ単位）を取得または設定します。Scatter、LineSymbols、および SplineSymbols チャートタイプに適用されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.SymbolMarker">
      <summary>系列の各データポイントで使用するマーカーの形状を取得または設定します。Scatter、LineSymbols、および SplineSymbols チャートタイプに適用されます。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChart.Series.Hyperlink">
      <summary>系列に関連付けられているハイパーリンクを取得します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChart.SeriesCollection">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChart.Series" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChartField">
      <summary>
        <b>FlexChart</b>コントロールを使用して実装されているチャートを含むレポートフィールドを表します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChartField.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChartField" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChartField.CreateSame">
      <summary>このオブジェクトと同じクラスのインスタンスを作成します。</summary>
      <returns>
        作成された
        <see cref="T:C1.Win.FlexReport.FlexChartField" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChartField.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChartField" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">オブジェクトの名前をコピーするかどうかを示します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.CategoryGroups">
      <summary>X 軸のラベルを提供するカテゴリグループのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.SeriesGroups">
      <summary>追加のデータレベルとして使用されるオプションの系列グループのコレクションを取得します。</summary>
      <remarks>オプションで、追加のデータレベルを提供します（たとえば、国別の注文を年別でも細分できます）。系列のラベルは、凡例に表示されます。</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.Series">
      <summary>系列のコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.XLabelExpression">
      <summary>X 軸上のデータラベルの生成に使用される式を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.AxisX">
      <summary>チャートの x 軸を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.AxisY">
      <summary>チャートの y 軸を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.DataLabel">
      <summary>チャートのデータラベルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.Options">
      <summary>さまざまなチャートオプションを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.PlotMargin">
      <summary>プロット領域のマージンを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.Rotated">
      <summary>X が垂直、Y が水平になるように軸を反転するかどうかを示す値を 取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.Stacking">
      <summary>データ積層を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartField.ChartType">
      <summary>チャートタイプを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.FlexChartFieldBase">
      <summary>
        <b>FlexChart</b>ベースのチャートを含むレポートフィールドの抽象基本クラス。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChartFieldBase.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.FlexChartFieldBase" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChartFieldBase.GetDataSource">
      <summary>
        <see cref="P:C1.Win.FlexReport.FlexChartFieldBase.DataSourceName" />プロパティでこのフィールドに対して指定されている
        <see cref="T:C1.Win.FlexReport.DataSource" />を返します。
        <see cref="P:C1.Win.FlexReport.FlexChartFieldBase.DataSourceName" />が null または空の場合は、null を返します。指定された名前を持つ
        <see cref="T:C1.Win.FlexReport.DataSource" />が見つからない場合は、例外を生成します。
      </summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.FlexChartFieldBase.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
        プロパティを別の
        <see cref="T:C1.Win.FlexReport.FlexChartFieldBase" />から現在のオブジェクトに割り当てます（コピーします）。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
      <param name="assignName">オブジェクトの名前をコピーするかどうかを示します。</param>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.DataSourceName">
      <summary>チャートのデータソースの名前を取得または設定します。この名前は、レポートの DataSources コレクション内のデータソースの名前と一致している必要があります。空の文字列は、メインデータソースが使用されることを意味します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.Font">
      <summary>チャートで使用されるデフォルトフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.Header">
      <summary>チャートヘッダーを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.Footer">
      <summary>チャートフッターを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.Legend">
      <summary>チャートの凡例を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.PlotStyle">
      <summary>プロット領域（軸内の領域）のスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.FlexChartFieldBase.Palette">
      <summary>チャートパレットを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetBookmark.Report">
      <summary>
        開かれる
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトへの参照を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetBookmark.ParameterValues">
      <summary>
        レポートのパラメータに割り当てられる、名前付きの値のリストを含む
        <see cref="T:C1.Win.FlexReport.ReportParameterValues" />コレクションを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetScript">
      <summary>
        スクリプトを実行する
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetBase" />を記述します。
        <para>ビュー内のハイパーリンクをクリックすると、指定されたスクリプトが実行され、レポートが再生成されます。</para><para>データソースがまだ開いていないときにスクリプトが実行されるので、フィールドの値は利用できません。</para><para>このスクリプトは、レポートパラメータの値、レポートフィールドのプロパティ、セクションなどを変更するために使用できます。</para>
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetScript.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportLinkTargetScript" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetScript.OnNavigate">
      <summary>実行されるスクリプトを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportParameterValue">
      <summary>レポートのパラメータ値を表します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportParameterValue.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportParameterValue" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportParameterValue.AssignFrom(System.Object)">
      <summary>
        別の
        <see cref="T:C1.Win.FlexReport.ReportParameterValue" />オブジェクトからプロパティをコピーします。
      </summary>
      <param name="source">プロパティのコピー元のオブジェクト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameterValue.ParentReport">
      <summary>
        この値を含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameterValue.Owner">
      <summary>
        この値を含む
        <see cref="!:SubreportParameterValus" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameterValue.Value">
      <summary>
        パラメータの値を導出する
        <see cref="T:C1.Win.FlexReport.ScriptObjectValue" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.IReportParameterValuesOwner">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportParameterValues" />を所有するクラスで実装する必要があります。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportParameterValues">
      <summary>
        <see cref="T:C1.Win.FlexReport.ReportParameterValue" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameterValues.Owner">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.FlexReport.IReportParameterValuesOwner" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameterValues.Report">
      <summary>
        このコレクションを含む
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ExecuteScriptAction">
      <summary>指定されたスクリプトを実行し、レポートを生成します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.ExecuteScriptAction.#ctor(System.String)">
      <summary>
        <see cref="T:C1.Win.FlexReport.ExecuteScriptAction" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="script">実行するスクリプト。</param>
    </member>
    <member name="P:C1.Win.FlexReport.ExecuteScriptAction.Script">
      <summary>実行するスクリプトを取得します。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.#ctor">
      <summary>
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnLongOperation(System.Double,System.Boolean)">
      <summary>
        オーバーライドされます。
        <see cref="E:C1.Win.C1Document.C1DocumentSource.LongOperation" />イベントを発生させます。
      </summary>
      <param name="complete"></param>
      <param name="canCancel"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.CreateParametersCollection">
      <summary>
        オーバーライドされます。レポートパラメータのリストを含む
        <see cref="T:C1.Win.FlexReport.ReportParameterCollection" />コレクションを作成します。
      </summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Init">
      <summary>
        オーバーライドされます。この
        <see cref="T:C1.Win.FlexReport.C1FlexReport" />インスタンスの追加の初期化を行います。
      </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(C1.Win.C1Document.Serialization.XmlDocumentWrapperBase)">
      <summary>
        <see cref="T:C1.Win.C1Document.Serialization.XmlDocumentWrapperBase" />に含まれるレポートのリストを取得します。
      </summary>
      <param name="doc">
        <see cref="T:C1.Win.C1Document.Serialization.XmlDocumentWrapperBase" />オブジェクトへの参照。
      </param>
      <returns>ドキュメント内のすべてのレポートの名前を含む文字列配列。</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.Xml.Linq.XDocument,System.String,System.Boolean@)">
      <summary>
        <see cref="T:System.Xml.Linq.XDocument" />からレポートをロードします。
      </summary>
      <param name="doc">
        レポートを含む
        <see cref="T:System.Xml.Linq.XDocument" />。
      </param>
      <param name="reportName">ロードするレポートの名前（大文字小文字は区別されない）。null にでき、その場合は最初のレポートがロードされます。</param>
      <param name="converted">出力：ロードされたレポート定義がレガシー C1Report 形式から変換された場合に true に設定されるフラグ。</param>
      <remarks>
        このメソッドは、
        <see cref="P:C1.Win.FlexReport.C1FlexReport.BasePath" />プロパティを
        <paramref name="doc" />のロード元のディレクトリに更新します。ファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.Linq.XDocument)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.Xml.Linq.XDocument,System.String)">
      <summary>
        <see cref="T:System.Xml.Linq.XDocument" />からレポートをロードします。
      </summary>
      <param name="doc">
        レポートが含まれる
        <see cref="T:System.Xml.XmlDocument" />への参照。
      </param>
      <param name="reportName">ファイルから取得するレポートの名前（大文字小文字は区別されない）。</param>
      <remarks>
        このファイルに含まれるレポートのリストを取得するには、
        <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.Linq.XDocument)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderAsyncEx">
      <summary>
        <see cref="M:C1.Win.FlexReport.C1FlexReport.Render" />メソッドの非ブロック（非同期）バージョン。このメソッドは、基本クラスの
        <see cref="M:C1.Win.C1Document.C1DocumentSource.GenerateAsyncEx" />メソッドのショートカットです。
      </summary>
      <seealso cref="M:C1.Win.FlexReport.C1FlexReport.Render" />
      <returns>
        非同期操作を管理するために使用できる
        <see cref="T:C1.Win.C1Document.IAsyncActionWithProgress`1" />インタフェース。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderToFilterAsyncEx(C1.Win.C1Document.Export.ExportFilter)">
      <summary>
        <see cref="M:C1.Win.FlexReport.C1FlexReport.RenderToFilter(C1.Win.C1Document.Export.ExportFilter)" />メソッドの非ブロック（非同期）バージョン。このメソッドは、基本クラスの
        <see cref="M:C1.Win.C1Document.C1DocumentSource.ExportAsyncEx(C1.Win.C1Document.Export.ExportFilter)" />メソッドのショートカットです。
      </summary>
      <param name="filter">使用するエクスポータ。</param>
      <returns>
        非同期操作を管理するために使用できる
        <see cref="T:C1.Win.C1Document.IAsyncActionWithProgress`1" />インタフェース。
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.Linq.XDocument)">
      <summary>
        <see cref="T:System.Xml.Linq.XDocument" />に含まれるレポートのリストを取得します。
      </summary>
      <param name="doc">
        <see cref="T:System.Xml.Linq.XDocument" />オブジェクトへの参照。
      </param>
      <returns>
        <b>XDocument</b>内のすべてのレポートの名前を含む文字列配列。
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.RenderReportAction">
      <summary>指定されたパラメータセットを使用してレポートをレンダリングします。</summary>
    </member>
    <member name="M:C1.Win.FlexReport.RenderReportAction.#ctor(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
        <see cref="T:C1.Win.FlexReport.RenderReportAction" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="reportTemplate">レポート定義を含む配列。</param>
      <param name="parameterValues">レポートパラメータの初期値。</param>
    </member>
    <member name="P:C1.Win.FlexReport.RenderReportAction.ReportTemplate">
      <summary>レポートテンプレートを含むバイト配列を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.RenderReportAction.ParameterValues">
      <summary>レポートパラメータの初期値を取得します。</summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.IgnoreMarginsForEmptyFields">
      <summary>
        生成されたレポートレイアウトにおいて、
        <see cref="P:C1.Win.FlexReport.FieldBase.AutoHeight" /> または <see cref="P:C1.Win.FlexReport.FieldBase.AutoWidth" /> が
        <see cref="F:C1.Win.FlexReport.AutoSizeBehavior.CanShrink" /> に設定された空のフィールドの
        マージンおよび境界線の高さや幅を 0 にするかどうかを
        示す値を取得または設定します。デフォルトは false です。これを true に設定すると、
        C1Report との互換性が向上します。
      </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.FireOnFormatForEachInstanceOfRepeatedGroupSection">
      <summary>
        OnFormat スクリプトをグループセクションが繰り返されるたびに実行するか、
        最初のグループセクションでのみ実行するかを示す値を取得または設定します。
        Repeat プロパティが true に設定されているグループにのみ適用されます。
      </summary>
    </member>
  </members>
</doc>